{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/models/setup.ts","webpack:///./src/core/models/errors.ts","webpack:///./src/core/utlis/functions.ts","webpack:///./src/core/utlis/logger.ts","webpack:///./src/core/utlis/statics.ts","webpack:///./src/core/factories/logger.ts","webpack:///./src/app/managers/element.ts","webpack:///./src/app/observers/mutations.ts","webpack:///./src/app/managers/toast.ts","webpack:///./src/app/helpers/collection.ts","webpack:///./src/app/managers/collection.ts","webpack:///./src/core/utlis/interactions.ts","webpack:///./src/core/utlis/dictionary.ts","webpack:///./src/app/managers/cache.ts","webpack:///./src/core/bus/bus.ts","webpack:///./src/core/bus/handlers.ts","webpack:///./src/core/bus/executors.ts","webpack:///./src/core/styles/appender.ts","webpack:///./src/app/handlers/colors.ts","webpack:///./src/core/models/utils.ts","webpack:///./src/core/factories/interactions.ts","webpack:///./src/app/managers/plugins.ts","webpack:///./src/app/instance.ts","webpack:///./src/plugins/light/listener.ts","webpack:///./src/plugins/light/light.ts","webpack:///./src/app/handlers/base.ts","webpack:///./src/components/icon/icon.ts","webpack:///./src/components/circle/circle.ts","webpack:///./src/components/spinner/spinner.ts","webpack:///./src/app/initializer.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CuiSetup","this","autoLightMode","plugins","init","prefix","logLevel","cacheSize","animationTime","animationTimeShort","animationTimeLong","CuiSetupInit","app","interaction","ErrorBase","Error","message","super","setPrototypeOf","ItemNotFoundError","ArgumentError","CuiBusError","CuiInstanceInitError","is","val","typecheck","Array","isArray","length","getName","sleep","timeout","Promise","resolve","setTimeout","getMatchingAttribute","element","attributes","attr","len","attribute","hasAttribute","getRangeValue","min","max","are","find","item","CuiLogger","level","component","id","functionName","console","log","prepString","error","warn","e","exception","stack","callback","start","Date","now","toLocaleString","CLASSES","ICONS","close","accordion","special_menu","special_fail","special_success","CSS_THEMES","light","base","muted","active","dark","accent","secondary","success","warning","STATICS","elements","utils","className","classList","contains","remove","add","classes","interactions","fetch","mutate","attributeName","reduce","current","push","getAttribute","attributeValue","setAttribute","removeAttribute","onClick","addEventListener","eventName","lock","forEach","index","unlock","delay","setup","change","openClass","animationClass","closeClass","args","components","subtree","attributeFilter","debug","MutationObserver","mutationCallback","observe","disconnect","mutations","observer","mutation","type","target","$handler","handle","handleChildListMutation","onMutation","then","addedLen","addedNodes","removedLen","removedNodes","handleAddedNodes","handleRemovedNodes","nodes","node","styleAppender","append","getStyle","toastElement","document","querySelector","createElement","body","appendChild","innerHTML","currentElement","nextElement","animIn","animOut","count","newIndex","animClassIn","animClassOut","duration","addAnimationClass","setFinalClasses","setElements","setToggle","set","check","newIdx","getCurrentIndex","verifyIndex","setCurrent","setCurrentWithAnimation","FastDom","isScheduled","raf","window","requestAnimationFrame","writes","reads","ctx","createTask","schedule","tasks","task","shift","recursion","flush","rec","run","SyncInteractions","isRunning","x","throwOnEmptyKey","containsKey","indexOf","splice","maxSize","has","update","clean","refresh","clear","keys","emitHandler","getCuid","ev","isAttached","event","executor","events","promises","execute","all","apply","style","head","getElementsByTagName","text","createTextNode","documentElement","setPropertyIn","toCssString","colors","baseColor","mutedColor","clone","lighten","activeColor","darken","setProperty","factor","propertyName","initialSetup","fromInit","cache","bus","flag","filter","plugin","mutatedAttributes","map","initElements","querySelectorAll","join","matching","setComponents","setAttributes","setPlugins","emit","stop","selector","existing","newElement","put","manager","show","context","on","LightModeListener","descriptor","matchMedia","removeEventListener","autoLightSetup","autoLight","matches","setLightMode","autoLightInit","description","componentName","_log","CuiIconComponent","iconAttr","iconStr","iconSvg","build","svg","childNodes","insertBefore","iconElement","firstChild","svgString","scale","created","htmlString","template","content","children","IconScaleAppender","width","parseInt","height","toString","getTotalLength","readStyle","strokeDashoffset","progress","updateStyle","spinnerName","svgIcon","addSpinner","settings","appPrefix","result","icons","icon","cuiInit","initializer"],"mappings":"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","file":"cui-light.index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { CuiLogLevel, CuiInteractionsType } from \"../utlis/types\";\r\nimport { CuiColorSet } from \"./colors\";\r\n\r\nexport class CuiSetup {\r\n    prefix?: string;\r\n    logLevel?: CuiLogLevel;\r\n    cacheSize?: number;\r\n    autoLightMode?: boolean;\r\n    animationTime?: number;\r\n    animationTimeShort?: number;\r\n    animationTimeLong?: number;\r\n    // colorLight?: CuiColorSet;\r\n    // colorDark?: CuiColorSet;\r\n    // colorAccent?: CuiColorSet;\r\n    // colorSecondary?: CuiColorSet;\r\n    // colorSuccess?: CuiColorSet;\r\n    // colorError?: CuiColorSet;\r\n    // colorWarning?: CuiColorSet;\r\n    plugins: any;\r\n\r\n    constructor() {\r\n        this.autoLightMode = false;\r\n        this.plugins = {};\r\n    }\r\n\r\n    fromInit(init: CuiSetupInit): CuiSetup {\r\n        this.prefix = init.prefix;\r\n        this.logLevel = init.logLevel;\r\n        this.cacheSize = init.cacheSize;\r\n        this.autoLightMode = init.autoLightMode;\r\n        this.animationTime = init.animationTime;\r\n        this.animationTimeShort = init.animationTimeShort;\r\n        this.animationTimeLong = init.animationTimeLong;\r\n        // this.colorLight = init.colorLight;\r\n        // this.colorDark = init.colorDark;\r\n        // this.colorAccent = init.colorAccent;\r\n        // this.colorSecondary = init.colorSecondary;\r\n        // this.colorSuccess = init.colorSuccess;\r\n        // this.colorError = init.colorError;\r\n        // this.colorWarning = init.colorWarning;\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nexport class CuiSetupInit {\r\n    prefix?: string;\r\n    app?: string;\r\n    interaction?: CuiInteractionsType;\r\n    logLevel?: CuiLogLevel;\r\n    cacheSize?: number;\r\n    autoLightMode?: boolean;\r\n    animationTime?: number;\r\n    animationTimeShort?: number;\r\n    animationTimeLong?: number;\r\n    // colorLight?: CuiColorSet;\r\n    // colorDark?: CuiColorSet;\r\n    // colorAccent?: CuiColorSet;\r\n    // colorSecondary?: CuiColorSet;\r\n    // colorSuccess?: CuiColorSet;\r\n    // colorError?: CuiColorSet;\r\n    // colorWarning?: CuiColorSet;\r\n\r\n    constructor() {\r\n        this.prefix = 'cui';\r\n        this.app = '$cui';\r\n        this.logLevel = 'warning';\r\n        this.interaction = 'async';\r\n        this.animationTime = 300;\r\n        this.animationTimeShort = 150;\r\n        this.animationTimeLong = 500;\r\n        this.cacheSize = 500;\r\n        this.autoLightMode = false;\r\n    }\r\n}","export class ErrorBase extends Error {\r\n    constructor(name: string, message?: string,) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class ItemNotFoundError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ItemNotFoundError\", message);\r\n    }\r\n}\r\n\r\nexport class ArgumentError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\n\r\nexport class CuiBusError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\n\r\nexport class CuiInstanceInitError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"CuiInstanceInitError\", message);\r\n    }\r\n}\r\n","import { CuiLightMode } from \"./types\";\r\nimport { ArgumentError } from \"../models/errors\";\r\n\r\n/**\r\n * Checks if value is defined an is not null\r\n * Additionally with type check it can check value if it is not empty string or collection or object\r\n * \r\n * @param val - value\r\n * @param typecheck - default true - additional check whether value is not empty (string, collection, object)\r\n * @returns whether value passed all conditions\r\n */\r\nexport function is(val: any, typecheck: boolean = true): boolean {\r\n    if (typeof val !== 'undefined' && val !== null) {\r\n        if (!typecheck) {\r\n            return true;\r\n        } else {\r\n            return !isEmpty(val)\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Checks if value is empty string, array or object\r\n *\r\n *\r\n * @param val - value\r\n * @returns whether value passed all conditions\r\n */\r\nexport function isEmpty(val: any): boolean {\r\n    if (typeof val === \"string\") {\r\n        return val.length === 0\r\n    }\r\n    else if (Array.isArray(val)) {\r\n        return val.length === 0\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getName(prefix: string, name: string) {\r\n    if (!is(prefix) || !is(name)) {\r\n        throw new ArgumentError(\"Missing argument value\")\r\n    }\r\n    return `${prefix}-${name}`\r\n}\r\n\r\nexport function sleep(timeout: number): Promise<boolean> {\r\n    return new Promise(resolve => setTimeout(() => {\r\n        resolve(true)\r\n    }, timeout));\r\n}\r\n\r\n/**\r\n * Creates proper html element from given string\r\n * @param htmlString - string containing html\r\n */\r\nexport function createElementFromString(htmlString: string): Element {\r\n    if (!is(htmlString)) {\r\n        return null;\r\n    }\r\n    let template = document.createElement('template')\r\n    template.innerHTML = htmlString\r\n    return template.content.children.length > 0 ? template.content.children[0] : null;\r\n}\r\n\r\nexport function getMatchingAttribute(element: any, attributes: string[]): string {\r\n    let attr = null;\r\n    let len = attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        let attribute = attributes[i];\r\n        if (element.hasAttribute(attribute)) {\r\n            attr = attribute\r\n            break;\r\n        }\r\n    }\r\n    return attr;\r\n}\r\n\r\nexport function getRangeValue(value: number, min: number, max: number) {\r\n    if (value < min) {\r\n        return min;\r\n    } else if (value > max) {\r\n        return max;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function increaseValue(value: number, amount: number): number {\r\n    return amount < 0 || amount > 1 ? 0 : value + (value * amount);\r\n}\r\n\r\nexport function decreaseValue(value: number, amount: number): number {\r\n    return amount < 0 || amount > 1 ? 0 : value - (value * amount);\r\n}\r\n\r\nexport function clone(object: any): any {\r\n    if (!is(object)) {\r\n        return null;\r\n    }\r\n    return Object.assign({}, object);\r\n}\r\n\r\n// export function getAvgColorRatio(first: CuiColor, second: CuiColor) {\r\n//     let ratio = 0;\r\n//     for (let color in COLORS) {\r\n//         if (color === 'alpha') {\r\n//             ratio += getSingleColorRatio(first.getColorValue(color), second.getColorValue(color), 1);\r\n//         }\r\n//         ratio += getSingleColorRatio(first.getColorValue(color), second.getColorValue(color), 255);\r\n//     }\r\n//     return ratio / COLORS.length;\r\n// }\r\n\r\nexport function getSingleColorRatio(first: number, second: number, max: number): number {\r\n    return Math.abs(((first - second) / max) * 100)\r\n}\r\n\r\n/**\r\n * Creates string containg css selector for array of attributes\r\n * @param attributes - attributes values\r\n */\r\nexport function joinAttributesForQuery(attributes: string[]): string {\r\n    if (!is(attributes)) {\r\n        return \"\"\r\n    }\r\n    return `[${attributes.join('],[')}]`\r\n}\r\n\r\n/**\r\n * Checks light system light mode\r\n * @returns Light Mode - dark/light\r\n */\r\nexport function getSystemLightMode(): CuiLightMode {\r\n    return window.matchMedia &&\r\n        window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n}\r\n\r\n/**\r\n * Verifies whether attributes exist and have some values\r\n * @param attributes attributes list\r\n */\r\nexport function are(...attributes: any[]): boolean {\r\n    if (!is(attributes)) {\r\n        return false\r\n    }\r\n    let result = attributes.find(item => { return is(item) === false })\r\n    return typeof result === \"undefined\";\r\n}","import { CuiLogLevel } from \"./types\";\r\nimport { ICuiLogger } from \"../models/interfaces\";\r\n\r\nexport class CuiLogger implements ICuiLogger {\r\n    level: CuiLogLevel\r\n    component: string;\r\n    id: string;\r\n    constructor(name: string, level: CuiLogLevel) {\r\n        this.level = level\r\n        this.component = name\r\n        this.id = \"-\";\r\n    }\r\n\r\n    setLevel(level: CuiLogLevel) {\r\n        this.level = level\r\n    }\r\n\r\n    setId(id: string) {\r\n        this.id = id\r\n    }\r\n    debug(message: string, functionName?: string): void {\r\n        if (this.level === 'debug') {\r\n            console.log(this.prepString(message, functionName))\r\n        }\r\n    }\r\n    error(message: string, functionName?: string): void {\r\n        if (this.level === 'error' || this.level === 'debug' || this.level === 'warning')\r\n            console.error(this.prepString(message, functionName))\r\n    }\r\n\r\n    warning(message: string, functionName?: string): void {\r\n        if (this.level === 'warning' || this.level === 'debug')\r\n            console.warn(this.prepString(message, functionName))\r\n    }\r\n\r\n    exception(e: Error, functionName?: string): void {\r\n        console.error(this.prepString(`An exception occured: ${e.name}: ${e.message}`, functionName))\r\n        if (this.level === 'debug')\r\n            console.exception(e.stack)\r\n    }\r\n\r\n    performance(callback: () => void, functionName?: string): void {\r\n        if (this.level !== 'debug') {\r\n            return;\r\n        }\r\n        let start = Date.now();\r\n        callback();\r\n        console.log(this.prepString(`Performance measure: ${Date.now() - start}ms`, functionName))\r\n    }\r\n\r\n    private prepString(message: string, functionName?: string) {\r\n        return `[${new Date().toLocaleString()}][${this.component}][${functionName ?? '-'}][${this.id}][${message}]`\r\n    }\r\n}","import { CuiLogLevel } from \"./types\";\r\nimport { CuiColorPair } from \"../models/colors\";\r\n\r\nexport const CLASSES = {\r\n    dark: 'dark',\r\n    animProgress: 'animation-progress',\r\n    print: 'print'\r\n}\r\n\r\nexport const ICONS: any = {\r\n    close: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 1.9999999,1.9999999 18,18\\\"></path><path d=\\\"M 18,1.9999999 1.9999999,18\\\"></path></svg>\",\r\n    accordion: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 5.0000475,7.4490018 10.000024,12.551028 15,7.4490018\\\"></path></svg>\",\r\n    special_menu: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path class=\\\"menu_handle_2\\\" d=\\\"M 1,10 H 19\\\"></path><path class=\\\"menu_handle_1\\\" d=\\\"M 1,4.8571429 H 19\\\"></path><path  class=\\\"menu_handle_3\\\" d=\\\"M 1,15.142857 H 19\\\"></path></svg>\",\r\n    special_fail: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-fail\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7.000001 A 43,43 0 0 1 92.999999,50 43,43 0 0 1 50,92.999999 43,43 0 0 1 7.0000011,50 43,43 0 0 1 50,7.000001 Z\\\"></path><path class=\\\"arm_1\\\" d=\\\"M 28.536809,28.536809 71.342023,71.342023\\\"></path><path class=\\\"arm_2\\\" d=\\\"M 71.342023,28.536809 28.536809,71.342023\\\"></path></svg>\",\r\n    special_success: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-success\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7 A 43,43 0 0 1 93,50 43,43 0 0 1 50,93 43,43 0 0 1 7,50 43,43 0 0 1 50,7 Z\\\"></path><path class=\\\"arm\\\" d=\\\"M 22.988405,48.234784 36.946233,72.410453 75.516456,33.84023\\\"></path></svg>\",\r\n};\r\n\r\nexport const COLORS = ['red', 'green', 'blue', 'alpha']\r\n\r\nexport const CSS_APP_BACKGROUND_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-app-background',\r\n    dark: '--cui-color-dark-app-background'\r\n}\r\n\r\nexport const CSS_COMPONENT_BACKGROUND_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-background',\r\n    dark: '--cui-color-dark-background '\r\n}\r\n\r\nexport const CSS_COMPONENT_BORDER_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-border',\r\n    dark: '--cui-color-dark-border'\r\n}\r\n\r\nexport const CSS_THEMES = {\r\n    light: {\r\n        base: '--cui-color-light-base',\r\n        muted: '--cui-color-light-muted',\r\n        active: '--cui-color-light-active'\r\n    },\r\n    dark: {\r\n        base: '--cui-color-dark-base',\r\n        muted: '--cui-color-dark-muted',\r\n        active: '--cui-color-dark-active'\r\n    },\r\n    accent: {\r\n        base: '--cui-color-primary',\r\n        muted: '--cui-color-primary-muted',\r\n        active: '--cui-color-primary-active'\r\n    },\r\n    secondary: {\r\n        base: '--cui-color-secondary',\r\n        muted: '--cui-color-secondary-muted',\r\n        active: '--cui-color-secondary-active'\r\n    },\r\n    success: {\r\n        base: '--cui-color-success',\r\n        muted: '--cui-color-success-muted',\r\n        active: '--cui-color-success-active'\r\n    },\r\n    warning: {\r\n        base: '--cui-color-warning',\r\n        muted: '--cui-color-warning-muted',\r\n        active: '--cui-color-warning-active'\r\n    },\r\n    error: {\r\n        base: '--cui-color-error',\r\n        muted: '--cui-color-error-muted',\r\n        active: '--cui-color-error-active'\r\n    }\r\n}\r\n\r\n\r\nexport class STATICS {\r\n    static logLevel: CuiLogLevel = 'none';\r\n    static prefix: string = 'cui';\r\n}\r\n\r\nexport const EVENTS = {\r\n    INSTANCE_INITIALIZED: 'instance-initialized',\r\n    INSTANCE_FINISHED: 'instance=finished'\r\n}","import { CuiLogger } from \"../utlis/logger\";\r\nimport { CuiLogLevel } from \"../utlis/types\";\r\nimport { ICuiLogger } from \"../models/interfaces\";\r\nimport { STATICS } from \"../utlis/statics\";\r\n\r\n/**\r\n * \r\n */\r\nexport class CuiLoggerFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param name - component name\r\n     */\r\n    public static get(name: string, logLevel?: CuiLogLevel): ICuiLogger {\r\n        return new CuiLogger(name, logLevel ?? STATICS.logLevel)\r\n    }\r\n}","import { is, are } from \"../../core/utlis/functions\";\r\nimport { ICuiLogger, IUIInteractionProvider, CuiCachable } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { CLASSES } from \"../../core/utlis/statics\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\n\r\nexport class ElementManager implements CuiCachable {\r\n    #elements: Element[];\r\n    #isLocked: boolean;\r\n    #logger: ICuiLogger;\r\n    #cDt: number;\r\n    #utils: CuiUtils;\r\n    constructor(elements: Element[], utils: CuiUtils) {\r\n        this.#elements = elements;\r\n        this.#isLocked = false;\r\n        this.#logger = CuiLoggerFactory.get(\"ElementManager\");\r\n        this.#utils = utils;\r\n        this.#cDt = Date.now();\r\n    }\r\n\r\n    async toggleClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (!element.classList.contains(className)) {\r\n                element.classList.add(className);\r\n            } else {\r\n                element.classList.remove(className);\r\n            }\r\n        }, 'toggleClass');\r\n    }\r\n\r\n    async toggleClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (!classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.add, classes, className);\r\n                } else {\r\n                    this.#utils.interactions.mutate(classes.remove, classes, className);\r\n                }\r\n            }, this)\r\n\r\n        }, 'toggleClassAs');\r\n    }\r\n\r\n    async setClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (!element.classList.contains(className)) {\r\n                element.classList.add(className)\r\n            }\r\n        }, 'setClass');\r\n    }\r\n\r\n    async setClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (!classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.add, classes, className);\r\n                }\r\n            }, this)\r\n\r\n        }, 'setClassAs');\r\n    }\r\n\r\n    async removeClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (element.classList.contains(className)) {\r\n                element.classList.remove(className)\r\n            }\r\n        }, 'removeClass');\r\n    }\r\n\r\n    async removeClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.remove, classes, className);\r\n                }\r\n            }, this)\r\n        }, 'removeClass');\r\n    }\r\n\r\n    getAttribute(attributeName: string): string[] {\r\n        if (!is(attributeName)) {\r\n            return null;\r\n        }\r\n        return this.#elements.reduce<string[]>((val: string[], current: Element) => {\r\n            if (current.hasAttribute(attributeName)) {\r\n                val.push(current.getAttribute(attributeName))\r\n            } else {\r\n                val.push(null);\r\n            }\r\n            return val;\r\n        }, []);\r\n    }\r\n\r\n    async setAttribute(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.setAttribute(attributeName, attributeValue ?? \"\")\r\n        }, 'setAttribute');\r\n    }\r\n\r\n    async setAttributeAs(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.mutate(element.setAttribute, element, attributeName, attributeValue ?? \"\")\r\n        }, 'setAttributeAs');\r\n    }\r\n\r\n    async removeAttribute(attributeName: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.removeAttribute(attributeName)\r\n        }, 'removeAttribute');\r\n    }\r\n\r\n    async removeAttributeAs(attributeName: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.mutate(element.removeAttribute, element, attributeName);\r\n        }, 'removeAttributeAs');\r\n    }\r\n\r\n    async toggleAttribute(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (element.hasAttribute(attributeName)) {\r\n                element.removeAttribute(attributeName)\r\n            } else {\r\n                element.setAttribute(attributeName, attributeValue ?? \"\")\r\n            }\r\n        }, 'toggleAttribute');\r\n    }\r\n\r\n    async toggleAttributeAs(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.fetch(() => {\r\n                if (element.hasAttribute(attributeName)) {\r\n                    this.#utils.interactions.mutate(element.removeAttribute, element, attributeName);\r\n                } else {\r\n                    this.#utils.interactions.mutate(element.setAttribute, element, attributeName, attributeValue ?? \"\")\r\n                }\r\n            }, this)\r\n\r\n        }, 'toggleAttributeAs');\r\n    }\r\n\r\n    async click(onClick: (ev: MouseEvent) => void): Promise<boolean> {\r\n        if (!is(onClick)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.addEventListener('click', onClick);\r\n        }, 'click');\r\n    }\r\n\r\n    async event(eventName: string, callback: any): Promise<boolean> {\r\n        if (!is(eventName) || !is(callback)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.addEventListener(eventName, callback);\r\n        }, 'event');\r\n    }\r\n\r\n    async call(callback: (element: Element, index: Number) => void, functionName?: string): Promise<boolean> {\r\n        if (this.#isLocked) {\r\n            this.#logger.error(\"Element is locked\", functionName)\r\n        }\r\n        this.lock();\r\n        this.#elements.forEach((element, index) => {\r\n            callback(element, index)\r\n        })\r\n        this.unlock();\r\n        return true;\r\n    }\r\n\r\n    async animate(className: string, timeout?: number): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        return this.call((element) => {\r\n            this.change(() => {\r\n                element.classList.add(className);\r\n                element.classList.add(CLASSES.animProgress);\r\n                setTimeout(() => {\r\n                    this.change(() => {\r\n                        element.classList.remove(className);\r\n                        element.classList.remove(CLASSES.animProgress);\r\n                    })\r\n                }, delay)\r\n            })\r\n        });\r\n    }\r\n\r\n    async open(openClass: string, animationClass: string, timeout?: number): Promise<boolean> {\r\n        if (!are(openClass, animationClass)) {\r\n            return false\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        return this.call((element) => {\r\n            this.change(() => {\r\n                element.classList.add(animationClass);\r\n                element.classList.add(CLASSES.animProgress);\r\n                setTimeout(() => {\r\n                    this.change(() => {\r\n                        element.classList.remove(animationClass);\r\n                        element.classList.remove(CLASSES.animProgress);\r\n                        element.classList.add(openClass);\r\n                    })\r\n                }, delay)\r\n            })\r\n        });\r\n    }\r\n\r\n    async close(closeClass: string, animationClass: string, timeout?: number): Promise<boolean> {\r\n        if (!are(closeClass, animationClass)) {\r\n            return false\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        return this.call((element) => {\r\n            this.change(() => {\r\n                element.classList.add(animationClass);\r\n                element.classList.add(CLASSES.animProgress);\r\n                setTimeout(() => {\r\n                    this.change(() => {\r\n                        element.classList.remove(animationClass);\r\n                        element.classList.remove(CLASSES.animProgress);\r\n                        element.classList.remove(closeClass);\r\n                    })\r\n                }, delay)\r\n            })\r\n        });\r\n    }\r\n\r\n    read(callback: any, ...args: any[]): void {\r\n        this.#utils.interactions.fetch(callback, this, ...args)\r\n    }\r\n\r\n    change(callback: any, ...args: any[]): void {\r\n        this.#utils.interactions.mutate(callback, this, ...args)\r\n    }\r\n\r\n    elements(): Element[] {\r\n        return this.#elements;\r\n    }\r\n\r\n    count() {\r\n        return this.#elements.length;\r\n    }\r\n\r\n    lock() {\r\n        this.#isLocked = true;\r\n    }\r\n\r\n    unlock() {\r\n        this.#isLocked = false;\r\n    }\r\n\r\n    isLocked(): boolean {\r\n        return this.#isLocked;\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return (Date.now() - this.#cDt) < 360000;\r\n    }\r\n}","import { ICuiLogger, IUIInteractionProvider, ICuiMutiationPlugin, ICuiComponent, ICuiPluginManager } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is, getMatchingAttribute } from \"../../core/utlis/functions\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\n\r\nexport interface ICuiMutionObserver {\r\n    // setOptions(options: MutationObserverInit): ICuiMutionObserver;\r\n    setPlugins(plugins: ICuiPluginManager): ICuiMutionObserver;\r\n    setComponents(components: ICuiComponent[]): ICuiMutionObserver;\r\n    setAttributes(attributes: string[]): ICuiMutionObserver;\r\n    start(): ICuiMutionObserver;\r\n    stop(): ICuiMutionObserver;\r\n}\r\n\r\n\r\nexport class CuiMutationObserver implements ICuiMutionObserver {\r\n    #log: ICuiLogger;\r\n    #observer: MutationObserver;\r\n    #options: MutationObserverInit;\r\n    #element: HTMLElement;\r\n    #plugins: ICuiPluginManager;\r\n    #components: ICuiComponent[];\r\n    #attributes: string[];\r\n    #utils: CuiUtils;\r\n    constructor(element: HTMLElement, utils: CuiUtils) {\r\n        this.#observer = null\r\n        this.#element = element\r\n        this.#log = CuiLoggerFactory.get('CuiMutationObserver')\r\n        this.#plugins = null;\r\n        this.#components = [];\r\n        this.#attributes = [];\r\n        this.#utils = utils;\r\n\r\n    }\r\n\r\n    setPlugins(plugins: ICuiPluginManager) {\r\n        this.#plugins = plugins;\r\n        return this;\r\n    }\r\n\r\n    setComponents(components: ICuiComponent[]) {\r\n        this.#components = components;\r\n        return this;\r\n    }\r\n\r\n    setAttributes(attributes: string[]) {\r\n        this.#options = {\r\n            attributes: true,\r\n            subtree: true,\r\n            attributeFilter: attributes\r\n        }\r\n        this.#attributes = attributes;\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        this.#log.debug(\"Starting\")\r\n        this.#observer = new MutationObserver(this.mutationCallback)\r\n        this.#observer.observe(this.#element, this.#options)\r\n        this.#log.debug(\"Started\")\r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        this.#log.debug(\"Stopping\")\r\n        if (this.#observer !== null)\r\n            this.#log.debug(\"Observer available\")\r\n        this.#observer.disconnect()\r\n        this.#observer = null;\r\n        this.#log.debug(\"Stopped\")\r\n        return this\r\n    }\r\n\r\n    private mutationCallback(mutations: MutationRecord[], observer: MutationObserver) {\r\n        mutations.forEach((mutation: MutationRecord) => {\r\n            switch (mutation.type) {\r\n                case 'attributes':\r\n                    const item = mutation.target as any;\r\n                    if (is(item.$handler)) {\r\n                        item.$handler.handle();\r\n                    }\r\n                    break;\r\n\r\n                case 'childList':\r\n                    this.handleChildListMutation(mutation);\r\n                    break;\r\n            }\r\n            if (is(this.#plugins)) {\r\n                this.#plugins.onMutation(mutation).then(() => {\r\n                    this.#log.debug(\"Mutation performed on plugins\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    private handleChildListMutation(mutation: MutationRecord) {\r\n        const addedLen = mutation.addedNodes.length;\r\n        const removedLen = mutation.removedNodes.length;\r\n        if (addedLen > 0) {\r\n            this.#log.debug(\"Registering added nodes: \" + addedLen)\r\n            this.handleAddedNodes(mutation.addedNodes);\r\n        } else if (removedLen > 0) {\r\n            this.#log.debug(\"REmoving nodes: \" + removedLen);\r\n            this.handleRemovedNodes(mutation.removedNodes);\r\n        }\r\n    }\r\n\r\n    private handleAddedNodes(nodes: NodeList) {\r\n        nodes.forEach((node: any) => {\r\n            const matching = getMatchingAttribute(node, this.#attributes);\r\n            if (is(matching)) {\r\n                const component = this.#components.find(c => { c.attribute === matching });\r\n                if (is(component)) {\r\n                    this.#utils.styleAppender.append(component.getStyle());\r\n                    node.$handler = component.get(node, this.#utils)\r\n                    node.$handler.handle();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private handleRemovedNodes(nodes: NodeList) {\r\n        nodes.forEach(node => {\r\n            this.#log.debug(\"Removing\")\r\n        })\r\n    }\r\n}","import { IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { is, sleep } from \"../../core/utlis/functions\";\r\nimport { CLASSES } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiToastHandler {\r\n    #interactions: IUIInteractionProvider;\r\n    #selector: string;\r\n    #className: string;\r\n    #activeCls: string;\r\n    #animationTime: number;\r\n    #lock: boolean;\r\n    #animClsIn: string;\r\n    #animClsOut: string;\r\n    constructor(interaction: IUIInteractionProvider, prefix: string, animationTime: number) {\r\n        this.#interactions = interaction;\r\n        this.#selector = `.${prefix}-toast`;\r\n        this.#className = `${prefix}-toast`;\r\n        this.#activeCls = `${prefix}-active`;\r\n        this.#animationTime = animationTime;\r\n        this.#lock = false;\r\n        this.#animClsIn = `${prefix}-toast-animation-in`;\r\n        this.#animClsOut = `${prefix}-toast-animation-out`\r\n    }\r\n\r\n    async show(message: string): Promise<boolean> {\r\n        if (this.#lock) {\r\n            return false;\r\n        }\r\n        this.#lock = true;\r\n        let toastElement = document.querySelector(this.#selector);\r\n        if (!is(toastElement)) {\r\n            toastElement = document.createElement('div');\r\n            toastElement.classList.add(this.#className);\r\n            document.body.appendChild(toastElement);\r\n        }\r\n\r\n        this.#interactions.mutate(() => {\r\n            toastElement.innerHTML = message;\r\n            toastElement.classList.add(CLASSES.animProgress);\r\n            toastElement.classList.add(this.#animClsIn);\r\n        }, this);\r\n\r\n        await sleep(this.#animationTime);\r\n        this.#interactions.mutate(() => {\r\n            toastElement.classList.remove(CLASSES.animProgress);\r\n            toastElement.classList.remove(this.#animClsIn);\r\n            toastElement.classList.add(this.#activeCls);\r\n        }, this)\r\n        await sleep(3000);\r\n        this.#interactions.mutate(() => {\r\n            toastElement.classList.add(CLASSES.animProgress);\r\n            toastElement.classList.add(this.#animClsOut);\r\n        }, this)\r\n\r\n        setTimeout(() => {\r\n            this.#interactions.mutate(() => {\r\n                toastElement.classList.remove(CLASSES.animProgress);\r\n                toastElement.classList.remove(this.#animClsOut);\r\n                toastElement.classList.remove(this.#activeCls);\r\n            }, this)\r\n            this.#lock = false;\r\n        }, this.#animationTime);\r\n        return true;\r\n    }\r\n}","import { CLASSES } from \"../../core/utlis/statics\";\r\nimport { ICuiLogger, IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CollectionManagerHelper {\r\n    #elements: Element[];\r\n    #log: ICuiLogger;\r\n    #isLocked: boolean;\r\n    #toggleClass: string;\r\n    #interactions: IUIInteractionProvider;\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#interactions = interactions;\r\n        this.#log = CuiLoggerFactory.get('CollectionManager');\r\n    }\r\n\r\n    setElements(elements: Element[]) {\r\n        this.#elements = elements;\r\n    }\r\n\r\n    setToggle(className: string) {\r\n        this.#toggleClass = className;\r\n    }\r\n\r\n    addAnimationClass(currentElement: Element, nextElement: Element, animIn: string, animOut: string,): void {\r\n        nextElement.classList.add(CLASSES.animProgress);\r\n        currentElement.classList.add(animOut);\r\n        nextElement.classList.add(animIn);\r\n    }\r\n\r\n    setFinalClasses(currentElement: Element, nextElement: Element, animIn: string, animOut: string): void {\r\n        nextElement.classList.remove(CLASSES.animProgress);\r\n        currentElement.classList.remove(animOut);\r\n        nextElement.classList.remove(animIn);\r\n        currentElement.classList.remove(this.#toggleClass);\r\n        nextElement.classList.add(this.#toggleClass);\r\n    }\r\n\r\n    verifyIndex(index: number, current: number, count: number): boolean {\r\n        return index >= 0 && index !== current && index < count\r\n    }\r\n\r\n    async setCurrent(newIndex: number, current: number): Promise<boolean> {\r\n        this.lock();\r\n        this.#log.debug(`Switching index from: ${current} to ${newIndex}`)\r\n        if (current > -1)\r\n            this.#elements[current].classList.remove(this.#toggleClass);\r\n        this.#elements[newIndex].classList.add(this.#toggleClass);\r\n        this.unlock();\r\n        return true;\r\n    }\r\n\r\n    async setCurrentWithAnimation(newIndex: number, animClassIn: string, animClassOut: string, duration: number, current: number): Promise<boolean> {\r\n        this.lock()\r\n        this.#log.debug(`Switching index from: ${current} to ${newIndex}`)\r\n\r\n        const currentElement = this.#elements[current];\r\n        const nextElement = this.#elements[newIndex];\r\n        this.#interactions.mutate(this.addAnimationClass, this, currentElement, nextElement, animClassIn, animClassOut);\r\n        setTimeout(() => {\r\n            this.#interactions.mutate(this.setFinalClasses, this, currentElement, nextElement, animClassIn, animClassOut)\r\n            this.unlock();\r\n        }, duration)\r\n        return true;\r\n    }\r\n\r\n    getCurrentIndex(): number {\r\n        if (!is(this.#toggleClass)) {\r\n            return -1;\r\n        }\r\n        let len = this.count();\r\n        for (let i = 0; i < len; i++) {\r\n            if (this.#elements[i].classList.contains(this.#toggleClass)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    elements(): Element[] {\r\n        return this.#elements;\r\n    }\r\n\r\n    check(): boolean {\r\n        if (this.#isLocked) {\r\n            this.#log.warning(\"Object locked. Operation in progress\", \"Check\");\r\n            return false;\r\n        } else if (!is(this.#toggleClass)) {\r\n            this.#log.warning(\"Toggle is not set. Call setToggleClass\", \"Check\");\r\n            return false;\r\n        } else if (this.count() <= 0) {\r\n            this.#log.warning(\"Elements list is empty\", \"Check\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    count(): number {\r\n        return this.#elements ? this.#elements.length : -1;\r\n    }\r\n\r\n    lock() {\r\n        this.#isLocked = true;\r\n    }\r\n\r\n    unlock() {\r\n        this.#isLocked = false\r\n    }\r\n\r\n\r\n}","import { IUIInteractionProvider, ICuiLogger, CuiCachable } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { CollectionManagerHelper } from \"../helpers/collection\";\r\n\r\nexport class CollectionManager implements CuiCachable {\r\n    #log: ICuiLogger;\r\n\r\n    #cDt: number;\r\n    #helper: CollectionManagerHelper;\r\n\r\n    constructor(elements: Element[], interactions: IUIInteractionProvider) {\r\n        this.#log = CuiLoggerFactory.get('CollectionManager');\r\n        this.#helper = new CollectionManagerHelper(interactions);\r\n        this.#helper.setElements(elements);\r\n        this.#cDt = Date.now();\r\n    }\r\n\r\n    setToggle(className: string) {\r\n        this.#helper.setToggle(className)\r\n    }\r\n\r\n    setElements(elements: Element[]) {\r\n        this.#helper.setElements(elements);\r\n    }\r\n\r\n    click(callback: (element: Element, index: number) => void): void {\r\n        this.#helper.elements().forEach((element, index) => {\r\n            element.addEventListener('click', () => {\r\n                this.set(index).then(() => {\r\n                    if (callback) {\r\n                        callback(element, index)\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    async next(): Promise<boolean> {\r\n        if (!this.#helper.check()) {\r\n            return false;\r\n        }\r\n        let newIdx = this.#helper.getCurrentIndex() + 1;\r\n        return this.set(newIdx >= this.length() ? 0 : newIdx);\r\n    }\r\n\r\n    async previous(): Promise<boolean> {\r\n        if (!this.#helper.check()) {\r\n            return false;\r\n        }\r\n        let newIdx = this.#helper.getCurrentIndex() - 1;\r\n        return this.set(newIdx < 0 ? this.length() - 1 : newIdx)\r\n    }\r\n\r\n    async set(index: number): Promise<boolean> {\r\n        let current = this.#helper.getCurrentIndex();\r\n        if (!this.#helper.check() || !this.#helper.verifyIndex(index, current, this.length())) {\r\n            return false;\r\n        }\r\n        return this.#helper.setCurrent(index, current)\r\n    }\r\n\r\n    async setWithAnimation(index: number, animClassIn: string, animClassOut: string, duration: number): Promise<boolean> {\r\n        let current = this.#helper.getCurrentIndex();\r\n        if (!this.#helper.check() || !this.#helper.verifyIndex(index, current, this.length())) {\r\n            return false;\r\n        }\r\n        return this.#helper.setCurrentWithAnimation(index, animClassIn, animClassOut, duration, current)\r\n    }\r\n\r\n    getCurrentIndex(): number {\r\n        return this.#helper.getCurrentIndex();\r\n    }\r\n\r\n    length() {\r\n        return this.#helper.count();\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return this.length() > 0 && Date.now() - this.#cDt > 360000;\r\n    }\r\n}","import { IUIInteractionProvider } from \"../models/interfaces\";\r\n\r\nexport class FastDom implements IUIInteractionProvider {\r\n    private writes: any[];\r\n    private reads: any[];\r\n    private raf: any;\r\n    private isScheduled: boolean = false;\r\n    #limit: number;\r\n\r\n    constructor() {\r\n        this.raf = window.requestAnimationFrame.bind(window)\r\n        this.writes = []\r\n        this.reads = []\r\n        this.#limit = 5;\r\n    }\r\n    mutate(callback: any, ctx: any, ...args: any[]): void {\r\n        this.reads.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    fetch(callback: any, ctx: any, ...args: any[]): void {\r\n        this.writes.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    private createTask(callback: any, ctx: any, ...args: any[]): any {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n\r\n    private run(tasks: any[]) {\r\n        let task = null\r\n        while (task = tasks.shift()) {\r\n            task()\r\n        }\r\n    }\r\n\r\n    private schedule(recursion?: number) {\r\n        if (!this.isScheduled) {\r\n            this.isScheduled = true;\r\n            if (recursion >= this.#limit) {\r\n                throw new Error(\"Fast Dom limit reached\")\r\n            } else {\r\n                this.raf(this.flush.bind(this, recursion));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private flush(recursion?: number) {\r\n        let rec: number = recursion ?? 0;\r\n        let error = null;\r\n        let writes = this.writes;\r\n        let reads = this.reads;\r\n\r\n        try {\r\n            this.run(reads);\r\n            this.run(writes);\r\n        } catch (e) {\r\n            error = e\r\n            console.error(e)\r\n        }\r\n        this.isScheduled = false;\r\n\r\n        if (error) {\r\n            this.schedule(rec + 1)\r\n        }\r\n        if (this.writes.length || this.reads.length) {\r\n            this.schedule(recursion + 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport class SyncInteractions implements IUIInteractionProvider {\r\n    tasks: any[];\r\n    raf: any;\r\n    isRunning: boolean = false;\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.raf = window.requestAnimationFrame.bind(window)\r\n    }\r\n\r\n    mutate(callback: any, ctx: any, ...args: any[]): void {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    fetch(callback: any, ctx: any, ...args: any[]): void {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    private schedule() {\r\n        if (!this.isRunning) {\r\n            this.isRunning = true;\r\n            this.raf(this.flush.bind(this))\r\n        }\r\n    }\r\n\r\n    private flush() {\r\n        let task = null\r\n        while (task = this.tasks.shift()) {\r\n            try {\r\n                task()\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.isRunning = false\r\n    }\r\n\r\n    private createTask(callback: any, ctx: any, ...args: any[]): any {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n\r\n}","import { ICuiDictionary, ICuiDictionaryItem } from \"../models/interfaces\";\r\nimport { ItemNotFoundError, ArgumentError } from \"../models/errors\";\r\nimport { is } from \"./functions\";\r\n\r\nexport class CuiDictionary<T> implements ICuiDictionary<T> {\r\n\r\n    #keys: string[];\r\n    #values: T[];\r\n\r\n    constructor(init?: ICuiDictionaryItem<T>[]) {\r\n        this.#keys = []\r\n        this.#values = []\r\n\r\n        if (init) {\r\n            init.forEach(x => {\r\n                if (!is(x.key)) {\r\n                    this.#keys = []\r\n                    this.#values = []\r\n                    throw new ArgumentError(\"Key is empty\");\r\n                }\r\n                this.add(x.key, x.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    add(key: string, value: T): void {\r\n        this.throwOnEmptyKey(key)\r\n        if (this.containsKey(key))\r\n            throw new Error(\"Key already exists\");\r\n        this.#keys.push(key)\r\n        this.#values.push(value)\r\n    }\r\n\r\n    remove(key: string): void {\r\n        if (!is(key)) {\r\n            return\r\n        }\r\n        let index = this.#keys.indexOf(key);\r\n        if (index >= 0) {\r\n            this.#keys.splice(index, 1)\r\n            this.#values.splice(index, 1)\r\n        }\r\n    }\r\n    get(key: string): T {\r\n        this.throwOnEmptyKey(key)\r\n        let index = this.indexOf(key)\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        return this.#values[index];\r\n    }\r\n    containsKey(key: string): boolean {\r\n        return is(key) && this.indexOf(key) >= 0\r\n    }\r\n    keys(): string[] {\r\n        return this.#keys\r\n    }\r\n    values(): T[] {\r\n        return this.#values;\r\n    }\r\n\r\n    indexOf(key: string): number {\r\n        return is(key) ? this.#keys.indexOf(key) : -1;\r\n    }\r\n\r\n    update(key: string, value: T): void {\r\n        this.throwOnEmptyKey(key)\r\n        let index = this.indexOf(key)\r\n        if (index < 0) {\r\n            throw new ItemNotFoundError(`Item with key [${key}] not found`)\r\n        }\r\n        this.#values[index] = value\r\n    }\r\n\r\n    clear() {\r\n        this.#values = [];\r\n        this.#keys = [];\r\n    }\r\n\r\n    private throwOnEmptyKey(key: string) {\r\n        if (!is(key)) {\r\n            throw new ArgumentError(\"Key is empty\");\r\n        }\r\n    }\r\n}","import { ICuiDictionary, CuiCachable, ICui, ICuiCacheManager } from \"../../core/models/interfaces\";\r\nimport { CuiDictionary } from \"../../core/utlis/dictionary\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiCacheManager implements ICuiCacheManager {\r\n    #cache: ICuiDictionary<CuiCachable>;\r\n    #maxSize: number;\r\n    constructor(maxSize?: number) {\r\n        this.#cache = new CuiDictionary<CuiCachable>();\r\n        this.#maxSize = maxSize ?? 500;\r\n    }\r\n    put(key: string, element: CuiCachable): void {\r\n        if (!is(key)) return;\r\n        if (this.has(key)) {\r\n            this.#cache.update(key, element);\r\n            return;\r\n        }\r\n        this.clean();\r\n        this.#cache.add(key, element);\r\n    }\r\n\r\n    get(key: string): CuiCachable {\r\n        if (!is(key)) return null;\r\n        if (this.has(key)) {\r\n            let item = this.#cache.get(key);\r\n            if (item.refresh()) {\r\n                return item;\r\n            }\r\n            this.#cache.remove(key);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    has(key: string): boolean {\r\n        return is(key) ? this.#cache.containsKey(key) : false;\r\n    }\r\n\r\n    remove(key: string): boolean {\r\n        if (!is(key)) return false;\r\n        if (this.has(key)) {\r\n            this.#cache.remove(key);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear(): void {\r\n        this.#cache.clear();\r\n    }\r\n\r\n    private clean() {\r\n        if (this.#cache.keys().length >= this.#maxSize) {\r\n            this.#cache.remove(this.#cache.keys()[0]);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ICuiEventBus, CuiEventReceiver, ICuiLogger, ICuiEventEmitHandler, CuiContext } from \"../models/interfaces\";\r\nimport { is, are } from \"../utlis/functions\";\r\nimport { ArgumentError, CuiBusError } from \"../models/errors\";\r\nimport { CuiLogger } from \"../utlis/logger\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\n\r\nexport class CuiEventBus implements ICuiEventBus {\r\n    #events: { [event: string]: CuiEventReceiver }\r\n    #log: ICuiLogger;\r\n    #eventHandler: ICuiEventEmitHandler;\r\n\r\n    constructor(emitHandler: ICuiEventEmitHandler) {\r\n        this.#events = {};\r\n        this.#eventHandler = emitHandler;\r\n        this.#log = CuiLoggerFactory.get(\"CuiEventBus\");\r\n    }\r\n\r\n    on(name: string, callback: any, ctx: CuiContext): void {\r\n        if (!are(name, callback, ctx)) {\r\n            throw new ArgumentError(\"Missing argument\")\r\n        }\r\n        let id = ctx.getCuid();\r\n        if (!is(id)) {\r\n            throw new CuiBusError(\"Missing component name or cuid\")\r\n        }\r\n        this.#log.debug(`Attaching new event: [${name}] for: [${id}]`)\r\n        if (!this.#events[name]) {\r\n            this.#events[name] = {}\r\n        }\r\n\r\n        this.#events[name][id] = { ctx: ctx, callback: callback }\r\n    }\r\n\r\n    detach(name: string, ctx: CuiContext): void {\r\n        if (!are(name, ctx)) {\r\n            throw new ArgumentError(\"Missing argument\")\r\n        }\r\n        let ev = this.#events[name]\r\n        let id = ctx.getCuid();\r\n        this.#log.debug(`Detaching item: [${id}] from [${name}]`)\r\n        if (this.isAttached(ev, id)) {\r\n            delete ev[id];\r\n        }\r\n    }\r\n\r\n    detachAll(name: string): void {\r\n        if (is(name) && this.#events[name]) {\r\n            delete this.#events[name]\r\n        } else {\r\n            this.#log.error(`Event name is missing or incorrect`, \"detachAll\")\r\n        }\r\n    }\r\n\r\n    async emit(event: string, ...args: any[]): Promise<boolean> {\r\n        if (!is(event)) {\r\n            throw new ArgumentError(\"Event name is incorrect\");\r\n        }\r\n        this.#log.debug(`Emit: [${event}]`)\r\n        await this.#eventHandler.handle(this.#events[event], args)\r\n        return true;\r\n    }\r\n\r\n    isSubscribing(name: string, ctx: CuiContext) {\r\n        let ev = this.#events[name]\r\n        return this.isAttached(ev, ctx.getCuid())\r\n    }\r\n\r\n    private isAttached(ev: CuiEventReceiver, id: string): boolean {\r\n        return is(ev) && is(id) && is(ev[id]);\r\n    }\r\n}","import { ICuiEventEmitHandler, ICuiLogger, ICuiCallbackExecutor, CuiEventReceiver } from \"../models/interfaces\";\r\nimport { is } from \"../utlis/functions\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\n\r\nexport class SimpleEventEmitHandler implements ICuiEventEmitHandler {\r\n    #log: ICuiLogger;\r\n    #executor: ICuiCallbackExecutor;\r\n    constructor(executor: ICuiCallbackExecutor) {\r\n        this.#executor = executor;\r\n        this.#log = CuiLoggerFactory.get(\"SimpleEventEmitHandler\");\r\n    }\r\n\r\n    async handle(events: CuiEventReceiver, args: any[]): Promise<void> {\r\n        if (!is(events)) {\r\n            this.#log.warning(\"No events provided\")\r\n            return\r\n        }\r\n        for (let id in events) {\r\n            let event = events[id]\r\n            try {\r\n                await this.#executor.execute(event.callback, event.ctx, args)\r\n            }\r\n            catch (e) {\r\n                this.#log.error(e)\r\n            }\r\n        }\r\n        return;\r\n    }\r\n}\r\n\r\nexport class TaskedEventEmitHandler implements ICuiEventEmitHandler {\r\n    #executor: ICuiCallbackExecutor;\r\n    constructor(executor: ICuiCallbackExecutor) {\r\n        this.#executor = executor;\r\n    }\r\n    async handle(events: CuiEventReceiver, args: any[]): Promise<void> {\r\n        if (!is(events)) {\r\n            return\r\n        }\r\n        let promises: Promise<void>[] = []\r\n        for (let id in events) {\r\n            let event = events[id]\r\n            promises.push(this.#executor.execute(event.callback, event.ctx, args))\r\n        }\r\n        Promise.all(promises)\r\n        return;\r\n    }\r\n}","import { ICuiCallbackExecutor } from \"../models/interfaces\"\r\nimport { is } from \"../utlis/functions\"\r\n\r\nexport class CuiCallbackExecutor implements ICuiCallbackExecutor {\r\n    async execute(callback: any, ctx: any, args: any[]): Promise<void> {\r\n        args = args ?? []\r\n        if (is(ctx)) {\r\n            callback.apply(ctx, args)\r\n        } else {\r\n            callback(...args)\r\n        }\r\n        return\r\n    }\r\n}","import { is } from \"../utlis/functions\";\r\nimport { CuiUtils } from \"../models/utils\";\r\nimport { IUIInteractionProvider } from \"../models/interfaces\";\r\n\r\nexport interface ICuiDocumentStyleAppender {\r\n    append(style: string): boolean;\r\n}\r\n\r\nexport class CuiDocumentStyleAppender implements ICuiDocumentStyleAppender {\r\n    #interactions: IUIInteractionProvider;\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#interactions = interactions;\r\n    }\r\n\r\n    append(style: string): boolean {\r\n        if (is(style)) {\r\n            const head = document.head || document.getElementsByTagName('head')[0]\r\n            const node = document.createElement('style');\r\n            const text = document.createTextNode(style);\r\n            node.type = 'text/css';\r\n            node.appendChild(text);\r\n            head.appendChild(node);\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { CuiColorSetType } from \"../../core/utlis/types\";\r\nimport { is, getRangeValue, are } from \"../../core/utlis/functions\";\r\nimport { IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { CuiColor, CuiColorSet } from \"../../core/models/colors\";\r\nimport { CSS_APP_BACKGROUND_COLORS, CSS_COMPONENT_BACKGROUND_COLORS, CSS_COMPONENT_BORDER_COLORS, CSS_THEMES } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiInstanceColorHandler {\r\n    #root: HTMLElement;\r\n    #interactions: IUIInteractionProvider;\r\n    #LIGHTEN_FACTOR: number = 15;\r\n    #DARKEN_FACTOR: number = 15;\r\n\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#root = document.documentElement;\r\n        this.#interactions = interactions;\r\n    }\r\n\r\n    setAppBackground(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setComponentBackground(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setBordersColors(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setColor(type: CuiColorSetType, set: CuiColorSet) {\r\n        const colors = CSS_THEMES[type];\r\n        const baseColor = set.base;\r\n        if (!is(colors) || !is(baseColor)) {\r\n            return\r\n        }\r\n        const mutedColor = set.muted ?? baseColor.clone().lighten(this.#LIGHTEN_FACTOR);\r\n        const activeColor = set.active ?? baseColor.clone().darken(this.#DARKEN_FACTOR);\r\n\r\n        this.#interactions.mutate(() => {\r\n            this.setProperty(colors.base, baseColor.toCssString());\r\n            this.setProperty(colors.active, activeColor.toCssString());\r\n            this.setProperty(colors.muted, mutedColor.toCssString());\r\n        }, this)\r\n\r\n    }\r\n\r\n    setLightenFactor(factor: number) {\r\n        this.#LIGHTEN_FACTOR = getRangeValue(factor, 0, 100);\r\n    }\r\n\r\n    setDarkenFactor(factor: number) {\r\n        this.#DARKEN_FACTOR = getRangeValue(factor, 0, 100);\r\n    }\r\n\r\n    setProperty(propertyName: string, value: string) {\r\n        this.#root.style.setProperty(propertyName, value);\r\n    }\r\n\r\n    setPropertyIn(propertyName: string, value: string) {\r\n        if (!are(value, propertyName)) {\r\n            return;\r\n        }\r\n        this.#interactions.mutate(this.setProperty, this, propertyName, value)\r\n    }\r\n}","import { IUIInteractionProvider, ICuiCacheManager, ICuiEventBus } from \"./interfaces\";\r\nimport { CuiSetup, CuiSetupInit } from \"./setup\";\r\nimport { CuiInteractionsType, CuiLightMode } from \"../utlis/types\";\r\nimport { CuiInteractionsFactory } from \"../factories/interactions\";\r\nimport { CuiCacheManager } from \"../../app/managers/cache\";\r\nimport { CuiEventBus } from \"../bus/bus\";\r\nimport { TaskedEventEmitHandler } from \"../bus/handlers\";\r\nimport { CuiCallbackExecutor } from \"../bus/executors\";\r\nimport { getName } from \"../utlis/functions\";\r\nimport { CLASSES } from \"../utlis/statics\";\r\nimport { ICuiDocumentStyleAppender, CuiDocumentStyleAppender } from \"../styles/appender\";\r\nimport { CuiInstanceColorHandler } from \"../../app/handlers/colors\";\r\n\r\nexport class CuiUtils {\r\n    interactions: IUIInteractionProvider;\r\n    bus: ICuiEventBus;\r\n    setup: CuiSetup;\r\n    cache: ICuiCacheManager;\r\n    colors: CuiInstanceColorHandler;\r\n    styleAppender: ICuiDocumentStyleAppender;\r\n\r\n    constructor(initialSetup: CuiSetupInit) {\r\n        this.setup = new CuiSetup().fromInit(initialSetup);\r\n        this.interactions = CuiInteractionsFactory.get(initialSetup.interaction)\r\n        this.cache = new CuiCacheManager(this.setup.cacheSize);\r\n        this.bus = new CuiEventBus(new TaskedEventEmitHandler(new CuiCallbackExecutor()));\r\n        this.colors = new CuiInstanceColorHandler(this.interactions);\r\n        this.styleAppender = new CuiDocumentStyleAppender(this.interactions);\r\n    }\r\n\r\n    setLightMode(mode: CuiLightMode) {\r\n        const name: string = getName(this.setup.prefix, CLASSES.dark);\r\n\r\n        const classes = document.body.classList;\r\n        if (mode === 'dark' && !classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.add(name);\r\n            }, this)\r\n\r\n        } else if (mode === 'light' && classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.remove(name);\r\n            }, this)\r\n        }\r\n    }\r\n\r\n    setPrintMode(flag: boolean) {\r\n        const name: string = getName(this.setup.prefix, CLASSES.print);\r\n        const classes = document.body.classList;\r\n        if (flag && !classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.add(name);\r\n            }, this)\r\n\r\n        } else if (!flag && classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.remove(name);\r\n            }, this)\r\n        }\r\n    }\r\n\r\n}","import { IUIInteractionProvider } from \"../models/interfaces\";\r\nimport { CuiInteractionsType } from \"../utlis/types\";\r\nimport { FastDom, SyncInteractions } from \"../utlis/interactions\";\r\n\r\nexport class CuiInteractionsFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param type - Interactions type\r\n     */\r\n    public static get(type: CuiInteractionsType): IUIInteractionProvider {\r\n        const interactionType = type;\r\n        switch (interactionType) {\r\n            case 'async':\r\n                return new FastDom();\r\n            default:\r\n                return new SyncInteractions();\r\n        }\r\n    }\r\n}","import { ICuiPluginManager, ICuiPlugin, ICuiLogger, ICuiMutiationPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiPluginManager implements ICuiPluginManager {\r\n    #plugins: ICuiPlugin[];\r\n    #mutated: ICuiMutiationPlugin[];\r\n    #log: ICuiLogger;\r\n    constructor(plugins: ICuiPlugin[]) {\r\n        this.#plugins = plugins ?? [];\r\n        this.#log = CuiLoggerFactory.get(\"CuiPluginManager\")\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        this.#log.debug(\"Plugins initialization started: \" + this.#plugins.length)\r\n        this.#mutated = this.#plugins.filter((plugin: any) => {\r\n            return is(plugin.mutation);\r\n        }) as any;\r\n        this.#plugins.forEach(plugin => {\r\n            plugin.init(utils);\r\n        })\r\n        this.#log.debug(\"Plugins have been initialized\");\r\n    }\r\n\r\n    get(name: string): ICuiPlugin {\r\n        if (!is(name)) {\r\n            return undefined;\r\n        }\r\n        return this.#plugins.find(p => p.name === name);\r\n    }\r\n\r\n    async onMutation(mutation: MutationRecord): Promise<boolean> {\r\n        let tasks: Promise<boolean>[] = [];\r\n        this.#mutated.forEach((plugin: any) => {\r\n            tasks.push(plugin.mutation(mutation))\r\n        })\r\n        let result: boolean[] = await Promise.all(tasks);\r\n        return result.find(val => {\r\n            val === false\r\n        }) ? false : true;\r\n    }\r\n\r\n}","import { CuiSetupInit } from \"../core/models/setup\";\r\nimport { is, joinAttributesForQuery, getSystemLightMode, getMatchingAttribute, are } from \"../core/utlis/functions\";\r\nimport { ElementManager } from \"./managers/element\";\r\nimport { STATICS, EVENTS } from \"../core/utlis/statics\";\r\nimport { ICuiLogger, ICuiPlugin, ICuiMutiationPlugin, ICuiComponent, ICuiPluginManager, CuiContext } from \"../core/models/interfaces\";\r\nimport { ICuiMutionObserver, CuiMutationObserver } from \"./observers/mutations\";\r\n//import { CuiAttributeMutationHandler } from \"./managers/mutations_old\";\r\nimport { CuiLoggerFactory } from \"../core/factories/logger\";\r\nimport { CuiToastHandler } from \"./managers/toast\";\r\nimport { CollectionManager } from \"./managers/collection\";\r\nimport { CuiUtils } from \"../core/models/utils\";\r\nimport { CuiInstanceInitError } from \"../core/models/errors\";\r\nimport { CuiPluginManager } from \"./managers/plugins\";\r\n\r\nexport class CuiInstance {\r\n    #log: ICuiLogger;\r\n    #mutationObserver: ICuiMutionObserver;\r\n    #toastManager: CuiToastHandler;\r\n    #utils: CuiUtils;\r\n    plugins: ICuiPluginManager;\r\n    #components: ICuiComponent[];\r\n    constructor(setup: CuiSetupInit, plugins: ICuiPlugin[], components: ICuiComponent[]) {\r\n        STATICS.prefix = setup.prefix;\r\n        STATICS.logLevel = setup.logLevel;\r\n        this.plugins = new CuiPluginManager(plugins);\r\n        this.#components = components ?? [];\r\n        this.#utils = new CuiUtils(setup);\r\n        this.#log = CuiLoggerFactory.get('CuiInstance')\r\n    }\r\n\r\n    init(): CuiInstance {\r\n        // Init elements\r\n        if (!is(window.MutationObserver)) {\r\n            throw new CuiInstanceInitError(\"Mutation observer does not exists\");\r\n        }\r\n        this.#toastManager = new CuiToastHandler(this.#utils.interactions, this.#utils.setup.prefix, this.#utils.setup.animationTimeLong);\r\n        const mutatedAttributes: string[] = this.#components.map(x => { return x.attribute }); // MUTATED_ATTRIBUTES; \r\n        const initElements = is(mutatedAttributes) ? document.querySelectorAll(joinAttributesForQuery(mutatedAttributes)) : null\r\n        if (is(initElements)) {\r\n            this.#log.debug(`Initiating ${initElements.length} elements`)\r\n            initElements.forEach((item: any) => {\r\n                let matching: string = getMatchingAttribute(item, mutatedAttributes)\r\n                if (is(matching)) {\r\n                    let component = this.#components.find(c => { return c.attribute === matching });\r\n                    if (is(component)) {\r\n                        this.#utils.styleAppender.append(component.getStyle());\r\n                        item.$handler = component.get(item, this.#utils);\r\n                        item.$handler.handle();\r\n                    }\r\n                }\r\n                else {\r\n                    this.#log.warning(\"Handler not found\")\r\n                }\r\n            })\r\n        }\r\n        // Init plugins\r\n        this.plugins.init(this.#utils);\r\n\r\n        if (are(this.#components, mutatedAttributes)) {\r\n            this.#mutationObserver = new CuiMutationObserver(document.body, this.#utils)\r\n            this.#mutationObserver.setComponents(this.#components).setAttributes(mutatedAttributes)\r\n            this.#mutationObserver.setPlugins(this.plugins);\r\n            this.#mutationObserver.start();\r\n        }\r\n        this.#utils.bus.emit(EVENTS.INSTANCE_INITIALIZED)\r\n        return this;\r\n    }\r\n\r\n    finish(): void {\r\n        this.#mutationObserver.stop();\r\n        this.#utils.bus.emit(EVENTS.INSTANCE_FINISHED)\r\n    }\r\n\r\n    get(selector: string): ElementManager {\r\n        const existing = this.#utils.cache.get(selector);\r\n        if (is(existing)) {\r\n            return existing as ElementManager;\r\n        }\r\n        const elements = this.all(selector);\r\n        if (!elements) {\r\n            return undefined\r\n        }\r\n        const newElement = new ElementManager(elements, this.#utils);\r\n        this.#utils.cache.put(selector, newElement)\r\n        return newElement\r\n    }\r\n\r\n    collection(selector: string): CollectionManager {\r\n        const existing = this.#utils.cache.get(selector);\r\n        if (is(existing)) {\r\n            return existing as CollectionManager;\r\n        }\r\n        const elements = this.all(selector);\r\n        if (!is(elements)) {\r\n            return undefined;\r\n        }\r\n        let manager = new CollectionManager(elements, this.#utils.interactions);\r\n        this.#utils.cache.put(selector, manager)\r\n        return manager;\r\n    }\r\n\r\n\r\n    async toast(message: string): Promise<boolean> {\r\n        if (!is(message)) {\r\n            return false;\r\n        }\r\n        return this.#toastManager.show(message)\r\n    }\r\n\r\n    select(selector: string): Element {\r\n        return document.querySelector(selector)\r\n    }\r\n\r\n    all(selector: string): Element[] {\r\n        const nodes: NodeListOf<Element> = document.querySelectorAll(selector);\r\n        if (!is(nodes)) {\r\n            return undefined;\r\n        }\r\n        return [...nodes];\r\n    }\r\n\r\n    getUtils(): CuiUtils {\r\n        return this.#utils;\r\n    }\r\n\r\n    on(event: string, callback: any, context: CuiContext): void {\r\n        if (!are(event, callback, context)) {\r\n            this.#log.error(\"Incorrect arguments\", \"on\")\r\n        }\r\n        this.#utils.bus.on(event, callback, context);\r\n    }\r\n}","import { CuiUtils } from \"../../core/models/utils\";\r\nimport { AutoLightPluginSetup } from \"./light\";\r\n\r\nexport class LightModeListener {\r\n    #utils: CuiUtils;\r\n    #isInitialized: boolean;\r\n    #descriptor: string;\r\n    constructor(utils: CuiUtils, descriptor: string) {\r\n        this.#utils = utils;\r\n        this.#descriptor = descriptor;\r\n        this.#isInitialized = false;\r\n    }\r\n\r\n    start(): boolean {\r\n        if (!window.matchMedia || this.#isInitialized) {\r\n            return false;\r\n        }\r\n        window.matchMedia('(prefers-color-scheme: dark)')\r\n            .addEventListener('change', this.event.bind(this))\r\n        this.#isInitialized = true\r\n        console.log(\"Listener initiated\")\r\n        return true\r\n    }\r\n\r\n    stop(): boolean {\r\n        if (this.#isInitialized) {\r\n            window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.event.bind(this));\r\n            this.#isInitialized = false\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private event(ev: MediaQueryListEvent): void {\r\n        console.log(\"Event\")\r\n        let autoLightSetup = this.#utils.setup.plugins[this.#descriptor] as AutoLightPluginSetup;\r\n        let autoLight = autoLightSetup?.autoLight ?? false;\r\n        if (autoLight) {\r\n            if (ev.matches) {\r\n                console.log(\"dark\")\r\n                this.#utils.setLightMode('dark')\r\n            } else {\r\n                console.log(\"Light\")\r\n                this.#utils.setLightMode('light')\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { ICuiPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { LightModeListener } from \"./listener\";\r\nimport { getSystemLightMode } from \"../../core/utlis/functions\";\r\n\r\nexport interface AutoLightPluginSetup {\r\n    autoLight: boolean;\r\n}\r\n\r\nexport class CuiAutoLightModePlugin implements ICuiPlugin {\r\n    description: string = 'Dark vs Light mode auto switcher';\r\n    name: string = 'auto-light';\r\n    setup: AutoLightPluginSetup;\r\n    #listener: LightModeListener;\r\n    constructor(autoLightInit: AutoLightPluginSetup) {\r\n        this.description = \"CuiAutoLightModePlugin\";\r\n        this.setup = autoLightInit;\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        if (this.setup.autoLight && getSystemLightMode() === 'dark') {\r\n            utils.setLightMode('dark')\r\n        }\r\n        this.#listener = new LightModeListener(utils, this.description);\r\n        this.#listener.start();\r\n        console.log(\"Auto light initiated\")\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#listener.stop();\r\n    }\r\n\r\n}","import { ICuiLogger, IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\n\r\nexport class CuiHandlerBase {\r\n    _log: ICuiLogger;\r\n    utils: CuiUtils;\r\n    constructor(componentName: string, utils: CuiUtils) {\r\n        this._log = CuiLoggerFactory.get(componentName);\r\n        this.utils = utils;\r\n    }\r\n\r\n    mutate(callback: any, ...args: any[]): void {\r\n        this.utils.interactions.mutate(callback, this, ...args)\r\n    }\r\n\r\n    fetch(callback: any, ...args: any[]): void {\r\n        this.utils.interactions.fetch(callback, this, ...args)\r\n    }\r\n\r\n\r\n}","import { ICuiComponent, ICuiComponentFactory, ICuiMutationHandler, ICuiLogger } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\nimport { is, createElementFromString } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiIconComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor() {\r\n        this.attribute = 'data-icon';\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiIconHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiIconHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #log: ICuiLogger;\r\n    #element: Element;\r\n    #prevIcon: string;\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiIconHandler\", utils);\r\n        this.#element = element;\r\n        this.#prevIcon = null;\r\n        this.#attribute = attribute;\r\n    }\r\n\r\n    handle(): void {\r\n        const iconAttr = this.#element.getAttribute(this.#attribute)\r\n        if (iconAttr === this.#prevIcon) {\r\n            return;\r\n        }\r\n\r\n        const iconStr = iconAttr ? ICONS[iconAttr] : null;\r\n        if (!iconStr) {\r\n            return\r\n        }\r\n        const iconSvg = new IconBuilder(iconStr).build();\r\n        const svg = this.#element.querySelector('svg')\r\n        if (is(svg)) {\r\n            svg.remove();\r\n        }\r\n        if (this.#element.childNodes.length > 0) {\r\n            this.mutate(this.insertBefore, iconSvg)\r\n        } else {\r\n            this.mutate(this.appendChild, iconSvg)\r\n        }\r\n    }\r\n\r\n    refresh(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    private insertBefore(iconElement: Element) {\r\n        this.#element.insertBefore(iconElement, this.#element.firstChild);\r\n    }\r\n\r\n    private appendChild(iconElement: Element) {\r\n        this.#element.appendChild(iconElement);\r\n    }\r\n}\r\n\r\nexport class IconBuilder {\r\n    #element: string;\r\n    #scale: number;\r\n    #style: string;\r\n\r\n    constructor(svgString: string) {\r\n        this.#element = svgString;\r\n        this.#scale = 1;\r\n    }\r\n\r\n    setStyle(style: string): IconBuilder {\r\n        this.#style = style;\r\n        return this\r\n    }\r\n\r\n    setScale(scale: number): IconBuilder {\r\n        this.#scale = scale\r\n        return this\r\n    }\r\n\r\n    build(): Element {\r\n        let created = createElementFromString(this.#element)\r\n        if (is(created) && this.#scale) {\r\n            let appender = new IconScaleAppender();\r\n            appender.append(created, this.#scale)\r\n        }\r\n        return created\r\n    }\r\n}\r\n\r\nexport class IconScaleAppender {\r\n    append(element: Element, value: number): void {\r\n        let width = element.hasAttribute(\"width\") ? parseInt(element.getAttribute(\"width\")) : 20;\r\n        let height = element.hasAttribute(\"height\") ? parseInt(element.getAttribute(\"height\")) : 20;\r\n        element.setAttribute(\"width\", (width * value).toString())\r\n        element.setAttribute(\"height\", (height * value).toString())\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { is, getRangeValue } from \"../../core/utlis/functions\";\r\nimport { IconBuilder } from \"../icon/icon\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiCircleComponent implements ICuiComponent {\r\n    attribute: string;\r\n    #iconStr: string;\r\n    constructor() {\r\n        this.attribute = 'circle-progress';\r\n        ICONS['special_circle_progress'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  class=\\\"circle-progress\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle-progress-path\\\" d=\\\"M 50,5.3660047 A 44.867708,44.633994 0 0 1 94.867709,49.999997 44.867708,44.633994 0 0 1 50,94.633995 44.867708,44.633994 0 0 1 5.1322908,50.000001 44.867708,44.633994 0 0 1 50,5.3660047\\\"></path></svg>\";\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiCircleHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiCircleHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #element: Element;\r\n    #isInitialized: boolean;\r\n    #factor: number;\r\n    #full: number;\r\n    #path: any;\r\n    #prevValue: number;\r\n    #iconStr: string;\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiCircleHandler\", utils);\r\n        this.#element = element;\r\n        this.#factor = this.#full = 0;\r\n        this.#path = null\r\n        this.#prevValue = -1;\r\n        this.#attribute = attribute;\r\n    }\r\n\r\n    handle(): void {\r\n        console.log('circle');\r\n        if (!is(this.#isInitialized)) {\r\n            const iconSvg = new IconBuilder(ICONS['special_circle_progress']).build();\r\n            const svg = this.#element.querySelector('svg')\r\n            if (is(svg)) {\r\n                svg.remove();\r\n            }\r\n            this.#element.appendChild(iconSvg);\r\n            this.#path = this.#element.querySelector('.circle-progress-path');\r\n            this.#full = this.#path.getTotalLength();\r\n            this.#factor = this.#full / 100;\r\n            this.#isInitialized = true;\r\n        }\r\n        this.fetch(this.readStyle)\r\n    }\r\n\r\n    refresh(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    private updateStyle(value: number) {\r\n        console.log('Write progress')\r\n        this.#path.style.strokeDashoffset = value;\r\n    }\r\n\r\n    private readStyle(): void {\r\n        console.log('Read progress')\r\n        const value = this.#element.hasAttribute(this.#attribute) ? parseInt(this.#element.getAttribute(this.#attribute)) : 0;\r\n        if (value === this.#prevValue) {\r\n            return;\r\n        }\r\n        this.#prevValue = value;\r\n        const progress = getRangeValue(value, 0, 100);\r\n\r\n        this.mutate(this.updateStyle, this.#full - this.#factor * progress);\r\n    }\r\n\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { IconBuilder } from \"../icon/icon\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiSpinnerComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor() {\r\n        this.attribute = 'data-spinner';\r\n        ICONS['special_circle_double'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"circle-double\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle-double-outer\\\" d=\\\"M 50.000002,6.1070619 A 44.867709,44.126654 0 0 1 94.867708,50.233712 44.867709,44.126654 0 0 1 50.000002,94.36037 44.867709,44.126654 0 0 1 5.132292,50.233717 44.867709,44.126654 0 0 1 50.000002,6.1070619\\\"></path><path class=\\\"circle-double-inner\\\" d=\\\"M 50.000001,15.59972 A 35.383463,34.633995 0 0 1 85.383464,50.233711 35.383463,34.633995 0 0 1 50.000001,84.86771 35.383463,34.633995 0 0 1 14.616536,50.233716 35.383463,34.633995 0 0 1 50.000001,15.59972\\\"></path></svg>\"\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiSpinnerHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiSpinnerHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #element: Element;\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiSpinnerHandler\", utils);\r\n        this.#element = element;\r\n        this.#attribute = attribute\r\n    }\r\n    handle(): void {\r\n        const spinnerName = this.#element.getAttribute(this.#attribute);\r\n        const svgIcon = is(spinnerName) ? ICONS[`spinner_${spinnerName}`] : null;\r\n        if (!is(svgIcon)) {\r\n            return;\r\n        }\r\n        const iconElement = new IconBuilder(svgIcon).build();\r\n        this.#element.innerHTML = \"\";\r\n        this.mutate(this.addSpinner, iconElement, spinnerName);\r\n    }\r\n\r\n    refresh(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    private addSpinner(iconElement: Element, name: string) {\r\n        this.#element.appendChild(iconElement);\r\n        this.#element.classList.add(`animation-spinner-${name}`);\r\n    }\r\n\r\n}","import { CuiSetupInit } from \"../core/models/setup\";\r\nimport { is } from \"../core/utlis/functions\";\r\nimport { CuiInstance } from \"./instance\";\r\nimport { ICONS } from \"../core/utlis/statics\";\r\nimport { ICuiPlugin, CuiInitData, CuiInitResult, ICuiComponent } from \"../core/models/interfaces\";\r\nimport { CuiAutoLightModePlugin } from \"../plugins/light/light\";\r\nimport { CuiIconComponent } from \"../components/icon/icon\";\r\nimport { CuiCircleComponent } from \"../components/circle/circle\";\r\nimport { CuiSpinnerComponent } from \"../components/spinner/spinner\";\r\n\r\nexport class CuiInitializer {\r\n    #window: any;\r\n    constructor() {\r\n        this.#window = window;\r\n    }\r\n\r\n    async init(setup: CuiInitData): Promise<CuiInitResult> {\r\n        let settings: CuiSetupInit = { ... new CuiSetupInit(), ...setup.setup }\r\n        const appPrefix: string = settings.app;\r\n        const result: CuiInitResult = {\r\n            result: false\r\n        }\r\n        if (is(this.#window[appPrefix])) {\r\n            result.message = \"Instance is already initialized\";\r\n            return result;\r\n        }\r\n        if (is(setup.icons)) {\r\n            for (let icon in setup.icons) {\r\n                ICONS[icon] = setup.icons[icon];\r\n            }\r\n        }\r\n        try {\r\n            this.#window[appPrefix] = new CuiInstance(settings, setup.plugins, setup.components)\r\n            this.#window[appPrefix].init();\r\n        } catch (e) {\r\n            console.error(e);\r\n            result.message = \"An error occured during initialization\";\r\n            return result;\r\n        }\r\n        result.result = true;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class CuiInit {\r\n    #isInitialized: boolean;\r\n    constructor() {\r\n        this.#isInitialized = false;\r\n    }\r\n\r\n    async init(setup: CuiSetupInit, icons: any): Promise<boolean> {\r\n        if (this.#isInitialized) {\r\n            console.log(\"Module is already initialized\")\r\n            return false;\r\n        }\r\n        const initializer = new CuiInitializer();\r\n        const plugins: ICuiPlugin[] = [\r\n            new CuiAutoLightModePlugin({ autoLight: true })\r\n        ];\r\n\r\n        const components: ICuiComponent[] = [\r\n            new CuiIconComponent(),\r\n            new CuiCircleComponent(),\r\n            new CuiSpinnerComponent()\r\n        ];\r\n\r\n        let result = await initializer.init({\r\n            setup: setup,\r\n            icons: icons,\r\n            plugins: plugins,\r\n            components: components\r\n        })\r\n        if (result.result) {\r\n            this.#isInitialized = true;\r\n            return true;\r\n        } else {\r\n            console.error(`A cUI instance failed to initialize: [${result.message ?? \"#\"}]`);\r\n        }\r\n        console.log(\"Cui Light failed to init\")\r\n        return false;\r\n\r\n    }\r\n}","import { CuiInit } from './app/initializer';\r\n//import \"../node_modules/cui-styles/styles/style.scss\";\r\nimport './styles.scss';\r\nconst $: any = window;\r\n$.cuiInit = new CuiInit();"],"sourceRoot":""}