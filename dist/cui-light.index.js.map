{"version":3,"sources":["webpack://cui-light/webpack/universalModuleDefinition","webpack://cui-light/webpack/bootstrap","webpack://cui-light/./src/core/models/setup.ts","webpack://cui-light/./src/core/models/errors.ts","webpack://cui-light/./src/core/utlis/statics.ts","webpack://cui-light/./src/core/utlis/functions.ts","webpack://cui-light/./src/core/utlis/logger.ts","webpack://cui-light/./src/core/factories/logger.ts","webpack://cui-light/./src/core/helpers/helpers.ts","webpack://cui-light/./src/core/utlis/actions.ts","webpack://cui-light/./src/app/managers/element.ts","webpack://cui-light/./src/app/observers/mutations.ts","webpack://cui-light/./src/app/managers/toast.ts","webpack://cui-light/./src/app/helpers/collection.ts","webpack://cui-light/./src/app/managers/collection.ts","webpack://cui-light/./src/core/utlis/interactions.ts","webpack://cui-light/./src/core/utlis/dictionary.ts","webpack://cui-light/./src/app/managers/cache.ts","webpack://cui-light/./src/core/bus/bus.ts","webpack://cui-light/./src/core/bus/handlers.ts","webpack://cui-light/./src/core/bus/executors.ts","webpack://cui-light/./src/core/styles/appender.ts","webpack://cui-light/./src/app/handlers/colors.ts","webpack://cui-light/./src/app/observers/resize.ts","webpack://cui-light/./src/core/models/utils.ts","webpack://cui-light/./src/core/factories/interactions.ts","webpack://cui-light/./src/app/managers/plugins.ts","webpack://cui-light/./src/app/instance.ts","webpack://cui-light/./src/core/listeners/media.ts","webpack://cui-light/./src/plugins/light/light.ts","webpack://cui-light/./src/app/handlers/base.ts","webpack://cui-light/./src/components/icon/icon.ts","webpack://cui-light/./src/components/circle/circle.ts","webpack://cui-light/./src/components/spinner/spinner.ts","webpack://cui-light/./src/components/dummy/dummy.ts","webpack://cui-light/./src/components/scroll/scroll.ts","webpack://cui-light/./src/core/listeners/scroll.ts","webpack://cui-light/./src/components/scrollspy/scrollspy.ts","webpack://cui-light/./src/plugins/print/print.ts","webpack://cui-light/./src/app/observers/intersection.ts","webpack://cui-light/./src/components/intersection/intersection.ts","webpack://cui-light/./src/components/open/open.ts","webpack://cui-light/./src/components/close/close.ts","webpack://cui-light/./src/components/toggle/toggle.ts","webpack://cui-light/./src/components/resize/resize.ts","webpack://cui-light/./src/core/listeners/keys.ts","webpack://cui-light/./src/plugins/keys/observer.ts","webpack://cui-light/./src/plugins/keys/keys.ts","webpack://cui-light/./src/app/initializer.ts","webpack://cui-light/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CuiSetup","this","autoLightMode","scrollThreshold","resizeThreshold","plugins","init","prefix","logLevel","cacheSize","animationTime","animationTimeShort","animationTimeLong","CuiSetupInit","app","interaction","ErrorBase","Error","message","super","setPrototypeOf","ItemNotFoundError","ArgumentError","CuiInstanceInitError","CuiScrollSpyOutOfRangeError","CLASSES","ICONS","close","accordion","special_menu","special_fail","special_success","CSS_THEMES","light","base","muted","active","dark","accent","secondary","success","warning","error","STATICS","EVENTS","COMPONENTS_COUNTER","idx","is","val","typecheck","Array","isArray","length","getName","sleep","timeout","Promise","resolve","setTimeout","getRangeValue","min","max","getRangeValueOrDefault","def","isNaN","are","attributes","calcWindowSize","width","parseAttributeString","attribute","ret","out","startsWith","endsWith","JSON","parse","e","console","component","functionName","Date","toLocaleString","trim","includes","split","forEach","sp","getOffsetTop","element","offsetTop","parseInt","getStyleValue","getIntOrDefault","integer","target","currentStyle","getComputedStyle","getPropertyValue","isInRange","getActiveClass","parseAttribute","getAttribute","getStringOrDefault","toLowerCase","isString","generateCUID","next","getRandomInt","Math","ceil","floor","random","registerCuiElement","node","components","utils","$handlers","matching","filter","a","hasAttribute","match","find","styleAppender","append","getStyle","handler","handle","$cuid","tagName","CuiLogger","level","id","log","prepString","warn","exception","stack","callback","start","now","interactions","action","mutate","add","classList","remove","className","contains","CuiInboundAction","setLightMode","setDarkMode","getLightMode","DummyAction","substring","elements","classes","fetch","attributeName","reduce","current","push","attributeValue","setAttribute","removeAttribute","onClick","addEventListener","eventName","lock","index","unlock","delay","setup","change","openClass","animationClass","performAction","then","closeClass","args","subtree","attributeFilter","debug","MutationObserver","mutationCallback","observe","disconnect","mutations","observer","mutation","type","item","refresh","handleChildListMutation","onMutation","addedLen","addedNodes","removedLen","removedNodes","handleAddedNodes","handleRemovedNodes","nodes","toastElement","document","querySelector","createElement","body","appendChild","innerHTML","currentElement","nextElement","animIn","animOut","count","newIndex","animClassIn","animClassOut","duration","addAnimationClass","setFinalClasses","len","setElements","setToggle","set","check","newIdx","getCurrentIndex","verifyIndex","setCurrent","setCurrentWithAnimation","FastDom","isScheduled","raf","requestAnimationFrame","writes","reads","ctx","createTask","schedule","tasks","task","shift","recursion","flush","rec","run","SyncInteractions","isRunning","x","throwOnEmptyKey","containsKey","indexOf","splice","maxSize","has","update","clean","clear","keys","emitHandler","cui","prepareEventId","getCuid","ev","getId","isAttached","event","cuid","rand","rand2","queue","isBusy","emitId","handleId","executor","events","perform","promises","idMatches","execute","all","apply","style","head","getElementsByTagName","text","createTextNode","documentElement","setPropertyIn","toCssString","colors","baseColor","mutedColor","clone","lighten","activeColor","darken","setProperty","factor","propertyName","bus","threshold","innerWidth","findIndex","listener","removeEventListener","diff","abs","currentSize","resizeData","previous","height","innerHeight","timestamp","emit","resize","initialSetup","fromInit","cache","connect","flag","prop","replace","plugin","description","mutatedAttributes","map","initElements","querySelectorAll","join","setComponents","setAttributes","setPlugins","stop","selector","existing","newElement","put","manager","show","context","on","CuiMediaQueryListener","mediaQuery","matchMedia","autoLightInit","autoLight","matches","setCallback","onChange","attach","detach","autoLightSetup","componentName","_log","data","CuiIconComponent","iconAttr","iconStr","iconSvg","build","svg","childNodes","insertBefore","iconElement","firstChild","svgString","scale","created","htmlString","template","content","children","IconScaleAppender","toString","getTotalLength","readStyle","strokeDashoffset","progress","updateStyle","spinnerName","svgIcon","addSpinner","CuiDummyComponent","parseArguments","to","by","scrollTop","scrollBy","top","behavior","emitEvent","parent","preventDefault","parentElement","scrollLeft","passedThreshold","left","offset","link","linkAction","CuiScrollspyComponent","calculateCurrent","onScroll","calculateCurrentLeft","newTarget","scroll","ratio","clientHeight","offsetLeft","clientWidth","autoPrintInit","autoPrint","setPrintMode","CuiIntersectionObserver","IntersectionObserver","rootMargin","unobserve","CuiIntersectionComponent","onIntersection","prev","assign","entries","entry","getAction","isIntersecting","intersectionRatio","emitIntersection","CuiOpenComponent","isValid","emitOpen","CuiCloseComponent","getTarget","emitClose","CuiToggleComponent","toggle","CuiResizeComponent","singleEmit","onKeyDown","onKeyUp","code","keySetup","settings","appPrefix","result","icons","icon","cuiInit","initializer","pluginList","componentList"],"mappings":"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","file":"cui-light.index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cui-light\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cui-light\"] = factory();\n\telse\n\t\troot[\"cui-light\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { CuiLogLevel, CuiInteractionsType } from \"../utlis/types\";\r\nimport { CuiColorSet } from \"./colors\";\r\n\r\ninterface CuiSetupCommon {\r\n    prefix?: string;\r\n    logLevel?: CuiLogLevel;\r\n    cacheSize?: number;\r\n    autoLightMode?: boolean;\r\n    animationTime?: number;\r\n    animationTimeShort?: number;\r\n    animationTimeLong?: number;\r\n    scrollThreshold?: number;\r\n    resizeThreshold?: number;\r\n}\r\n\r\nexport class CuiSetup implements CuiSetupCommon {\r\n    prefix?: string;\r\n    logLevel?: CuiLogLevel;\r\n    cacheSize?: number;\r\n    autoLightMode?: boolean;\r\n    animationTime?: number;\r\n    animationTimeShort?: number;\r\n    animationTimeLong?: number;\r\n    scrollThreshold: number;\r\n    resizeThreshold: number;\r\n    plugins: any;\r\n\r\n    constructor() {\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n        this.plugins = {};\r\n    }\r\n\r\n    fromInit(init: CuiSetupInit): CuiSetup {\r\n        this.prefix = init.prefix;\r\n        this.logLevel = init.logLevel;\r\n        this.cacheSize = init.cacheSize;\r\n        this.autoLightMode = init.autoLightMode;\r\n        this.animationTime = init.animationTime;\r\n        this.animationTimeShort = init.animationTimeShort;\r\n        this.animationTimeLong = init.animationTimeLong;\r\n        this.scrollThreshold = init.scrollThreshold;\r\n        this.resizeThreshold = init.resizeThreshold;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nexport class CuiSetupInit implements CuiSetupCommon {\r\n    prefix?: string;\r\n    app?: string;\r\n    interaction?: CuiInteractionsType;\r\n    logLevel?: CuiLogLevel;\r\n    cacheSize?: number;\r\n    autoLightMode?: boolean;\r\n    animationTime?: number;\r\n    animationTimeShort?: number;\r\n    animationTimeLong?: number;\r\n    scrollThreshold?: number;\r\n    resizeThreshold?: number;\r\n\r\n    constructor() {\r\n        this.prefix = 'cui';\r\n        this.app = '$cui';\r\n        this.logLevel = 'warning';\r\n        this.interaction = 'async';\r\n        this.animationTime = 300;\r\n        this.animationTimeShort = 150;\r\n        this.animationTimeLong = 500;\r\n        this.cacheSize = 500;\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n    }\r\n}","export class ErrorBase extends Error {\r\n    constructor(name: string, message?: string,) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class ItemNotFoundError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ItemNotFoundError\", message);\r\n    }\r\n}\r\n\r\nexport class ArgumentError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\n\r\nexport class CuiBusError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\n\r\nexport class CuiInstanceInitError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"CuiInstanceInitError\", message);\r\n    }\r\n}\r\n\r\nexport class CuiScrollSpyOutOfRangeError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"CuiScrollSpyOutOfRangeError\", message);\r\n    }\r\n}\r\n\r\n","import { CuiLogLevel } from \"./types\";\r\nimport { CuiColorPair } from \"../models/colors\";\r\nimport { counter } from \"./functions\";\r\n\r\nexport const CLASSES = {\r\n    dark: 'dark',\r\n    animProgress: 'animation-progress',\r\n    print: 'print',\r\n    active: 'active'\r\n}\r\n\r\nexport const ICONS: any = {\r\n    close: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 1.9999999,1.9999999 18,18\\\"></path><path d=\\\"M 18,1.9999999 1.9999999,18\\\"></path></svg>\",\r\n    accordion: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 5.0000475,7.4490018 10.000024,12.551028 15,7.4490018\\\"></path></svg>\",\r\n    special_menu: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path class=\\\"menu_handle_2\\\" d=\\\"M 1,10 H 19\\\"></path><path class=\\\"menu_handle_1\\\" d=\\\"M 1,4.8571429 H 19\\\"></path><path  class=\\\"menu_handle_3\\\" d=\\\"M 1,15.142857 H 19\\\"></path></svg>\",\r\n    special_fail: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-fail\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7.000001 A 43,43 0 0 1 92.999999,50 43,43 0 0 1 50,92.999999 43,43 0 0 1 7.0000011,50 43,43 0 0 1 50,7.000001 Z\\\"></path><path class=\\\"arm_1\\\" d=\\\"M 28.536809,28.536809 71.342023,71.342023\\\"></path><path class=\\\"arm_2\\\" d=\\\"M 71.342023,28.536809 28.536809,71.342023\\\"></path></svg>\",\r\n    special_success: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-success\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7 A 43,43 0 0 1 93,50 43,43 0 0 1 50,93 43,43 0 0 1 7,50 43,43 0 0 1 50,7 Z\\\"></path><path class=\\\"arm\\\" d=\\\"M 22.988405,48.234784 36.946233,72.410453 75.516456,33.84023\\\"></path></svg>\",\r\n};\r\n\r\nexport const COLORS = ['red', 'green', 'blue', 'alpha']\r\n\r\nexport const CSS_APP_BACKGROUND_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-app-background',\r\n    dark: '--cui-color-dark-app-background'\r\n}\r\n\r\nexport const CSS_COMPONENT_BACKGROUND_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-background',\r\n    dark: '--cui-color-dark-background '\r\n}\r\n\r\nexport const CSS_COMPONENT_BORDER_COLORS: CuiColorPair = {\r\n    light: '--cui-color-light-border',\r\n    dark: '--cui-color-dark-border'\r\n}\r\n\r\nexport const CSS_THEMES = {\r\n    light: {\r\n        base: '--cui-color-light-base',\r\n        muted: '--cui-color-light-muted',\r\n        active: '--cui-color-light-active'\r\n    },\r\n    dark: {\r\n        base: '--cui-color-dark-base',\r\n        muted: '--cui-color-dark-muted',\r\n        active: '--cui-color-dark-active'\r\n    },\r\n    accent: {\r\n        base: '--cui-color-primary',\r\n        muted: '--cui-color-primary-muted',\r\n        active: '--cui-color-primary-active'\r\n    },\r\n    secondary: {\r\n        base: '--cui-color-secondary',\r\n        muted: '--cui-color-secondary-muted',\r\n        active: '--cui-color-secondary-active'\r\n    },\r\n    success: {\r\n        base: '--cui-color-success',\r\n        muted: '--cui-color-success-muted',\r\n        active: '--cui-color-success-active'\r\n    },\r\n    warning: {\r\n        base: '--cui-color-warning',\r\n        muted: '--cui-color-warning-muted',\r\n        active: '--cui-color-warning-active'\r\n    },\r\n    error: {\r\n        base: '--cui-color-error',\r\n        muted: '--cui-color-error-muted',\r\n        active: '--cui-color-error-active'\r\n    }\r\n}\r\n\r\nexport const CSS_VARIABLES: any = {\r\n    fontSize: \"--{prefix}-font-size\",\r\n    lineHeight: \"--{prefix}-line-height\",\r\n    animationTime: \"--{prefix}-animation-time\",\r\n    animationTimeLong: \"--{prefix}-animation-time-long\",\r\n    animationTimeShort: \"--{prefix}-animation-time-short\",\r\n    colorLightAppBackground: \"--{prefix}-color-light-app-background\",\r\n    colorLightBackground: \"--{prefix}-color-light-background\",\r\n    colorLightBorder: \"--{prefix}-color-light-border\",\r\n    colorLightBase: \"--{prefix}-color-light-base\",\r\n    colorLightActive: \"--{prefix}-color-light-active\",\r\n    colorLightMuted: \"--{prefix}-color-light-muted\",\r\n    colorDarkAppBackground: \"--{prefix}-color-dark-app-background\",\r\n    colorDarkBackground: \"--{prefix}-color-dark-background\",\r\n    colorDarkBorder: \"--{prefix}-color-dark-border\",\r\n    colorDarkBase: \"--{prefix}-color-dark-base\",\r\n    colorDarkActive: \"--{prefix}-color-dark-active\",\r\n    colorDarkMuted: \"--{prefix}-color-dark-muted\",\r\n    colorAccent: \"--{prefix}-color-primary\",\r\n    colorAccentActive: \"--{prefix}-color-primary-active\",\r\n    colorAccentMuted: \"--{prefix}-color-primary-muted\",\r\n    colorAccentShade: \"--{prefix}-color-primary-shade\",\r\n    colorAccentShadeDark: \"--{prefix}-color-primary-shade-dark\",\r\n    colorSecondary: \"--{prefix}-color-secondary\",\r\n    colorSecondaryActive: \"--{prefix}-color-secondary-active\",\r\n    colorSecondaryMuted: \"--{prefix}-color-secondary-muted\",\r\n    colorSecondaryShade: \"--{prefix}-color-secondary-shade\",\r\n    colorSecondaryShadeDark: \"--{prefix}-color-secondary-shade-dark\",\r\n    colorWarning: \"--{prefix}-color-warning\",\r\n    colorWarningActive: \"--{prefix}-color-warning-active\",\r\n    colorWarningMuted: \"--{prefix}-color-warning-muted\",\r\n    colorWarningShade: \"--{prefix}-color-warning-shade\",\r\n    colorWarningShadeDark: \"--{prefix}-color-warning-shade-dark\",\r\n    colorSuccess: \"--{prefix}-color-success\",\r\n    colorSuccessActive: \"--{prefix}-color-success-active\",\r\n    colorSuccessMuted: \"--{prefix}-color-success-muted\",\r\n    colorSuccessShade: \"--{prefix}-color-success-shade\",\r\n    colorSuccessShadeDark: \"--{prefix}-color-success-shade-dark\",\r\n    colorError: \"--{prefix}-color-error\",\r\n    colorErrorActive: \"--{prefix}-color-error-active\",\r\n    colorErrorMuted: \"--{prefix}-color-error-muted\",\r\n    colorErrorShade: \"--{prefix}-color-error-shade\",\r\n    colorErrorShadeDark: \"--{prefix}-color-error-shade-dark\",\r\n    inputBackground: \"--{prefix}-input-background-color\",\r\n    colorShade: \"--{prefix}-color-shade\",\r\n    colorShadeDarker: \"--{prefix}-color-shade-darker\",\r\n    colorShadeLight: \"--{prefix}-color-shade-light\",\r\n    colorShadeLighter: \"--{prefix}-color-shade-light-lighter\",\r\n    outline: \"--{prefix}-outline\",\r\n    borderRadius: \"--{prefix}-border-radius\",\r\n    padding: \"--{prefix}-padding\",\r\n    margin: \"--{prefix}-margin\",\r\n    scrollbarWidth: \"--{prefix}-scrollbar-width\",\r\n    componentSpace: \"--{prefix}-component-space\"\r\n}\r\n\r\n\r\nexport class STATICS {\r\n    static logLevel: CuiLogLevel = 'none';\r\n    static prefix: string = 'cui';\r\n}\r\n\r\nexport const EVENTS = {\r\n    INSTANCE_INITIALIZED: 'instance-initialized',\r\n    INSTANCE_FINISHED: 'instance-finished',\r\n    ON_RESIZE: \"resize\",\r\n    ON_OPEN: \"open\",\r\n    ON_CLOSE: \"close\",\r\n    ON_TOGGLE: \"toggle\",\r\n    ON_SCROLL: \"scroll\",\r\n    ON_TARGET_CHANGE: 'targetchange',\r\n    ON_INTERSECTION: 'intersection',\r\n    ON_KEYDOWN: 'keydown',\r\n    ON_SCROLLBY: 'scrollby'\r\n}\r\n\r\nexport const OBSERVABLE_SCROLL = \"SCROLL\";\r\nexport const OBSERVABLE_INTERSECTION = \"INTERSECTION\";\r\nexport const COMPONENTS_COUNTER = counter();","import { CuiLightMode, CuiWindowSize } from \"./types\";\r\nimport { ArgumentError } from \"../models/errors\";\r\nimport { ICuiComponent, CuiElement } from \"../models/interfaces\";\r\nimport { CuiUtils } from \"../models/utils\";\r\nimport { COMPONENTS_COUNTER } from \"./statics\";\r\n\r\n/**\r\n * Checks if value is defined an is not null\r\n * Additionally with type check it can check value if it is not empty string or collection or object\r\n * \r\n * @param val - value\r\n * @param typecheck - default true - additional check whether value is not empty (string, collection, object)\r\n * @returns whether value passed all conditions\r\n */\r\nexport function is(val: any, typecheck: boolean = true): boolean {\r\n    if (typeof val !== 'undefined' && val !== null) {\r\n        if (!typecheck) {\r\n            return true;\r\n        } else {\r\n            return !isEmpty(val)\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Checks if value is empty string, array or object\r\n *\r\n *\r\n * @param val - value\r\n * @returns whether value passed all conditions\r\n */\r\nexport function isEmpty(val: any): boolean {\r\n    if (typeof val === \"string\") {\r\n        return val.length === 0\r\n    }\r\n    else if (Array.isArray(val)) {\r\n        return val.length === 0\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getName(prefix: string, name: string) {\r\n    if (!is(prefix) || !is(name)) {\r\n        throw new ArgumentError(\"Missing argument value\")\r\n    }\r\n    return `${prefix}-${name}`\r\n}\r\n\r\nexport function sleep(timeout: number): Promise<boolean> {\r\n    return new Promise(resolve => setTimeout(() => {\r\n        resolve(true)\r\n    }, timeout));\r\n}\r\n\r\n/**\r\n * Creates proper html element from given string\r\n * @param htmlString - string containing html\r\n */\r\nexport function createElementFromString(htmlString: string): Element {\r\n    if (!is(htmlString)) {\r\n        return null;\r\n    }\r\n    let template = document.createElement('template')\r\n    template.innerHTML = htmlString\r\n    return template.content.children.length > 0 ? template.content.children[0] : null;\r\n}\r\n\r\nexport function getMatchingAttribute(element: any, attributes: string[]): string {\r\n    let attr = null;\r\n    let len = attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        let attribute = attributes[i];\r\n        if (element.hasAttribute(attribute)) {\r\n            attr = attribute\r\n            break;\r\n        }\r\n    }\r\n    return attr;\r\n}\r\n\r\nexport function getMatchingAttributes(element: any, attributes: string[]): string[] {\r\n    return attributes.filter(a => {\r\n        return element.hasAttribute(a);\r\n    });\r\n}\r\n\r\nexport function getRangeValue(value: number, min: number, max: number) {\r\n    if (value < min) {\r\n        return min;\r\n    } else if (value > max) {\r\n        return max;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getRangeValueOrDefault(value: number, min: number, max: number, def: number) {\r\n    if (value === null || typeof value === 'undefined' || isNaN(value)) {\r\n        return def;\r\n    }\r\n    return getRangeValue(value, min, max)\r\n}\r\n\r\nexport function increaseValue(value: number, amount: number): number {\r\n    return amount < 0 || amount > 1 ? 0 : value + (value * amount);\r\n}\r\n\r\nexport function decreaseValue(value: number, amount: number): number {\r\n    return amount < 0 || amount > 1 ? 0 : value - (value * amount);\r\n}\r\n\r\nexport function clone(object: any): any {\r\n    if (!is(object)) {\r\n        return null;\r\n    }\r\n    return Object.assign({}, object);\r\n}\r\n\r\nexport function getSingleColorRatio(first: number, second: number, max: number): number {\r\n    return Math.abs(((first - second) / max) * 100)\r\n}\r\n\r\n/**\r\n * Creates string containg css selector for array of attributes\r\n * @param attributes - attributes values\r\n */\r\nexport function joinAttributesForQuery(attributes: string[]): string {\r\n    if (!is(attributes)) {\r\n        return \"\"\r\n    }\r\n    return `[${attributes.join('],[')}]`\r\n}\r\n\r\n/**\r\n * Checks light system light mode\r\n * @returns Light Mode - dark/light\r\n */\r\nexport function getSystemLightMode(): CuiLightMode {\r\n    return window.matchMedia &&\r\n        window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n}\r\n\r\n/**\r\n * Check print mode in the browser window\r\n * @returns true if window is displayed in print mode\r\n */\r\nexport function getSystemPrintMode(): boolean {\r\n    return window.matchMedia &&\r\n        window.matchMedia('print').matches;\r\n}\r\n\r\n/**\r\n * Verifies whether attributes exist and have some values\r\n * @param attributes attributes list\r\n */\r\nexport function are(...attributes: any[]): boolean {\r\n    if (!is(attributes)) {\r\n        return false\r\n    }\r\n    let c = attributes.length;\r\n    for (let i = 0; i < c; i++) {\r\n        if (!is(attributes[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function calcWindowSize(width: number): CuiWindowSize {\r\n    if (width <= 640) {\r\n        return 'small';\r\n    } else if (width > 640 && width <= 960) {\r\n        return \"medium\"\r\n    } else if (width > 960 && width <= 1200) {\r\n        return \"large\"\r\n    }\r\n    return 'xlarge';\r\n}\r\n\r\n/**\r\n * Creates object from string.\r\n * Supported syntaxes are:\r\n * - JSON\r\n * - single value\r\n * - key:value,value;key=value\r\n * \r\n * @param attribute - attribute value\r\n */\r\nexport function parseAttributeString(attribute: string): any {\r\n    let ret: any = parseJsonString(attribute.trim())\r\n\r\n    if (!is(ret)) {\r\n        if (!attribute.includes(';') && !attribute.includes(':')) {\r\n            ret = attribute;\r\n        } else {\r\n            ret = {}\r\n            attribute.split(';').forEach(val => {\r\n                let sp = val.split(':')\r\n                if (sp.length === 2) {\r\n                    ret[sp[0].trim()] = sp[1].trim()\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * Creates object from JSON string\r\n* String must start with { and end with }\r\n *\r\n * @param attribute - attribute value\r\n * @returns object if string passes test, null otherwise\r\n */\r\n\r\nexport function parseJsonString(attribute: string): any | null {\r\n    let out = null;\r\n    if (is(attribute) && attribute.startsWith('{') && attribute.endsWith('}')) {\r\n        try {\r\n            out = jsonify(attribute);\r\n        } catch (e) {\r\n            console.error(prepLogString(\"An exception occured\", 'Functions', 'parseJsonString'), e)\r\n        }\r\n        return out;\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates object from JSON string\r\n * @param attribute - JSON string\r\n */\r\nexport function jsonify(attribute: string): any {\r\n    return attribute && attribute.length > 0 ? JSON.parse(attribute) : {}\r\n}\r\n\r\nexport function getOffsetTop(element: HTMLElement) {\r\n    if (!is(element)) {\r\n        return -1;\r\n    }\r\n    let val = element.offsetTop - parseInt(getStyleValue(element, 'margin-top')) - parseInt(getStyleValue(element, 'padding-top')) - parseInt(getStyleValue(element, 'border-top-width'))\r\n    return val < 0 ? element.offsetTop : val;\r\n\r\n}\r\n\r\nexport function getOffsetLeft(element: HTMLElement) {\r\n    if (!is(element)) {\r\n        return -1;\r\n    }\r\n    let val = element.offsetLeft - parseInt(getStyleValue(element, 'margin-left')) - parseInt(getStyleValue(element, 'padding-left')) - parseInt(getStyleValue(element, 'border-left-width'))\r\n    return val < 0 ? element.offsetLeft : val;\r\n}\r\n\r\nexport function getIntOrDefault(value: any, def: number): number {\r\n    let integer = parseInt(value);\r\n    return isNaN(integer) ? def : integer;\r\n}\r\n\r\nexport function getStyleValue(target: any, property: string): any {\r\n    if (!is(target) || !is(property)) {\r\n        return null;\r\n    }\r\n    if (target.currentStyle) {\r\n        return target.currentStyle[property];\r\n    } else if (window.getComputedStyle) {\r\n        return window.getComputedStyle(target, null).getPropertyValue(property)\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function prepLogString(message: string, component: string, functionName?: string) {\r\n    return `[${new Date().toLocaleString()}][${component ?? \"-\"}][${functionName ?? '-'}][${message}]`\r\n}\r\n\r\nexport function isInRange(value: number, min: number, max: number): boolean {\r\n    return is(value) && value >= min && value <= max;\r\n}\r\n\r\nexport function getActiveClass(prefix: string) {\r\n    return `${prefix ?? \"\"}-active`;\r\n}\r\n\r\nexport function parseAttribute(element: Element, attribute: string): any {\r\n    return are(element, attribute) ? parseAttributeString(element.getAttribute(attribute)) : null;\r\n}\r\n\r\n\r\n/**\r\n *  Checks whether string value contains synonym of true\r\n * @param value - string to check\r\n */\r\nexport function isStringTrue(value: string): boolean {\r\n    return is(value) ? ['y', 't', 'true', 'yes'].includes(value.toLowerCase()) : false\r\n}\r\n\r\nexport function boolStringOrDefault(prop: any, def: boolean): boolean {\r\n    return is(prop) ? isStringTrue(prop) : def;\r\n}\r\n\r\nexport function getStringOrDefault(value: any, def: string) {\r\n    return is(value) ? value.toLowerCase() : def;\r\n}\r\n\r\n/**\r\n * Checks whether device supports touch\r\n */\r\nexport function isTouchSupported(): boolean {\r\n    return ('ontouchstart' in window) ||\r\n        (navigator.maxTouchPoints > 0) ||\r\n        (navigator.msMaxTouchPoints > 0);\r\n}\r\n\r\n/**\r\n * Checks whether value is type of string\r\n * @param {any} value - value to be checked\r\n */\r\nexport function isString(value: any): boolean {\r\n    return typeof value === 'string';\r\n}\r\n\r\n\r\n/**\r\n * Replaces mask {prefix} with actual value in the string\r\n * @param {string} value - text containg a mask\r\n * @param {string} prefix - value to be put in place of mask\r\n */\r\nexport function replacePrefix(value: string, prefix: string): string {\r\n    return !is(value) ? value : value.replace(\"{prefix}\", prefix ?? \"\");\r\n}\r\n\r\n/**\r\n * Generates identifier for Cui element\r\n * \r\n * @param element - Cui element selector\r\n * @returns generated identifier\r\n */\r\nexport function generateCUID(element?: string) {\r\n    let starter = is(element) ? element : \"cui-element\"\r\n    return `${starter}-${COMPONENTS_COUNTER.next().value}}`;\r\n}\r\n\r\n/**\r\n * Generates random string\r\n */\r\nexport function generateRandomString(): string {\r\n    let rand = getRandomInt(1, 1000)\r\n    let rand2 = getRandomInt(1, 100)\r\n    return `${Math.floor(Math.random() * rand2)}-${Math.floor(rand)}`;\r\n}\r\n/**\r\n * Generates random integer\r\n * @param min - min number\r\n * @param max - max number\r\n * @returns random integer\r\n */\r\nexport function getRandomInt(min: number, max: number): number {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * Registers Element as Cui element, initializes handlers, sets component style to document header and sets $cuid\r\n * @param {any} node - document node\r\n * @param {ICuiComponent[]} components -supported components array\r\n * @param {string[]} attributes - supported attributes array\r\n * @param {CuiUtils} utils - Cui Utils instance\r\n */\r\nexport function registerCuiElement(node: any, components: ICuiComponent[], attributes: string[], utils: CuiUtils) {\r\n    let element = node as CuiElement;\r\n    element.$handlers = {};\r\n    let matching: string[] = getMatchingAttributes(node, attributes)\r\n    if (is(matching)) {\r\n        matching.forEach(match => {\r\n            let component = components.find(c => { return c.attribute === match });\r\n            if (is(component)) {\r\n                utils.styleAppender.append(component.getStyle());\r\n                let handler = component.get(node, utils);\r\n                element.$handlers[component.attribute] = handler;\r\n                element.$handlers[component.attribute].handle();\r\n            }\r\n        })\r\n        element.$cuid = generateCUID(node.tagName)\r\n    }\r\n}\r\n\r\nexport function* counter() {\r\n    let idx = 0;\r\n    while (true) {\r\n        let reset = yield idx++;\r\n        if (reset || idx > 200000) {\r\n            idx = 0\r\n        }\r\n    }\r\n\r\n}","import { CuiLogLevel } from \"./types\";\r\nimport { ICuiLogger } from \"../models/interfaces\";\r\n\r\nexport class CuiLogger implements ICuiLogger {\r\n    level: CuiLogLevel\r\n    component: string;\r\n    id: string;\r\n    constructor(name: string, level: CuiLogLevel) {\r\n        this.level = level\r\n        this.component = name\r\n        this.id = \"-\";\r\n    }\r\n\r\n    setLevel(level: CuiLogLevel) {\r\n        this.level = level\r\n    }\r\n\r\n    setId(id: string) {\r\n        this.id = id\r\n    }\r\n    debug(message: string, functionName?: string): void {\r\n        if (this.level === 'debug') {\r\n            console.log(this.prepString(message, functionName))\r\n        }\r\n    }\r\n    error(message: string, functionName?: string): void {\r\n        if (this.level === 'error' || this.level === 'debug' || this.level === 'warning')\r\n            console.error(this.prepString(message, functionName))\r\n    }\r\n\r\n    warning(message: string, functionName?: string): void {\r\n        if (this.level === 'warning' || this.level === 'debug')\r\n            console.warn(this.prepString(message, functionName))\r\n    }\r\n\r\n    exception(e: Error, functionName?: string): void {\r\n        console.error(this.prepString(`An exception occured: ${e.name}: ${e.message}`, functionName))\r\n        if (this.level === 'debug')\r\n            console.exception(e.stack)\r\n    }\r\n\r\n    performance(callback: () => void, functionName?: string): void {\r\n        if (this.level !== 'debug') {\r\n            return;\r\n        }\r\n        let start = Date.now();\r\n        callback();\r\n        console.log(this.prepString(`Performance measure: ${Date.now() - start}ms`, functionName))\r\n    }\r\n\r\n    private prepString(message: string, functionName?: string) {\r\n        return `[${new Date().toLocaleString()}][${this.component}][${functionName ?? '-'}][${this.id}][${message}]`\r\n    }\r\n}","import { CuiLogger } from \"../utlis/logger\";\r\nimport { CuiLogLevel } from \"../utlis/types\";\r\nimport { ICuiLogger } from \"../models/interfaces\";\r\nimport { STATICS } from \"../utlis/statics\";\r\n\r\n/**\r\n * \r\n */\r\nexport class CuiLoggerFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param name - component name\r\n     */\r\n    public static get(name: string, logLevel?: CuiLogLevel): ICuiLogger {\r\n        return new CuiLogger(name, logLevel ?? STATICS.logLevel)\r\n    }\r\n}","import { IUIInteractionProvider } from \"../models/interfaces\";\r\nimport { ICuiComponentAction } from \"../utlis/actions\";\r\nimport { CLASSES } from \"../utlis/statics\";\r\n\r\nexport class CuiActionsHelper {\r\n    #interactions: IUIInteractionProvider;\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#interactions = interactions;\r\n    }\r\n\r\n    async performAction(target: Element, action: ICuiComponentAction, timeout: number): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.#interactions.mutate(() => {\r\n                action.add(target);\r\n                target.classList.add(CLASSES.animProgress);\r\n                setTimeout(() => {\r\n                    this.#interactions.mutate(() => {\r\n                        action.remove(target);\r\n                        target.classList.remove(CLASSES.animProgress);\r\n                        resolve(true)\r\n                    }, null)\r\n                }, timeout)\r\n            }, null)\r\n        })\r\n    }\r\n}","import { is, are } from \"./functions\";\r\nimport { CuiUtils } from \"../models/utils\";\r\n\r\nexport interface ICuiComponentAction {\r\n    add(element: Element, utils?: CuiUtils): void;\r\n    remove(element: Element, utils?: CuiUtils): void;\r\n    toggle(element: Element, utils?: CuiUtils): void;\r\n}\r\n\r\nexport class CuiClassAction implements ICuiComponentAction {\r\n    #class: string;\r\n\r\n    constructor(className: string) {\r\n        this.#class = className;\r\n    }\r\n\r\n    add(element: Element, utils?: CuiUtils): void {\r\n        if (are(element, this.#class) && !element.classList.contains(this.#class)) {\r\n            element.classList.add(this.#class);\r\n        }\r\n    }\r\n\r\n    remove(element: Element, utils?: CuiUtils): void {\r\n        if (are(element, this.#class) && element.classList.contains(this.#class)) {\r\n            element.classList.remove(this.#class);\r\n        }\r\n    }\r\n\r\n    toggle(element: Element, utils?: CuiUtils): void {\r\n        if (are(element, this.#class)) {\r\n            if (!element.classList.contains(this.#class)) {\r\n                element.classList.remove(this.#class);\r\n            } else {\r\n                element.classList.add(this.#class);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class CuiInboundAction implements ICuiComponentAction {\r\n    #name: string;\r\n\r\n    constructor(name: string) {\r\n        this.#name = name;\r\n    }\r\n    add(element: Element, utils?: CuiUtils): void {\r\n        switch (this.#name) {\r\n            case 'dark-mode':\r\n                utils.setLightMode('dark')\r\n                break;\r\n            case 'light-mode':\r\n                utils.setLightMode('light')\r\n                break;\r\n        }\r\n    }\r\n\r\n    remove(element: Element, utils?: CuiUtils): void {\r\n        switch (this.#name) {\r\n            case 'dark-mode':\r\n                utils.setLightMode('light')\r\n                break;\r\n            case 'light-mode':\r\n                utils.setLightMode('dark')\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggle(element: Element, utils?: CuiUtils): void {\r\n        switch (this.#name) {\r\n            case 'dark-mode':\r\n                this.setDarkMode(utils)\r\n                break;\r\n            case 'light-mode':\r\n                this.setDarkMode(utils)\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setDarkMode(utils: CuiUtils) {\r\n        if (utils.getLightMode() === 'dark') {\r\n            utils.setLightMode('light')\r\n        } else {\r\n            utils.setLightMode('dark')\r\n        }\r\n    }\r\n}\r\n\r\nexport class DummyAction implements ICuiComponentAction {\r\n    constructor() {\r\n    }\r\n\r\n    add(element: Element, utils?: CuiUtils): void {\r\n\r\n    }\r\n\r\n    remove(element: Element, utils?: CuiUtils): void {\r\n    }\r\n\r\n    toggle(element: Element, utils?: CuiUtils): void {\r\n    }\r\n}\r\n\r\nexport class CuiActionsFatory {\r\n    public static get(value: string): ICuiComponentAction {\r\n        if (!is(value)) {\r\n            return new DummyAction();\r\n        }\r\n        let indicator = value[0];\r\n        switch (indicator) {\r\n            case '.':\r\n                return new CuiClassAction(value.substring(1));\r\n            case '~':\r\n                return new CuiInboundAction(value.substring(1))\r\n            default:\r\n                return new CuiClassAction(value);\r\n        }\r\n    }\r\n}","import { is, are } from \"../../core/utlis/functions\";\r\nimport { ICuiLogger, IUIInteractionProvider, CuiCachable } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { CLASSES } from \"../../core/utlis/statics\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiActionsHelper } from \"../../core/helpers/helpers\";\r\nimport { CuiClassAction } from \"../../core/utlis/actions\";\r\n\r\nexport class ElementManager implements CuiCachable {\r\n    #elements: Element[];\r\n    #isLocked: boolean;\r\n    #logger: ICuiLogger;\r\n    #cDt: number;\r\n    #utils: CuiUtils;\r\n    #actionsHelper: CuiActionsHelper;\r\n    constructor(elements: Element[], utils: CuiUtils) {\r\n        this.#elements = elements;\r\n        this.#isLocked = false;\r\n        this.#logger = CuiLoggerFactory.get(\"ElementManager\");\r\n        this.#utils = utils;\r\n        this.#cDt = Date.now();\r\n        this.#actionsHelper = new CuiActionsHelper(utils.interactions);\r\n    }\r\n\r\n    async toggleClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (!element.classList.contains(className)) {\r\n                element.classList.add(className);\r\n            } else {\r\n                element.classList.remove(className);\r\n            }\r\n        }, 'toggleClass');\r\n    }\r\n\r\n    async toggleClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (!classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.add, classes, className);\r\n                } else {\r\n                    this.#utils.interactions.mutate(classes.remove, classes, className);\r\n                }\r\n            }, this)\r\n\r\n        }, 'toggleClassAs');\r\n    }\r\n\r\n    async setClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (!element.classList.contains(className)) {\r\n                element.classList.add(className)\r\n            }\r\n        }, 'setClass');\r\n    }\r\n\r\n    async setClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (!classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.add, classes, className);\r\n                }\r\n            }, this)\r\n\r\n        }, 'setClassAs');\r\n    }\r\n\r\n    async removeClass(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (element.classList.contains(className)) {\r\n                element.classList.remove(className)\r\n            }\r\n        }, 'removeClass');\r\n    }\r\n\r\n    async removeClassAs(className: string): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            let classes = element.classList;\r\n            this.#utils.interactions.fetch(() => {\r\n                if (classes.contains(className)) {\r\n                    this.#utils.interactions.mutate(classes.remove, classes, className);\r\n                }\r\n            }, this)\r\n        }, 'removeClass');\r\n    }\r\n\r\n    getAttribute(attributeName: string): string[] {\r\n        if (!is(attributeName)) {\r\n            return null;\r\n        }\r\n        return this.#elements.reduce<string[]>((val: string[], current: Element) => {\r\n            if (current.hasAttribute(attributeName)) {\r\n                val.push(current.getAttribute(attributeName))\r\n            } else {\r\n                val.push(null);\r\n            }\r\n            return val;\r\n        }, []);\r\n    }\r\n\r\n    async setAttribute(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.setAttribute(attributeName, attributeValue ?? \"\")\r\n        }, 'setAttribute');\r\n    }\r\n\r\n    async setAttributeAs(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.mutate(element.setAttribute, element, attributeName, attributeValue ?? \"\")\r\n        }, 'setAttributeAs');\r\n    }\r\n\r\n    async removeAttribute(attributeName: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.removeAttribute(attributeName)\r\n        }, 'removeAttribute');\r\n    }\r\n\r\n    async removeAttributeAs(attributeName: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.mutate(element.removeAttribute, element, attributeName);\r\n        }, 'removeAttributeAs');\r\n    }\r\n\r\n    async toggleAttribute(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            if (element.hasAttribute(attributeName)) {\r\n                element.removeAttribute(attributeName)\r\n            } else {\r\n                element.setAttribute(attributeName, attributeValue ?? \"\")\r\n            }\r\n        }, 'toggleAttribute');\r\n    }\r\n\r\n    async toggleAttributeAs(attributeName: string, attributeValue?: string): Promise<boolean> {\r\n        if (!is(attributeName)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            this.#utils.interactions.fetch(() => {\r\n                if (element.hasAttribute(attributeName)) {\r\n                    this.#utils.interactions.mutate(element.removeAttribute, element, attributeName);\r\n                } else {\r\n                    this.#utils.interactions.mutate(element.setAttribute, element, attributeName, attributeValue ?? \"\")\r\n                }\r\n            }, this)\r\n\r\n        }, 'toggleAttributeAs');\r\n    }\r\n\r\n    async click(onClick: (ev: MouseEvent) => void): Promise<boolean> {\r\n        if (!is(onClick)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.addEventListener('click', onClick);\r\n        }, 'click');\r\n    }\r\n\r\n    async event(eventName: string, callback: any): Promise<boolean> {\r\n        if (!is(eventName) || !is(callback)) {\r\n            return false;\r\n        }\r\n        return this.call((element) => {\r\n            element.addEventListener(eventName, callback);\r\n        }, 'event');\r\n    }\r\n\r\n    async call(callback: (element: Element, index: Number) => void, functionName?: string): Promise<boolean> {\r\n        if (this.#isLocked) {\r\n            this.#logger.error(\"Element is locked\", functionName)\r\n        }\r\n        this.lock();\r\n        this.#elements.forEach((element, index) => {\r\n            callback(element, index)\r\n        })\r\n        this.unlock();\r\n        return true;\r\n    }\r\n\r\n    async animate(className: string, timeout?: number): Promise<boolean> {\r\n        if (!is(className)) {\r\n            return false;\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        return this.call((element) => {\r\n            this.change(() => {\r\n                element.classList.add(className);\r\n                element.classList.add(CLASSES.animProgress);\r\n                setTimeout(() => {\r\n                    this.change(() => {\r\n                        element.classList.remove(className);\r\n                        element.classList.remove(CLASSES.animProgress);\r\n                    })\r\n                }, delay)\r\n            })\r\n        });\r\n    }\r\n\r\n    async open(openClass: string, animationClass: string, timeout?: number): Promise<boolean> {\r\n        if (!are(openClass, animationClass)) {\r\n            return false\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        const action = new CuiClassAction(animationClass);\r\n        return this.call((element) => {\r\n            this.#actionsHelper.performAction(element, action, delay).then(() => {\r\n                element.classList.add(openClass);\r\n            })\r\n        });\r\n    }\r\n\r\n    async close(closeClass: string, animationClass: string, timeout?: number): Promise<boolean> {\r\n        if (!are(closeClass, animationClass)) {\r\n            return false\r\n        }\r\n        const delay = timeout ?? this.#utils.setup.animationTime;\r\n        const action = new CuiClassAction(animationClass);\r\n        return this.call((element) => {\r\n            this.#actionsHelper.performAction(element, action, delay).then(() => {\r\n                element.classList.remove(closeClass);\r\n            })\r\n        });\r\n    }\r\n\r\n    read(callback: any, ...args: any[]): void {\r\n        this.#utils.interactions.fetch(callback, this, ...args)\r\n    }\r\n\r\n    change(callback: any, ...args: any[]): void {\r\n        this.#utils.interactions.mutate(callback, this, ...args)\r\n    }\r\n\r\n    elements(): Element[] {\r\n        return this.#elements;\r\n    }\r\n\r\n    count() {\r\n        return this.#elements.length;\r\n    }\r\n\r\n    lock() {\r\n        this.#isLocked = true;\r\n    }\r\n\r\n    unlock() {\r\n        this.#isLocked = false;\r\n    }\r\n\r\n    isLocked(): boolean {\r\n        return this.#isLocked;\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return (Date.now() - this.#cDt) < 360000;\r\n    }\r\n}","import { ICuiLogger, IUIInteractionProvider, ICuiMutiationPlugin, ICuiComponent, ICuiPluginManager, CuiElement } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is, getMatchingAttribute, are, getMatchingAttributes, generateCUID, registerCuiElement } from \"../../core/utlis/functions\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\n\r\nexport interface ICuiMutionObserver {\r\n    // setOptions(options: MutationObserverInit): ICuiMutionObserver;\r\n    setPlugins(plugins: ICuiPluginManager): ICuiMutionObserver;\r\n    setComponents(components: ICuiComponent[]): ICuiMutionObserver;\r\n    setAttributes(attributes: string[]): ICuiMutionObserver;\r\n    start(): ICuiMutionObserver;\r\n    stop(): ICuiMutionObserver;\r\n}\r\n\r\n\r\nexport class CuiMutationObserver implements ICuiMutionObserver {\r\n    #log: ICuiLogger;\r\n    #observer: MutationObserver;\r\n    #options: MutationObserverInit;\r\n    #element: HTMLElement;\r\n    plugins: ICuiPluginManager;\r\n    #components: ICuiComponent[];\r\n    #attributes: string[];\r\n    #utils: CuiUtils;\r\n    constructor(element: HTMLElement, utils: CuiUtils) {\r\n        this.#observer = null\r\n        this.#element = element\r\n        this.#log = CuiLoggerFactory.get('CuiMutationObserver')\r\n        this.plugins = null;\r\n        this.#components = [];\r\n        this.#attributes = [];\r\n        this.#utils = utils;\r\n\r\n    }\r\n\r\n    setPlugins(plugins: ICuiPluginManager) {\r\n        this.plugins = plugins;\r\n        return this;\r\n    }\r\n\r\n    setComponents(components: ICuiComponent[]) {\r\n        this.#components = components;\r\n        return this;\r\n    }\r\n\r\n    setAttributes(attributes: string[]) {\r\n        this.#options = {\r\n            attributes: true,\r\n            subtree: true,\r\n            attributeFilter: attributes\r\n        }\r\n        this.#attributes = attributes;\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        this.#log.debug(\"Starting\")\r\n        this.#observer = new MutationObserver(this.mutationCallback)\r\n        this.#observer.observe(this.#element, this.#options)\r\n        this.#log.debug(\"Started\")\r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        this.#log.debug(\"Stopping\")\r\n        if (this.#observer !== null)\r\n            this.#log.debug(\"Observer available\")\r\n        this.#observer.disconnect()\r\n        this.#observer = null;\r\n        this.#log.debug(\"Stopped\")\r\n        return this\r\n    }\r\n\r\n    private mutationCallback(mutations: MutationRecord[], observer: MutationObserver) {\r\n        mutations.forEach((mutation: MutationRecord) => {\r\n            switch (mutation.type) {\r\n                case 'attributes':\r\n                    const item = mutation.target as any;\r\n                    if (are(item.$handlers, item.$handlers[mutation.attributeName])) {\r\n                        item.$handlers[mutation.attributeName].refresh();\r\n                    }\r\n                    break;\r\n\r\n                case 'childList':\r\n                    this.handleChildListMutation(mutation);\r\n                    break;\r\n            }\r\n            if (is(this.plugins)) {\r\n                this.plugins.onMutation(mutation).then(() => {\r\n                    this.#log.debug(\"Mutation performed on plugins\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    private handleChildListMutation(mutation: MutationRecord) {\r\n        const addedLen = mutation.addedNodes.length;\r\n        const removedLen = mutation.removedNodes.length;\r\n        if (addedLen > 0) {\r\n            this.#log.debug(\"Registering added nodes: \" + addedLen)\r\n            this.handleAddedNodes(mutation.addedNodes);\r\n        } else if (removedLen > 0) {\r\n            this.#log.debug(\"REmoving nodes: \" + removedLen);\r\n            this.handleRemovedNodes(mutation.removedNodes);\r\n        }\r\n    }\r\n\r\n    private handleAddedNodes(nodes: NodeList) {\r\n        nodes.forEach((node: any) => {\r\n            registerCuiElement(node, this.#components, this.#attributes, this.#utils);\r\n        })\r\n    }\r\n\r\n    private handleRemovedNodes(nodes: NodeList) {\r\n        nodes.forEach(node => {\r\n            this.#log.debug(\"Removing\")\r\n        })\r\n    }\r\n\r\n    // private registterCuiElement(node: any) {\r\n    //     let element = node as CuiElement\r\n    //     element.$handlers = {};\r\n    //     let matching: string[] = getMatchingAttributes(node, this.#attributes)\r\n    //     if (is(matching)) {\r\n    //         matching.forEach(match => {\r\n    //             let component = this.#components.find(c => { return c.attribute === match });\r\n    //             if (is(component)) {\r\n    //                 this.#utils.styleAppender.append(component.getStyle());\r\n    //                 let handler = component.get(node, this.#utils);\r\n    //                 element.$handlers[component.attribute] = handler;\r\n    //                 element.$handlers[component.attribute].handle();\r\n    //             }\r\n    //         })\r\n    //         element.$cuid = generateCUID(node.tagName)\r\n    //     }\r\n    // }\r\n}","import { IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { is, sleep } from \"../../core/utlis/functions\";\r\nimport { CLASSES } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiToastHandler {\r\n    #interactions: IUIInteractionProvider;\r\n    #selector: string;\r\n    #className: string;\r\n    #activeCls: string;\r\n    #animationTime: number;\r\n    #lock: boolean;\r\n    #animClsIn: string;\r\n    #animClsOut: string;\r\n    constructor(interaction: IUIInteractionProvider, prefix: string, animationTime: number) {\r\n        this.#interactions = interaction;\r\n        this.#selector = `.${prefix}-toast`;\r\n        this.#className = `${prefix}-toast`;\r\n        this.#activeCls = `${prefix}-active`;\r\n        this.#animationTime = animationTime;\r\n        this.#lock = false;\r\n        this.#animClsIn = `${prefix}-toast-animation-in`;\r\n        this.#animClsOut = `${prefix}-toast-animation-out`\r\n    }\r\n\r\n    async show(message: string): Promise<boolean> {\r\n        if (this.#lock) {\r\n            return false;\r\n        }\r\n        this.#lock = true;\r\n        let toastElement = document.querySelector(this.#selector);\r\n        if (!is(toastElement)) {\r\n            toastElement = document.createElement('div');\r\n            toastElement.classList.add(this.#className);\r\n            document.body.appendChild(toastElement);\r\n        }\r\n\r\n        this.#interactions.mutate(() => {\r\n            toastElement.innerHTML = message;\r\n            toastElement.classList.add(CLASSES.animProgress);\r\n            toastElement.classList.add(this.#animClsIn);\r\n        }, this);\r\n\r\n        await sleep(this.#animationTime);\r\n        this.#interactions.mutate(() => {\r\n            toastElement.classList.remove(CLASSES.animProgress);\r\n            toastElement.classList.remove(this.#animClsIn);\r\n            toastElement.classList.add(this.#activeCls);\r\n        }, this)\r\n        await sleep(3000);\r\n        this.#interactions.mutate(() => {\r\n            toastElement.classList.add(CLASSES.animProgress);\r\n            toastElement.classList.add(this.#animClsOut);\r\n        }, this)\r\n\r\n        setTimeout(() => {\r\n            this.#interactions.mutate(() => {\r\n                toastElement.classList.remove(CLASSES.animProgress);\r\n                toastElement.classList.remove(this.#animClsOut);\r\n                toastElement.classList.remove(this.#activeCls);\r\n            }, this)\r\n            this.#lock = false;\r\n        }, this.#animationTime);\r\n        return true;\r\n    }\r\n}","import { CLASSES } from \"../../core/utlis/statics\";\r\nimport { ICuiLogger, IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CollectionManagerHelper {\r\n    #elements: Element[];\r\n    #log: ICuiLogger;\r\n    #isLocked: boolean;\r\n    #toggleClass: string;\r\n    #interactions: IUIInteractionProvider;\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#interactions = interactions;\r\n        this.#log = CuiLoggerFactory.get('CollectionManager');\r\n    }\r\n\r\n    setElements(elements: Element[]) {\r\n        this.#elements = elements;\r\n    }\r\n\r\n    setToggle(className: string) {\r\n        this.#toggleClass = className;\r\n    }\r\n\r\n    addAnimationClass(currentElement: Element, nextElement: Element, animIn: string, animOut: string,): void {\r\n        nextElement.classList.add(CLASSES.animProgress);\r\n        currentElement.classList.add(animOut);\r\n        nextElement.classList.add(animIn);\r\n    }\r\n\r\n    setFinalClasses(currentElement: Element, nextElement: Element, animIn: string, animOut: string): void {\r\n        nextElement.classList.remove(CLASSES.animProgress);\r\n        currentElement.classList.remove(animOut);\r\n        nextElement.classList.remove(animIn);\r\n        currentElement.classList.remove(this.#toggleClass);\r\n        nextElement.classList.add(this.#toggleClass);\r\n    }\r\n\r\n    verifyIndex(index: number, current: number, count: number): boolean {\r\n        return index >= 0 && index !== current && index < count\r\n    }\r\n\r\n    async setCurrent(newIndex: number, current: number): Promise<boolean> {\r\n        this.lock();\r\n        this.#log.debug(`Switching index from: ${current} to ${newIndex}`)\r\n        if (current > -1)\r\n            this.#elements[current].classList.remove(this.#toggleClass);\r\n        this.#elements[newIndex].classList.add(this.#toggleClass);\r\n        this.unlock();\r\n        return true;\r\n    }\r\n\r\n    async setCurrentWithAnimation(newIndex: number, animClassIn: string, animClassOut: string, duration: number, current: number): Promise<boolean> {\r\n        this.lock()\r\n        this.#log.debug(`Switching index from: ${current} to ${newIndex}`)\r\n\r\n        const currentElement = this.#elements[current];\r\n        const nextElement = this.#elements[newIndex];\r\n        this.#interactions.mutate(this.addAnimationClass, this, currentElement, nextElement, animClassIn, animClassOut);\r\n        setTimeout(() => {\r\n            this.#interactions.mutate(this.setFinalClasses, this, currentElement, nextElement, animClassIn, animClassOut)\r\n            this.unlock();\r\n        }, duration)\r\n        return true;\r\n    }\r\n\r\n    getCurrentIndex(): number {\r\n        if (!is(this.#toggleClass)) {\r\n            return -1;\r\n        }\r\n        let len = this.count();\r\n        for (let i = 0; i < len; i++) {\r\n            if (this.#elements[i].classList.contains(this.#toggleClass)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    elements(): Element[] {\r\n        return this.#elements;\r\n    }\r\n\r\n    check(): boolean {\r\n        if (this.#isLocked) {\r\n            this.#log.warning(\"Object locked. Operation in progress\", \"Check\");\r\n            return false;\r\n        } else if (!is(this.#toggleClass)) {\r\n            this.#log.warning(\"Toggle is not set. Call setToggleClass\", \"Check\");\r\n            return false;\r\n        } else if (this.count() <= 0) {\r\n            this.#log.warning(\"Elements list is empty\", \"Check\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    count(): number {\r\n        return this.#elements ? this.#elements.length : -1;\r\n    }\r\n\r\n    lock() {\r\n        this.#isLocked = true;\r\n    }\r\n\r\n    unlock() {\r\n        this.#isLocked = false\r\n    }\r\n\r\n\r\n}","import { IUIInteractionProvider, ICuiLogger, CuiCachable } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { CollectionManagerHelper } from \"../helpers/collection\";\r\n\r\nexport class CollectionManager implements CuiCachable {\r\n    #log: ICuiLogger;\r\n\r\n    #cDt: number;\r\n    #helper: CollectionManagerHelper;\r\n\r\n    constructor(elements: Element[], interactions: IUIInteractionProvider) {\r\n        this.#log = CuiLoggerFactory.get('CollectionManager');\r\n        this.#helper = new CollectionManagerHelper(interactions);\r\n        this.#helper.setElements(elements);\r\n        this.#cDt = Date.now();\r\n    }\r\n\r\n    setToggle(className: string) {\r\n        this.#helper.setToggle(className)\r\n    }\r\n\r\n    setElements(elements: Element[]) {\r\n        this.#helper.setElements(elements);\r\n    }\r\n\r\n    click(callback: (element: Element, index: number) => void): void {\r\n        this.#helper.elements().forEach((element, index) => {\r\n            element.addEventListener('click', () => {\r\n                this.set(index).then(() => {\r\n                    if (callback) {\r\n                        callback(element, index)\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    async next(): Promise<boolean> {\r\n        if (!this.#helper.check()) {\r\n            return false;\r\n        }\r\n        let newIdx = this.#helper.getCurrentIndex() + 1;\r\n        return this.set(newIdx >= this.length() ? 0 : newIdx);\r\n    }\r\n\r\n    async previous(): Promise<boolean> {\r\n        if (!this.#helper.check()) {\r\n            return false;\r\n        }\r\n        let newIdx = this.#helper.getCurrentIndex() - 1;\r\n        return this.set(newIdx < 0 ? this.length() - 1 : newIdx)\r\n    }\r\n\r\n    async set(index: number): Promise<boolean> {\r\n        let current = this.#helper.getCurrentIndex();\r\n        if (!this.#helper.check() || !this.#helper.verifyIndex(index, current, this.length())) {\r\n            return false;\r\n        }\r\n        return this.#helper.setCurrent(index, current)\r\n    }\r\n\r\n    async setWithAnimation(index: number, animClassIn: string, animClassOut: string, duration: number): Promise<boolean> {\r\n        let current = this.#helper.getCurrentIndex();\r\n        if (!this.#helper.check() || !this.#helper.verifyIndex(index, current, this.length())) {\r\n            return false;\r\n        }\r\n        return this.#helper.setCurrentWithAnimation(index, animClassIn, animClassOut, duration, current)\r\n    }\r\n\r\n    getCurrentIndex(): number {\r\n        return this.#helper.getCurrentIndex();\r\n    }\r\n\r\n    length() {\r\n        return this.#helper.count();\r\n    }\r\n\r\n    refresh(): boolean {\r\n        return this.length() > 0 && Date.now() - this.#cDt > 360000;\r\n    }\r\n}","import { IUIInteractionProvider } from \"../models/interfaces\";\r\n\r\nexport class FastDom implements IUIInteractionProvider {\r\n    private writes: any[];\r\n    private reads: any[];\r\n    private raf: any;\r\n    private isScheduled: boolean = false;\r\n    #limit: number;\r\n\r\n    constructor() {\r\n        this.raf = window.requestAnimationFrame.bind(window)\r\n        this.writes = []\r\n        this.reads = []\r\n        this.#limit = 5;\r\n    }\r\n    mutate(callback: any, ctx: any, ...args: any[]): void {\r\n        this.reads.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    fetch(callback: any, ctx: any, ...args: any[]): void {\r\n        this.writes.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    private createTask(callback: any, ctx: any, ...args: any[]): any {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n\r\n    private run(tasks: any[]) {\r\n        let task = null\r\n        while (task = tasks.shift()) {\r\n            task()\r\n        }\r\n    }\r\n\r\n    private schedule(recursion?: number) {\r\n        if (!this.isScheduled) {\r\n            this.isScheduled = true;\r\n            if (recursion >= this.#limit) {\r\n                throw new Error(\"Fast Dom limit reached\")\r\n            } else {\r\n                this.raf(this.flush.bind(this, recursion));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private flush(recursion?: number) {\r\n        let rec: number = recursion ?? 0;\r\n        let error = null;\r\n        let writes = this.writes;\r\n        let reads = this.reads;\r\n\r\n        try {\r\n            this.run(reads);\r\n            this.run(writes);\r\n        } catch (e) {\r\n            error = e\r\n            console.error(e)\r\n        }\r\n        this.isScheduled = false;\r\n\r\n        if (error) {\r\n            this.schedule(rec + 1)\r\n        }\r\n        if (this.writes.length || this.reads.length) {\r\n            this.schedule(recursion + 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport class SyncInteractions implements IUIInteractionProvider {\r\n    tasks: any[];\r\n    raf: any;\r\n    isRunning: boolean = false;\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.raf = window.requestAnimationFrame.bind(window)\r\n    }\r\n\r\n    mutate(callback: any, ctx: any, ...args: any[]): void {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    fetch(callback: any, ctx: any, ...args: any[]): void {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args))\r\n        this.schedule()\r\n    }\r\n\r\n    private schedule() {\r\n        if (!this.isRunning) {\r\n            this.isRunning = true;\r\n            this.raf(this.flush.bind(this))\r\n        }\r\n    }\r\n\r\n    private flush() {\r\n        let task = null\r\n        while (task = this.tasks.shift()) {\r\n            try {\r\n                task()\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.isRunning = false\r\n    }\r\n\r\n    private createTask(callback: any, ctx: any, ...args: any[]): any {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n\r\n}","import { ICuiDictionary, ICuiDictionaryItem } from \"../models/interfaces\";\r\nimport { ItemNotFoundError, ArgumentError } from \"../models/errors\";\r\nimport { is } from \"./functions\";\r\n\r\nexport class CuiDictionary<T> implements ICuiDictionary<T> {\r\n\r\n    #keys: string[];\r\n    #values: T[];\r\n\r\n    constructor(init?: ICuiDictionaryItem<T>[]) {\r\n        this.#keys = []\r\n        this.#values = []\r\n\r\n        if (init) {\r\n            init.forEach(x => {\r\n                if (!is(x.key)) {\r\n                    this.#keys = []\r\n                    this.#values = []\r\n                    throw new ArgumentError(\"Key is empty\");\r\n                }\r\n                this.add(x.key, x.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    add(key: string, value: T): void {\r\n        this.throwOnEmptyKey(key)\r\n        if (this.containsKey(key))\r\n            throw new Error(\"Key already exists\");\r\n        this.#keys.push(key)\r\n        this.#values.push(value)\r\n    }\r\n\r\n    remove(key: string): void {\r\n        if (!is(key)) {\r\n            return\r\n        }\r\n        let index = this.#keys.indexOf(key);\r\n        if (index >= 0) {\r\n            this.#keys.splice(index, 1)\r\n            this.#values.splice(index, 1)\r\n        }\r\n    }\r\n    get(key: string): T {\r\n        this.throwOnEmptyKey(key)\r\n        let index = this.indexOf(key)\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        return this.#values[index];\r\n    }\r\n    containsKey(key: string): boolean {\r\n        return is(key) && this.indexOf(key) >= 0\r\n    }\r\n    keys(): string[] {\r\n        return this.#keys\r\n    }\r\n    values(): T[] {\r\n        return this.#values;\r\n    }\r\n\r\n    indexOf(key: string): number {\r\n        return is(key) ? this.#keys.indexOf(key) : -1;\r\n    }\r\n\r\n    update(key: string, value: T): void {\r\n        this.throwOnEmptyKey(key)\r\n        let index = this.indexOf(key)\r\n        if (index < 0) {\r\n            throw new ItemNotFoundError(`Item with key [${key}] not found`)\r\n        }\r\n        this.#values[index] = value\r\n    }\r\n\r\n    clear() {\r\n        this.#values = [];\r\n        this.#keys = [];\r\n    }\r\n\r\n    private throwOnEmptyKey(key: string) {\r\n        if (!is(key)) {\r\n            throw new ArgumentError(\"Key is empty\");\r\n        }\r\n    }\r\n}","import { ICuiDictionary, CuiCachable, ICuiManager } from \"../../core/models/interfaces\";\r\nimport { CuiDictionary } from \"../../core/utlis/dictionary\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiCacheManager implements ICuiManager<CuiCachable> {\r\n    #cache: ICuiDictionary<CuiCachable>;\r\n    #maxSize: number;\r\n    constructor(maxSize?: number) {\r\n        this.#cache = new CuiDictionary<CuiCachable>();\r\n        this.#maxSize = maxSize ?? 500;\r\n    }\r\n    put(key: string, element: CuiCachable): void {\r\n        if (!is(key)) return;\r\n        if (this.has(key)) {\r\n            this.#cache.update(key, element);\r\n            return;\r\n        }\r\n        this.clean();\r\n        this.#cache.add(key, element);\r\n    }\r\n\r\n    get(key: string): CuiCachable {\r\n        if (!is(key)) return null;\r\n        if (this.has(key)) {\r\n            let item = this.#cache.get(key);\r\n            if (item.refresh()) {\r\n                return item;\r\n            }\r\n            this.#cache.remove(key);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    has(key: string): boolean {\r\n        return is(key) ? this.#cache.containsKey(key) : false;\r\n    }\r\n\r\n    remove(key: string): boolean {\r\n        if (!is(key)) return false;\r\n        if (this.has(key)) {\r\n            this.#cache.remove(key);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear(): void {\r\n        this.#cache.clear();\r\n    }\r\n\r\n    private clean() {\r\n        if (this.#cache.keys().length >= this.#maxSize) {\r\n            this.#cache.remove(this.#cache.keys()[0]);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ICuiEventBus, CuiEventReceiver, ICuiLogger, ICuiEventEmitHandler, CuiContext, CuiElement } from \"../models/interfaces\";\r\nimport { is, are, generateRandomString } from \"../utlis/functions\";\r\nimport { ArgumentError } from \"../models/errors\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\n\r\nexport class CuiEventBus implements ICuiEventBus {\r\n    #events: { [event: string]: CuiEventReceiver }\r\n    #log: ICuiLogger;\r\n    #eventHandler: ICuiEventEmitHandler;\r\n\r\n    constructor(emitHandler: ICuiEventEmitHandler) {\r\n        this.#events = {};\r\n        this.#eventHandler = emitHandler;\r\n        this.#log = CuiLoggerFactory.get(\"CuiEventBus\");\r\n    }\r\n\r\n    /**\r\n     * Attaches event to event bus\r\n     * \r\n     * @param {string} name - Event name\r\n     * @param {any} callback - callback function\r\n     * @param {CuiContext} ctx - callback context with id\r\n     * @param {CuiElement} cui - optional - cui element which event shall be attached to \r\n     */\r\n    on(name: string, callback: any, ctx: CuiContext, cui?: CuiElement): string {\r\n        if (!are(name, callback)) {\r\n            throw new ArgumentError(\"Missing argument\")\r\n        }\r\n        // When context is not provided (e.g. anonymous function) then generate random\r\n        let id = this.prepareEventId(ctx);\r\n        this.#log.debug(`Attaching new event: [${name}] for: [${id}]`)\r\n        if (!this.#events[name]) {\r\n            this.#events[name] = {}\r\n        }\r\n\r\n        this.#events[name][id] = { ctx: ctx, callback: callback, $cuid: this.getCuid(cui) }\r\n        return id;\r\n    }\r\n\r\n    /**\r\n    * Detaches specific event from event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    detach(name: string, ctx: CuiContext, cui?: CuiElement): void {\r\n        if (!are(name, ctx)) {\r\n            throw new ArgumentError(\"Missing argument\")\r\n        }\r\n        let ev = this.#events[name]\r\n        let id = ctx.getId();\r\n        this.#log.debug(`Detaching item: [${id}] from [${name}]`)\r\n        if (this.isAttached(ev, id)) {\r\n            delete ev[id];\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Detaches all callbacks from event\r\n    *\r\n    * @param {string} name - Event name\r\n    */\r\n    detachAll(name: string): void {\r\n        if (is(name) && this.#events[name]) {\r\n            delete this.#events[name]\r\n        } else {\r\n            this.#log.error(`Event name is missing or incorrect`, \"detachAll\")\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Emits event call to event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {string} cuid - id of component which emits the event\r\n    * @param {any[]} args  - event arguments\r\n    */\r\n    async emit(event: string, cuid: string, ...args: any[]): Promise<boolean> {\r\n        if (!is(event)) {\r\n            throw new ArgumentError(\"Event name is incorrect\");\r\n        }\r\n        this.#log.debug(`Emit: [${event}]`)\r\n        await this.#eventHandler.handle(this.#events[event], cuid, args)\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Checks whether given context is already attached to specific event\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    isSubscribing(name: string, ctx: CuiContext, cui?: CuiElement) {\r\n        let ev = this.#events[name]\r\n        return this.isAttached(ev, ctx.getId(), cui)\r\n    }\r\n\r\n    private isAttached(ev: CuiEventReceiver, id: string, cui?: CuiElement): boolean {\r\n        if (is(cui)) {\r\n            return is(ev) && is(id) && is(ev[id]) && is(ev[id].$cuid === cui.$cuid);\r\n        }\r\n        return is(ev) && is(id) && is(ev[id]);\r\n    }\r\n\r\n    private getCuid(cui: CuiElement) {\r\n        return is(cui) ? cui.$cuid : null;\r\n    }\r\n\r\n    private prepareEventId(ctx: CuiContext) {\r\n        return are(ctx) ? ctx.getId() : generateRandomString();\r\n    }\r\n}   ","import { ICuiEventEmitHandler, ICuiLogger, ICuiCallbackExecutor, CuiEventReceiver } from \"../models/interfaces\";\r\nimport { is } from \"../utlis/functions\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\n\r\ninterface EmitHandlerData {\r\n    events: CuiEventReceiver;\r\n    cuid: string;\r\n    args: any[];\r\n}\r\n\r\nclass EmitHandlerBase {\r\n    isBusy: boolean;\r\n    queue: EmitHandlerData[];\r\n    constructor() {\r\n        this.queue = [];\r\n        this.isBusy = false;\r\n    }\r\n    idMatches(emitId: string, handleId: string) {\r\n        return !is(emitId) || (is(emitId) && emitId === handleId);\r\n    }\r\n}\r\n\r\nexport class SimpleEventEmitHandler extends EmitHandlerBase implements ICuiEventEmitHandler {\r\n    #log: ICuiLogger;\r\n    #executor: ICuiCallbackExecutor;\r\n    constructor(executor: ICuiCallbackExecutor) {\r\n        super();\r\n        this.#executor = executor;\r\n        this.#log = CuiLoggerFactory.get(\"SimpleEventEmitHandler\");\r\n    }\r\n\r\n    async handle(events: CuiEventReceiver, cuid: string, args: any[]): Promise<void> {\r\n        if (!is(events)) {\r\n            this.#log.warning(\"No events provided\")\r\n            return\r\n        }\r\n        this.queue.push({\r\n            events: events,\r\n            cuid: cuid,\r\n            args: args\r\n        })\r\n        if (!this.isBusy) {\r\n            if (!this.isBusy) {\r\n                this.isBusy = true;\r\n                this.perform();\r\n                if (this.queue.length > 0) {\r\n                    await this.perform();\r\n                }\r\n                this.isBusy = false;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async perform() {\r\n        let task = this.queue.shift();\r\n        for (let id in task.events) {\r\n            let event = task.events[id]\r\n            try {\r\n                if (this.idMatches(task.cuid, event.$cuid))\r\n                    await this.#executor.execute(event.callback, event.ctx, task.args)\r\n            }\r\n            catch (e) {\r\n                this.#log.error(e)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class TaskedEventEmitHandler extends EmitHandlerBase implements ICuiEventEmitHandler {\r\n    #executor: ICuiCallbackExecutor;\r\n    constructor(executor: ICuiCallbackExecutor) {\r\n        super();\r\n        this.#executor = executor;\r\n    }\r\n\r\n    async handle(events: CuiEventReceiver, cuid: string, args: any[]): Promise<void> {\r\n        if (!is(events)) {\r\n            return\r\n        }\r\n        this.queue.push({\r\n            events: events,\r\n            cuid: cuid,\r\n            args: args\r\n        })\r\n        if (!this.isBusy) {\r\n            this.isBusy = true;\r\n            this.perform();\r\n            if (this.queue.length > 0) {\r\n                this.perform();\r\n            }\r\n            this.isBusy = false;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async perform(): Promise<void[]> {\r\n        let task = this.queue.shift();\r\n        let promises: Promise<void>[] = []\r\n        for (let id in task.events) {\r\n            let event = task.events[id]\r\n            if (this.idMatches(task.cuid, event.$cuid))\r\n                promises.push(this.#executor.execute(event.callback, event.ctx, task.args))\r\n        }\r\n        return Promise.all(promises)\r\n    }\r\n}\r\n","import { ICuiCallbackExecutor } from \"../models/interfaces\"\r\nimport { is } from \"../utlis/functions\"\r\n\r\nexport class CuiCallbackExecutor implements ICuiCallbackExecutor {\r\n    async execute(callback: any, ctx: any, args: any[]): Promise<void> {\r\n        args = args ?? []\r\n        if (is(ctx)) {\r\n            callback.apply(ctx, args)\r\n        } else {\r\n            callback(...args)\r\n        }\r\n        return\r\n    }\r\n}","import { is } from \"../utlis/functions\";\r\nimport { CuiUtils } from \"../models/utils\";\r\nimport { IUIInteractionProvider } from \"../models/interfaces\";\r\n\r\nexport interface ICuiDocumentStyleAppender {\r\n    append(style: string): boolean;\r\n}\r\n\r\nexport class CuiDocumentStyleAppender implements ICuiDocumentStyleAppender {\r\n    #interactions: IUIInteractionProvider;\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#interactions = interactions;\r\n    }\r\n\r\n    append(style: string): boolean {\r\n        if (is(style)) {\r\n            const head = document.head || document.getElementsByTagName('head')[0]\r\n            const node = document.createElement('style');\r\n            const text = document.createTextNode(style);\r\n            node.type = 'text/css';\r\n            node.appendChild(text);\r\n            head.appendChild(node);\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { CuiColorSetType } from \"../../core/utlis/types\";\r\nimport { is, getRangeValue, are } from \"../../core/utlis/functions\";\r\nimport { IUIInteractionProvider } from \"../../core/models/interfaces\";\r\nimport { CuiColor, CuiColorSet } from \"../../core/models/colors\";\r\nimport { CSS_APP_BACKGROUND_COLORS, CSS_COMPONENT_BACKGROUND_COLORS, CSS_COMPONENT_BORDER_COLORS, CSS_THEMES } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiInstanceColorHandler {\r\n    #root: HTMLElement;\r\n    #interactions: IUIInteractionProvider;\r\n    #LIGHTEN_FACTOR: number = 15;\r\n    #DARKEN_FACTOR: number = 15;\r\n\r\n    constructor(interactions: IUIInteractionProvider) {\r\n        this.#root = document.documentElement;\r\n        this.#interactions = interactions;\r\n    }\r\n\r\n    setAppBackground(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setComponentBackground(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setBordersColors(light: CuiColor, dark: CuiColor) {\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.dark, dark.toCssString());\r\n    }\r\n\r\n    setColor(type: CuiColorSetType, set: CuiColorSet) {\r\n        const colors = CSS_THEMES[type];\r\n        const baseColor = set.base;\r\n        if (!is(colors) || !is(baseColor)) {\r\n            return\r\n        }\r\n        const mutedColor = set.muted ?? baseColor.clone().lighten(this.#LIGHTEN_FACTOR);\r\n        const activeColor = set.active ?? baseColor.clone().darken(this.#DARKEN_FACTOR);\r\n\r\n        this.#interactions.mutate(() => {\r\n            this.setProperty(colors.base, baseColor.toCssString());\r\n            this.setProperty(colors.active, activeColor.toCssString());\r\n            this.setProperty(colors.muted, mutedColor.toCssString());\r\n        }, this)\r\n\r\n    }\r\n\r\n    setLightenFactor(factor: number) {\r\n        this.#LIGHTEN_FACTOR = getRangeValue(factor, 0, 100);\r\n    }\r\n\r\n    setDarkenFactor(factor: number) {\r\n        this.#DARKEN_FACTOR = getRangeValue(factor, 0, 100);\r\n    }\r\n\r\n    setProperty(propertyName: string, value: string) {\r\n        this.#root.style.setProperty(propertyName, value);\r\n    }\r\n\r\n    setPropertyIn(propertyName: string, value: string) {\r\n        if (!are(value, propertyName)) {\r\n            return;\r\n        }\r\n        this.#interactions.mutate(this.setProperty, this, propertyName, value)\r\n    }\r\n}","import { CuiWindowSize } from \"../../core/utlis/types\";\r\nimport { calcWindowSize } from \"../../core/utlis/functions\";\r\nimport { ICuiEventBus } from \"../../core/models/interfaces\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\n\r\nexport interface ICuiResizable {\r\n    resize(data: CuiResizeData): Promise<boolean>;\r\n}\r\n\r\nexport interface ICuiResizableObserver {\r\n    observe(target: ICuiResizable): void;\r\n    unobserve(target: ICuiResizable): void;\r\n    connect(): void;\r\n    disconnect(): void;\r\n}\r\n\r\nexport interface CuiResizeData {\r\n    current: CuiWindowSize;\r\n    previous: CuiWindowSize;\r\n    width: number;\r\n    height: number;\r\n    timestamp: number;\r\n}\r\n\r\nexport class CuiResizeObserver implements ICuiResizableObserver {\r\n\r\n    #items: ICuiResizable[];\r\n    #promises: Promise<boolean>[];\r\n    #prevYValue: number;\r\n    #inProgress: boolean;\r\n    #previousSize: CuiWindowSize;\r\n    #threshold: number;\r\n    #bus: ICuiEventBus\r\n    constructor(bus: ICuiEventBus, threshold?: number) {\r\n        this.#items = [];\r\n        this.#promises = [];\r\n        this.#prevYValue = window.innerWidth;\r\n        this.#inProgress = false;\r\n        this.#previousSize = calcWindowSize(window.innerWidth)\r\n        this.#threshold = threshold ?? 0;\r\n        this.#bus = bus;\r\n    }\r\n\r\n    observe(target: ICuiResizable): void {\r\n        let idx = this.#items.findIndex(x => x === target)\r\n        if (idx < 0) {\r\n            this.#items.push(target);\r\n        }\r\n    }\r\n\r\n    unobserve(target: ICuiResizable): void {\r\n        let idx = this.#items.findIndex(x => x === target)\r\n        if (idx >= 0) {\r\n            this.#items.splice(idx, 1)\r\n        }\r\n    }\r\n    connect(): void {\r\n        window.addEventListener('resize', this.listener.bind(this))\r\n    }\r\n\r\n    disconnect(): void {\r\n        window.removeEventListener('resize', this.listener.bind(this))\r\n    }\r\n\r\n    private listener(ev: UIEvent) {\r\n        if (this.#inProgress) {\r\n            return;\r\n        }\r\n        this.#inProgress = true\r\n        const diff = window.innerWidth - this.#prevYValue;\r\n\r\n        if (Math.abs(diff) >= this.#threshold) {\r\n            const currentSize = calcWindowSize(window.innerWidth);\r\n            if (currentSize !== this.#previousSize) {\r\n                const resizeData: CuiResizeData = {\r\n                    current: currentSize,\r\n                    previous: this.#previousSize,\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                    timestamp: Date.now()\r\n                };\r\n                this.#bus.emit(EVENTS.ON_RESIZE, null, resizeData)\r\n                if (this.#items.length > 0) {\r\n                    this.#promises = [];\r\n                    this.#items.forEach(x => {\r\n                        this.#promises.push(x.resize(resizeData))\r\n                    })\r\n                    Promise.all(this.#promises)\r\n                    this.#promises = [];\r\n                }\r\n\r\n                this.#previousSize = currentSize;\r\n            }\r\n        }\r\n        this.#inProgress = false\r\n    }\r\n\r\n\r\n}","import { IUIInteractionProvider, ICuiEventBus, ICuiManager, CuiCachable } from \"./interfaces\";\r\nimport { CuiSetup, CuiSetupInit } from \"./setup\";\r\nimport { CuiLightMode } from \"../utlis/types\";\r\nimport { CuiInteractionsFactory } from \"../factories/interactions\";\r\nimport { CuiCacheManager } from \"../../app/managers/cache\";\r\nimport { CuiEventBus } from \"../bus/bus\";\r\nimport { TaskedEventEmitHandler } from \"../bus/handlers\";\r\nimport { CuiCallbackExecutor } from \"../bus/executors\";\r\nimport { getName, replacePrefix } from \"../utlis/functions\";\r\nimport { CLASSES } from \"../utlis/statics\";\r\nimport { ICuiDocumentStyleAppender, CuiDocumentStyleAppender } from \"../styles/appender\";\r\nimport { CuiInstanceColorHandler } from \"../../app/handlers/colors\";\r\nimport { ICuiResizableObserver, CuiResizeObserver } from \"../../app/observers/resize\";\r\n\r\nexport class CuiUtils {\r\n    interactions: IUIInteractionProvider;\r\n    bus: ICuiEventBus;\r\n    setup: CuiSetup;\r\n    cache: ICuiManager<CuiCachable>;\r\n    colors: CuiInstanceColorHandler;\r\n    styleAppender: ICuiDocumentStyleAppender;\r\n    #resizeObserver: ICuiResizableObserver;\r\n    constructor(initialSetup: CuiSetupInit) {\r\n        this.setup = new CuiSetup().fromInit(initialSetup);\r\n        this.interactions = CuiInteractionsFactory.get(initialSetup.interaction)\r\n        this.cache = new CuiCacheManager(this.setup.cacheSize);\r\n        this.bus = new CuiEventBus(new TaskedEventEmitHandler(new CuiCallbackExecutor()));\r\n        this.colors = new CuiInstanceColorHandler(this.interactions);\r\n        this.styleAppender = new CuiDocumentStyleAppender(this.interactions);\r\n        this.#resizeObserver = new CuiResizeObserver(this.bus, this.setup.resizeThreshold);\r\n        this.#resizeObserver.connect();\r\n    }\r\n\r\n    setLightMode(mode: CuiLightMode) {\r\n        const name: string = getName(this.setup.prefix, CLASSES.dark);\r\n        const classes = document.body.classList;\r\n        if (mode === 'dark' && !classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.add(name);\r\n            }, this)\r\n\r\n        } else if (mode === 'light' && classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.remove(name);\r\n            }, this)\r\n        }\r\n    }\r\n\r\n    getLightMode(): CuiLightMode {\r\n        const name: string = getName(this.setup.prefix, CLASSES.dark);\r\n        return document.body.classList.contains(name) ? 'dark' : 'light';\r\n    }\r\n\r\n    setPrintMode(flag: boolean) {\r\n        const name: string = getName(this.setup.prefix, CLASSES.print);\r\n        const classes = document.body.classList;\r\n        if (flag && !classes.contains(name)) {\r\n            classes.add(name);\r\n\r\n        } else if (!flag && classes.contains(name)) {\r\n            classes.remove(name);\r\n        }\r\n    }\r\n\r\n    isPrintMode(): boolean {\r\n        const name: string = getName(this.setup.prefix, CLASSES.print);\r\n        return document.body.classList.contains(name);\r\n    }\r\n\r\n    setProperty(name: string, value: string) {\r\n        let prop = replacePrefix(name, this.setup.prefix);\r\n        document.documentElement.style.setProperty(prop, value);\r\n    }\r\n}","import { IUIInteractionProvider } from \"../models/interfaces\";\r\nimport { CuiInteractionsType } from \"../utlis/types\";\r\nimport { FastDom, SyncInteractions } from \"../utlis/interactions\";\r\n\r\nexport class CuiInteractionsFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param type - Interactions type\r\n     */\r\n    public static get(type: CuiInteractionsType): IUIInteractionProvider {\r\n        const interactionType = type;\r\n        switch (interactionType) {\r\n            case 'async':\r\n                return new FastDom();\r\n            default:\r\n                return new SyncInteractions();\r\n        }\r\n    }\r\n}","import { ICuiPluginManager, ICuiPlugin, ICuiLogger, ICuiMutiationPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiPluginManager implements ICuiPluginManager {\r\n    #plugins: ICuiPlugin[];\r\n    #mutated: ICuiMutiationPlugin[];\r\n    #log: ICuiLogger;\r\n    constructor(plugins: ICuiPlugin[]) {\r\n        this.#plugins = plugins ?? [];\r\n        this.#log = CuiLoggerFactory.get(\"CuiPluginManager\")\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        this.#log.debug(\"Plugins initialization started: \" + this.#plugins.length)\r\n        this.#mutated = this.#plugins.filter((plugin: any) => {\r\n            return is(plugin.mutation);\r\n        }) as any;\r\n        this.#plugins.forEach(plugin => {\r\n            plugin.init(utils);\r\n            utils.setup.plugins[plugin.description] = plugin.setup;\r\n        })\r\n        this.#log.debug(\"Plugins have been initialized\");\r\n    }\r\n\r\n    get(name: string): ICuiPlugin {\r\n        if (!is(name)) {\r\n            return undefined;\r\n        }\r\n        return this.#plugins.find(p => p.name === name);\r\n    }\r\n\r\n    async onMutation(mutation: MutationRecord): Promise<boolean> {\r\n        let tasks: Promise<boolean>[] = [];\r\n        this.#mutated.forEach((plugin: any) => {\r\n            tasks.push(plugin.mutation(mutation))\r\n        })\r\n        let result: boolean[] = await Promise.all(tasks);\r\n        return result.find(val => {\r\n            val === false\r\n        }) ? false : true;\r\n    }\r\n\r\n}","import { CuiSetupInit } from \"../core/models/setup\";\r\nimport { is, joinAttributesForQuery, are, registerCuiElement } from \"../core/utlis/functions\";\r\nimport { ElementManager } from \"./managers/element\";\r\nimport { STATICS, EVENTS } from \"../core/utlis/statics\";\r\nimport { ICuiLogger, ICuiPlugin, ICuiComponent, ICuiPluginManager, CuiContext, CuiElement } from \"../core/models/interfaces\";\r\nimport { ICuiMutionObserver, CuiMutationObserver } from \"./observers/mutations\";\r\nimport { CuiLoggerFactory } from \"../core/factories/logger\";\r\nimport { CuiToastHandler } from \"./managers/toast\";\r\nimport { CollectionManager } from \"./managers/collection\";\r\nimport { CuiUtils } from \"../core/models/utils\";\r\nimport { CuiInstanceInitError } from \"../core/models/errors\";\r\nimport { CuiPluginManager } from \"./managers/plugins\";\r\n\r\n\r\nexport class CuiInstance {\r\n    #log: ICuiLogger;\r\n    #mutationObserver: ICuiMutionObserver;\r\n    #toastManager: CuiToastHandler;\r\n    #utils: CuiUtils;\r\n    plugins: ICuiPluginManager;\r\n    #components: ICuiComponent[];\r\n    constructor(setup: CuiSetupInit, plugins: ICuiPlugin[], components: ICuiComponent[]) {\r\n        STATICS.prefix = setup.prefix;\r\n        STATICS.logLevel = setup.logLevel;\r\n        this.plugins = new CuiPluginManager(plugins);\r\n        this.#components = components ?? [];\r\n        this.#utils = new CuiUtils(setup);\r\n        this.#log = CuiLoggerFactory.get('CuiInstance')\r\n    }\r\n\r\n    init(): CuiInstance {\r\n        // Init elements\r\n        if (!is(window.MutationObserver)) {\r\n            throw new CuiInstanceInitError(\"Mutation observer does not exists\");\r\n        }\r\n        this.#toastManager = new CuiToastHandler(this.#utils.interactions, this.#utils.setup.prefix, this.#utils.setup.animationTimeLong);\r\n        const mutatedAttributes: string[] = this.#components.map(x => { return x.attribute }); // MUTATED_ATTRIBUTES; \r\n        const initElements = is(mutatedAttributes) ? document.querySelectorAll(joinAttributesForQuery(mutatedAttributes)) : null\r\n        if (is(initElements)) {\r\n            this.#log.debug(`Initiating ${initElements.length} elements`)\r\n            initElements.forEach((item: any) => {\r\n                registerCuiElement(item, this.#components, mutatedAttributes, this.#utils);\r\n            })\r\n        }\r\n        // Init plugins\r\n        this.plugins.init(this.#utils);\r\n\r\n        if (are(this.#components, mutatedAttributes)) {\r\n            this.#mutationObserver = new CuiMutationObserver(document.body, this.#utils)\r\n            this.#mutationObserver.setComponents(this.#components).setAttributes(mutatedAttributes)\r\n            this.#mutationObserver.setPlugins(this.plugins);\r\n            this.#mutationObserver.start();\r\n        }\r\n\r\n        this.#utils.bus.emit(EVENTS.INSTANCE_INITIALIZED, null)\r\n        return this;\r\n    }\r\n\r\n    finish(): void {\r\n        this.#mutationObserver.stop();\r\n        this.#utils.bus.emit(EVENTS.INSTANCE_FINISHED, null)\r\n    }\r\n\r\n    get(selector: string): ElementManager {\r\n        const existing = this.#utils.cache.get(selector);\r\n        if (is(existing)) {\r\n            return existing as ElementManager;\r\n        }\r\n        const elements = this.all(selector);\r\n        if (!elements) {\r\n            return undefined\r\n        }\r\n        const newElement = new ElementManager(elements, this.#utils);\r\n        this.#utils.cache.put(selector, newElement)\r\n        return newElement\r\n    }\r\n\r\n    collection(selector: string): CollectionManager {\r\n        const existing = this.#utils.cache.get(selector);\r\n        if (is(existing)) {\r\n            return existing as CollectionManager;\r\n        }\r\n        const elements = this.all(selector);\r\n        if (!is(elements)) {\r\n            return undefined;\r\n        }\r\n        let manager = new CollectionManager(elements, this.#utils.interactions);\r\n        this.#utils.cache.put(selector, manager)\r\n        return manager;\r\n    }\r\n\r\n\r\n    async toast(message: string): Promise<boolean> {\r\n        if (!is(message)) {\r\n            return false;\r\n        }\r\n        return this.#toastManager.show(message)\r\n    }\r\n\r\n    select(selector: string): Element {\r\n        return document.querySelector(selector)\r\n    }\r\n\r\n    all(selector: string): Element[] {\r\n        const nodes: NodeListOf<Element> = document.querySelectorAll(selector);\r\n        if (!is(nodes)) {\r\n            return undefined;\r\n        }\r\n        return [...nodes];\r\n    }\r\n\r\n    getUtils(): CuiUtils {\r\n        return this.#utils;\r\n    }\r\n\r\n    on(event: string, callback: any, context: CuiContext, element?: CuiElement): void {\r\n        if (!are(event, callback)) {\r\n            this.#log.error(\"Incorrect arguments\", \"on\")\r\n        }\r\n        this.#utils.bus.on(event, callback, context, element);\r\n    }\r\n}","import { ICuiEventListener } from \"../models/interfaces\";\r\n\r\nexport class CuiMediaQueryListener implements ICuiEventListener<MediaQueryListEvent> {\r\n\r\n    #mediaQuery: string;\r\n    #callback: (t: MediaQueryListEvent) => void;\r\n    #isInitialized: boolean;\r\n    #inProgress: boolean;\r\n    constructor(mediaQuery: string) {\r\n        this.#mediaQuery = mediaQuery;\r\n        this.#isInitialized = false;\r\n    }\r\n    setCallback(callback: (t: MediaQueryListEvent) => void): void {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    isInProgress(): boolean {\r\n        return this.#inProgress;\r\n    }\r\n    attach(): void {\r\n        if (!window.matchMedia || this.#isInitialized || !this.#mediaQuery) {\r\n            return;\r\n        }\r\n        window.matchMedia(this.#mediaQuery)\r\n            .addEventListener('change', this.event.bind(this))\r\n        this.#isInitialized = true\r\n    }\r\n\r\n    detach(): void {\r\n        if (this.#isInitialized) {\r\n            window.matchMedia(this.#mediaQuery).removeEventListener('change', this.event.bind(this));\r\n            this.#isInitialized = false\r\n        }\r\n    }\r\n\r\n\r\n    private event(ev: MediaQueryListEvent): void {\r\n        if (this.#inProgress) {\r\n            return\r\n        }\r\n        this.#inProgress = true;\r\n        try {\r\n            this.#callback(ev);\r\n        } catch (e) {\r\n            console.error(e)\r\n        } finally {\r\n            this.#inProgress = false;\r\n        }\r\n    }\r\n}","import { ICuiPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { getSystemLightMode } from \"../../core/utlis/functions\";\r\nimport { CuiMediaQueryListener } from \"../../core/listeners/media\";\r\n\r\nexport interface AutoLightPluginSetup {\r\n    autoLight: boolean;\r\n}\r\n\r\nexport class CuiAutoLightModePlugin implements ICuiPlugin {\r\n    description: string = 'Dark vs Light mode auto switcher';\r\n    name: string = 'auto-light';\r\n    setup: AutoLightPluginSetup;\r\n    #listener: CuiMediaQueryListener;\r\n    #utils: CuiUtils;\r\n    constructor(autoLightInit: AutoLightPluginSetup) {\r\n        this.description = \"CuiAutoLightModePlugin\";\r\n        this.setup = autoLightInit;\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        this.#utils = utils\r\n        if (this.setup.autoLight && getSystemLightMode() === 'dark') {\r\n            this.#utils.setLightMode('dark')\r\n        }\r\n        this.#listener = new CuiMediaQueryListener('(prefers-color-scheme: dark)')\r\n        this.#listener.setCallback(this.onChange.bind(this))\r\n        this.#listener.attach();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#listener.detach();\r\n    }\r\n\r\n    onChange(ev: MediaQueryListEvent) {\r\n        let autoLightSetup = this.#utils.setup.plugins[this.description] as AutoLightPluginSetup;\r\n        let autoLight = autoLightSetup?.autoLight ?? false;\r\n        if (autoLight) {\r\n            if (ev.matches) {\r\n                this.#utils.setLightMode('dark')\r\n            } else {\r\n                this.#utils.setLightMode('light')\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { ICuiLogger, IUIInteractionProvider, CuiElement, CuiContext } from \"../../core/models/interfaces\";\r\nimport { CuiLoggerFactory } from \"../../core/factories/logger\";\r\nimport { is } from \"../../core/utlis/functions\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\n\r\nexport class CuiHandlerBase implements CuiContext {\r\n    _log: ICuiLogger;\r\n    utils: CuiUtils;\r\n    element: Element;\r\n    cuid: string\r\n    constructor(componentName: string, element: Element, utils: CuiUtils) {\r\n        this._log = CuiLoggerFactory.get(componentName);\r\n        this.utils = utils;\r\n        this.element = element;\r\n        this.cuid = (<any>element).$cuid;\r\n    }\r\n\r\n\r\n    mutate(callback: any, ...args: any[]): void {\r\n        this.utils.interactions.mutate(callback, this, ...args)\r\n    }\r\n\r\n    fetch(callback: any, ...args: any[]): void {\r\n        this.utils.interactions.fetch(callback, this, ...args)\r\n    }\r\n\r\n    getEventName(name: string) {\r\n        return [name, this.cuid].join('-');\r\n    }\r\n\r\n    emitEvent(event: string, ...data: any[]) {\r\n        this.utils.bus.emit(event, this.cuid, ...data)\r\n    }\r\n\r\n    onEvent(event: string, callback: any) {\r\n        this.utils.bus.on(event, callback, this)\r\n    }\r\n\r\n    getId(): string {\r\n        return this.cuid;\r\n    }\r\n}","import { ICuiComponent, ICuiComponentFactory, ICuiMutationHandler, ICuiLogger, CuiObservables } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\nimport { is, createElementFromString } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiIconComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor(prefix?: string) {\r\n        this.attribute = `${prefix ?? 'cui'}-icon`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiIconHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiIconHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #prevIcon: string;\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiIconHandler\", element, utils);\r\n        this.#prevIcon = null;\r\n        this.#attribute = attribute;\r\n    }\r\n\r\n\r\n    handle(): void {\r\n        const iconAttr = this.element.getAttribute(this.#attribute)\r\n        if (iconAttr === this.#prevIcon) {\r\n            return;\r\n        }\r\n\r\n        const iconStr = iconAttr ? ICONS[iconAttr] : null;\r\n        if (!iconStr) {\r\n            return\r\n        }\r\n        const iconSvg = new IconBuilder(iconStr).build();\r\n        const svg = this.element.querySelector('svg')\r\n        if (is(svg)) {\r\n            svg.remove();\r\n        }\r\n        if (this.element.childNodes.length > 0) {\r\n            this.mutate(this.insertBefore, iconSvg)\r\n        } else {\r\n            this.mutate(this.appendChild, iconSvg)\r\n        }\r\n    }\r\n\r\n    refresh(): void {\r\n    }\r\n\r\n    destroy(): void {\r\n\r\n    }\r\n\r\n    private insertBefore(iconElement: Element) {\r\n        this.element.insertBefore(iconElement, this.element.firstChild);\r\n    }\r\n\r\n    private appendChild(iconElement: Element) {\r\n        this.element.appendChild(iconElement);\r\n    }\r\n}\r\n\r\nexport class IconBuilder {\r\n    #element: string;\r\n    #scale: number;\r\n    #style: string;\r\n\r\n    constructor(svgString: string) {\r\n        this.#element = svgString;\r\n        this.#scale = 1;\r\n    }\r\n\r\n    setStyle(style: string): IconBuilder {\r\n        this.#style = style;\r\n        return this\r\n    }\r\n\r\n    setScale(scale: number): IconBuilder {\r\n        this.#scale = scale\r\n        return this\r\n    }\r\n\r\n    build(): Element {\r\n        let created = createElementFromString(this.#element)\r\n        if (is(created) && this.#scale) {\r\n            let appender = new IconScaleAppender();\r\n            appender.append(created, this.#scale)\r\n        }\r\n        return created\r\n    }\r\n}\r\n\r\nexport class IconScaleAppender {\r\n    append(element: Element, value: number): void {\r\n        let width = element.hasAttribute(\"width\") ? parseInt(element.getAttribute(\"width\")) : 20;\r\n        let height = element.hasAttribute(\"height\") ? parseInt(element.getAttribute(\"height\")) : 20;\r\n        element.setAttribute(\"width\", (width * value).toString())\r\n        element.setAttribute(\"height\", (height * value).toString())\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler, CuiObservables, CuiContext } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { is, getRangeValue } from \"../../core/utlis/functions\";\r\nimport { IconBuilder } from \"../icon/icon\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiCircleComponent implements ICuiComponent {\r\n    attribute: string;\r\n    #iconStr: string;\r\n    constructor() {\r\n        this.attribute = 'circle-progress';\r\n        ICONS['special_circle_progress'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  class=\\\"circle-progress\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle-progress-path\\\" d=\\\"M 50,5.3660047 A 44.867708,44.633994 0 0 1 94.867709,49.999997 44.867708,44.633994 0 0 1 50,94.633995 44.867708,44.633994 0 0 1 5.1322908,50.000001 44.867708,44.633994 0 0 1 50,5.3660047\\\"></path></svg>\";\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiCircleHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiCircleHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #isInitialized: boolean;\r\n    #factor: number;\r\n    #full: number;\r\n    #path: any;\r\n    #prevValue: number;\r\n    #iconStr: string;\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiCircleHandler\", element, utils);\r\n        this.#factor = this.#full = 0;\r\n        this.#path = null\r\n        this.#prevValue = -1;\r\n        this.#attribute = attribute;\r\n    }\r\n\r\n    observables(): CuiObservables {\r\n        return null;\r\n    }\r\n\r\n    handle(): void {\r\n        if (!is(this.#isInitialized)) {\r\n            const iconSvg = new IconBuilder(ICONS['special_circle_progress']).build();\r\n            const svg = this.element.querySelector('svg')\r\n            if (is(svg)) {\r\n                svg.remove();\r\n            }\r\n            this.element.appendChild(iconSvg);\r\n            this.#path = this.element.querySelector('.circle-progress-path');\r\n            this.#full = this.#path.getTotalLength();\r\n            this.#factor = this.#full / 100;\r\n            this.#isInitialized = true;\r\n        }\r\n        this.fetch(this.readStyle)\r\n    }\r\n\r\n    refresh(): void {\r\n        this.fetch(this.readStyle)\r\n    }\r\n\r\n    destroy(): void {\r\n\r\n    }\r\n    private updateStyle(value: number) {\r\n        this.#path.style.strokeDashoffset = value;\r\n    }\r\n\r\n    private readStyle(): void {\r\n        const value = this.element.hasAttribute(this.#attribute) ? parseInt(this.element.getAttribute(this.#attribute)) : 0;\r\n        if (value === this.#prevValue) {\r\n            return;\r\n        }\r\n        this.#prevValue = value;\r\n        const progress = getRangeValue(value, 0, 100);\r\n\r\n        this.mutate(this.updateStyle, this.#full - this.#factor * progress);\r\n    }\r\n\r\n}","import { ICuiComponent, ICuiMutationHandler, CuiObservables } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { IconBuilder } from \"../icon/icon\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICONS } from \"../../core/utlis/statics\";\r\nimport { is } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiSpinnerComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor() {\r\n        this.attribute = 'data-spinner';\r\n        ICONS['special_circle_double'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"circle-double\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle-double-outer\\\" d=\\\"M 50.000002,6.1070619 A 44.867709,44.126654 0 0 1 94.867708,50.233712 44.867709,44.126654 0 0 1 50.000002,94.36037 44.867709,44.126654 0 0 1 5.132292,50.233717 44.867709,44.126654 0 0 1 50.000002,6.1070619\\\"></path><path class=\\\"circle-double-inner\\\" d=\\\"M 50.000001,15.59972 A 35.383463,34.633995 0 0 1 85.383464,50.233711 35.383463,34.633995 0 0 1 50.000001,84.86771 35.383463,34.633995 0 0 1 14.616536,50.233716 35.383463,34.633995 0 0 1 50.000001,15.59972\\\"></path></svg>\"\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiSpinnerHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiSpinnerHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiSpinnerHandler\", element, utils);\r\n        this.element = element;\r\n        this.#attribute = attribute\r\n    }\r\n\r\n    handle(): void {\r\n        const spinnerName = this.element.getAttribute(this.#attribute);\r\n        const svgIcon = is(spinnerName) ? ICONS[`spinner_${spinnerName}`] : null;\r\n        if (!is(svgIcon)) {\r\n            return;\r\n        }\r\n        const iconElement = new IconBuilder(svgIcon).build();\r\n        this.element.innerHTML = \"\";\r\n        this.mutate(this.addSpinner, iconElement, spinnerName);\r\n    }\r\n\r\n    refresh(): void {\r\n    }\r\n\r\n    destroy(): void {\r\n\r\n    }\r\n\r\n    private addSpinner(iconElement: Element, name: string) {\r\n        this.element.appendChild(iconElement);\r\n        this.element.classList.add(`animation-spinner-${name}`);\r\n    }\r\n\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\n\r\nexport class CuiDummyComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor() {\r\n        this.attribute = 'cui-dummy';\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiDummyHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiDummyHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n\r\n    #attribute: string;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiDummyHandler\", element, utils);\r\n\r\n        this.#attribute = attribute\r\n    }\r\n\r\n    handle(): void {\r\n\r\n    }\r\n\r\n    refresh(): void {\r\n\r\n    }\r\n\r\n    destroy(): void {\r\n\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler, CuiObservables } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { IconBuilder } from \"../icon/icon\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICONS, EVENTS } from \"../../core/utlis/statics\";\r\nimport { is, parseAttributeString, getOffsetTop } from \"../../core/utlis/functions\";\r\n\r\nexport class CuiScrollComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor(prefix?: string) {\r\n        this.attribute = is(prefix) ? prefix + 'scroll' : 'cui-scroll';\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: HTMLElement, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiScrollHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport interface CuiScrollAttribute {\r\n    target?: string;\r\n    parent?: string;\r\n    behavior?: 'auto' | 'smooth';\r\n}\r\n\r\nexport class CuiScrollHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #args: CuiScrollAttribute;\r\n    #parent: HTMLElement;\r\n    #target: HTMLElement;\r\n    constructor(element: HTMLElement, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiScrollHandler\", element, utils);\r\n        this.element = element;\r\n        this.#attribute = attribute\r\n        this.#args = null;\r\n        this.#parent = null;\r\n        this.#target = null;\r\n    }\r\n\r\n    handle(): void {\r\n        this.parseArguments();\r\n        this.element.addEventListener('click', this.onClick.bind(this));\r\n    }\r\n\r\n    refresh(): void {\r\n        this.parseArguments();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.element.removeEventListener('click', this.onClick.bind(this));\r\n    }\r\n\r\n    onClick(ev: MouseEvent) {\r\n        if (!is(this.#target)) {\r\n            return;\r\n        }\r\n        let to = getOffsetTop(this.#target) - this.#parent.offsetTop;\r\n        let from = this.#parent.scrollTop;\r\n        let by = to - from;\r\n        this.#parent.scrollBy({\r\n            top: by,\r\n            behavior: this.#args.behavior ?? 'auto'\r\n        });\r\n        this.emitEvent(EVENTS.ON_SCROLL, {\r\n            to: to,\r\n            by: by,\r\n            target: this.#target,\r\n            parent: this.#parent,\r\n            timestamp: Date.now(),\r\n        })\r\n        ev.preventDefault();\r\n    }\r\n\r\n    private parseArguments(): void {\r\n        this.#args = parseAttributeString(this.element.getAttribute(this.#attribute));\r\n        this.#target = document.querySelector(this.#args.target) as HTMLElement;\r\n        if (is(this.#target)) {\r\n            this.#parent = is(this.#args.parent) ? document.querySelector(this.#args.parent) : this.#target.parentElement;\r\n        }\r\n    }\r\n}\r\n\r\n","import { ICuiEventListener } from \"../models/interfaces\";\r\nimport { getRangeValueOrDefault } from \"../utlis/functions\";\r\n\r\nexport interface CuiScrollEvent {\r\n    base: Event;\r\n    top: number;\r\n    left: number;\r\n}\r\n\r\nexport class CuiScrollListener implements ICuiEventListener<CuiScrollEvent> {\r\n    #target: Element;\r\n    #inProgress: boolean;\r\n    #threshold: number;\r\n    #prevX: number;\r\n    #prevY: number;\r\n    #callback: (ev: CuiScrollEvent) => void;\r\n    constructor(target: Element, threshold?: number) {\r\n        this.#target = target;\r\n        this.#inProgress = false;\r\n        this.#threshold = getRangeValueOrDefault(threshold, 0, 100, 0);\r\n        this.#prevX = this.#prevY = 0;\r\n    }\r\n\r\n    setCallback(callback: (ev: CuiScrollEvent) => void) {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    attach() {\r\n        this.#target.addEventListener('scroll', this.listener.bind(this))\r\n    }\r\n\r\n    detach() {\r\n        this.#target.removeEventListener('scroll', this.listener.bind(this))\r\n    }\r\n\r\n    isInProgress(): boolean {\r\n        return this.#inProgress;\r\n    }\r\n\r\n    private listener(ev: Event) {\r\n        this.#prevX += this.#target.scrollLeft;\r\n        this.#prevY += this.#target.scrollTop;\r\n        if (this.#inProgress || !this.passedThreshold()) {\r\n            return;\r\n        }\r\n        this.#inProgress = true;\r\n\r\n        requestAnimationFrame(() => {\r\n            this.#callback({\r\n                base: ev,\r\n                top: this.#target.scrollTop,\r\n                left: this.#target.scrollLeft\r\n            })\r\n            this.#inProgress = false\r\n            this.#prevX = 0;\r\n            this.#prevY = 0;\r\n        })\r\n    }\r\n\r\n    private passedThreshold() {\r\n        return this.#threshold <= 0 || (this.#prevX >= this.#threshold || this.#prevY >= this.#threshold);\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler, CuiObservables } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { CuiScrollListener, CuiScrollEvent } from \"../../core/listeners/scroll\";\r\nimport { ICuiComponentAction, CuiActionsFatory } from \"../../core/utlis/actions\";\r\nimport { parseAttributeString, getRangeValue, is, getOffsetTop, getRangeValueOrDefault, isInRange, getOffsetLeft } from \"../../core/utlis/functions\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\nimport { CuiScrollSpyOutOfRangeError } from \"../../core/models/errors\";\r\n\r\nexport interface CuiScrollSpyAttribute {\r\n    selector?: string;\r\n    action?: string;\r\n    link?: string;\r\n    linkAction: string;\r\n    offset: number;\r\n}\r\n\r\n\r\nexport class CuiScrollSpyArgs {\r\n    selector: string;\r\n    action: ICuiComponentAction;\r\n    link?: string;\r\n    linkAction?: ICuiComponentAction;\r\n    offset?: number;\r\n\r\n    constructor() {\r\n        this.offset = 0;\r\n    }\r\n    parse(args: any) {\r\n        if (!args.selector) {\r\n            throw new Error(\"Incorrect arguments\");\r\n        }\r\n        this.selector = args.selector;\r\n        this.action = CuiActionsFatory.get(args.action);\r\n        this.link = args.link;\r\n        this.linkAction = CuiActionsFatory.get(args.linkAction);\r\n        this.offset = getRangeValueOrDefault(parseInt(args.offset), -1, 1, 0);\r\n    }\r\n}\r\nexport class CuiScrollspyComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor(prefix?: string) {\r\n        this.attribute = `${prefix ?? 'cui'}-scrollspy`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiScrollspyHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiScrollspyHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #listener: CuiScrollListener;\r\n    #args: CuiScrollSpyArgs;\r\n    #links: Element[];\r\n    #targets: Element[];\r\n    #currentIdx: number;\r\n    #targetsLength: number;\r\n    #linksLength: number;\r\n    #prevScrollTop: number;\r\n    #prevScrollLeft: number;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiScrollspyHandler\", element, utils);\r\n        this.element = element as HTMLElement;\r\n        this.#attribute = attribute;\r\n        this.#listener = new CuiScrollListener(this.element, this.utils.setup.scrollThreshold);\r\n        this.#args = new CuiScrollSpyArgs();\r\n        this.#links = [];\r\n        this.#targets = [];\r\n        this.#currentIdx = this.#targetsLength = this.#linksLength - 1;\r\n    }\r\n\r\n    handle(): void {\r\n        this._log.debug(\"Handle\", \"handle\");\r\n        this.#prevScrollTop = this.element.scrollTop;\r\n        this.#prevScrollLeft = this.element.scrollLeft;\r\n        this.parseAttribute();\r\n        this.calculateCurrent(this.#prevScrollTop);\r\n        this.#listener.setCallback(this.onScroll.bind(this));\r\n        this.#listener.attach();\r\n    }\r\n\r\n    refresh(): void {\r\n        this._log.debug(\"Refresh\")\r\n        this.parseAttribute();\r\n        this.#prevScrollTop = this.element.scrollTop;\r\n        this.#prevScrollLeft = this.element.scrollLeft;\r\n        this.calculateCurrent(this.#prevScrollTop);\r\n    }\r\n\r\n    destroy() {\r\n        this.#listener.detach();\r\n    }\r\n\r\n    private onScroll(ev: CuiScrollEvent): void {\r\n        let idx = -1;\r\n        if (Math.abs(ev.left - this.#prevScrollLeft) > Math.abs(ev.top - this.#prevScrollTop)) {\r\n            idx = this.calculateCurrentLeft(ev.left);\r\n        } else {\r\n            idx = this.calculateCurrent(ev.top);\r\n        }\r\n        if (idx !== this.#currentIdx) {\r\n            let newTarget = this.setCurrent(idx)\r\n            this.emitEvent(EVENTS.ON_TARGET_CHANGE, {\r\n                top: ev.top,\r\n                left: ev.left,\r\n                target: newTarget,\r\n                timestamp: Date.now()\r\n            })\r\n        }\r\n\r\n        this.#prevScrollTop = this.element.scrollTop;\r\n        this.#prevScrollLeft = this.element.scrollLeft;\r\n    }\r\n\r\n    private parseAttribute() {\r\n        this.#args.parse(parseAttributeString(this.element.getAttribute(this.#attribute)));\r\n        this.#targets = [...this.element.querySelectorAll(this.#args.selector)];\r\n        this.#links = this.#args.link ? [...document.querySelectorAll(this.#args.link)] : [];\r\n        this.#targetsLength = this.#targets.length;\r\n        this.#linksLength = this.#links.length;\r\n    }\r\n\r\n    private calculateCurrent(scroll: number): number {\r\n        return this.#targets.findIndex((target: HTMLElement) => {\r\n            let offset = getOffsetTop(target) - (<any>this.element).offsetTop;\r\n            let ratio = offset * this.#args.offset\r\n            return offset + ratio <= scroll && scroll < offset + target.clientHeight + ratio;\r\n        })\r\n    }\r\n\r\n    private calculateCurrentLeft(scroll: number): number {\r\n        return this.#targets.findIndex((target: HTMLElement) => {\r\n            let offset = getOffsetLeft(target) - (<any>this.element).offsetLeft;\r\n            let ratio = offset * this.#args.offset\r\n            return offset + ratio <= scroll && scroll < offset + target.clientWidth + ratio;\r\n        })\r\n    }\r\n    /**\r\n     * Performs action on current, new target and on links if there are any.\r\n     * Returns new target element or null if index is out of range\r\n     * \r\n     * @param idx - new target index\r\n     * @returns New target item\r\n     */\r\n    private setCurrent(idx: number): Element {\r\n        if (!isInRange(idx, 0, this.#targetsLength)) {\r\n            throw new CuiScrollSpyOutOfRangeError(\"New index is out of targets length\")\r\n        }\r\n        let ret = this.#targets[idx]\r\n        this.#args.action.add(ret)\r\n        this.#args.action.remove(this.#targets[this.#currentIdx]);\r\n        if (this.#linksLength > 0) {\r\n            if (isInRange(idx, 0, this.#linksLength)) {\r\n                this.#args.linkAction.add(this.#links[idx]);\r\n            }\r\n            if (isInRange(this.#currentIdx, 0, this.#linksLength)) {\r\n                this.#args.linkAction.remove(this.#links[this.#currentIdx]);\r\n            }\r\n        }\r\n        this.#currentIdx = idx;\r\n        return ret;\r\n    }\r\n}","import { ICuiPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { getSystemPrintMode } from \"../../core/utlis/functions\";\r\nimport { CuiMediaQueryListener } from \"../../core/listeners/media\";\r\n\r\nexport interface AutoPrintPluginSetup {\r\n    autoPrint: boolean;\r\n}\r\n\r\nexport class CuiAutoPrintModePlugin implements ICuiPlugin {\r\n    description: string = 'Auto print mode';\r\n    name: string = 'auto-print';\r\n    setup: AutoPrintPluginSetup;\r\n    #listener: CuiMediaQueryListener;\r\n    #utils: CuiUtils;\r\n    constructor(autoPrintInit: AutoPrintPluginSetup) {\r\n        this.description = \"CuiAutoPrintModePlugin\";\r\n        this.setup = autoPrintInit;\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        this.#utils = utils\r\n        if (this.setup.autoPrint && getSystemPrintMode()) {\r\n            this.#utils.setPrintMode(true)\r\n        }\r\n        this.#listener = new CuiMediaQueryListener('print')\r\n        this.#listener.setCallback(this.onChange.bind(this))\r\n        this.#listener.attach();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#listener.detach();\r\n    }\r\n\r\n    onChange(ev: MediaQueryListEvent) {\r\n        this.setup = this.#utils.setup.plugins[this.description] as AutoPrintPluginSetup;\r\n        let autoPrint = this.setup?.autoPrint ?? false;\r\n        if (autoPrint) {\r\n            console.log(ev.matches)\r\n            if (ev.matches) {\r\n                this.#utils.setPrintMode(true)\r\n            } else {\r\n                this.#utils.setPrintMode(false)\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { is } from \"../../core/utlis/functions\";\r\nimport { ICuiObserver, CuiElement } from \"../../core/models/interfaces\";\r\nimport { OBSERVABLE_INTERSECTION } from \"../../core/utlis/statics\";\r\n\r\nexport interface ICuiIntersectionObserver {\r\n    observe(target: Element): void;\r\n    unobserve(target: Element): void;\r\n    disconnect(): void;\r\n}\r\n\r\nexport class CuiIntersectionEntry {\r\n    isInView: boolean;\r\n    ratio: number;\r\n}\r\n\r\nexport interface ICuiIntersectionHandler {\r\n    onIntersection(entry: CuiIntersectionEntry): Promise<boolean>;\r\n}\r\n\r\n// export interface ICuiObserverHandler {\r\n//     callback(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\r\n// }\r\n\r\n// export class CuiObserverHandler implements ICuiObserverHandler {\r\n//     callback(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void {\r\n//         entries.forEach((entry: any) => {\r\n//             Object.values(entry.target.$handlers).forEach((handler: any) => {\r\n//                 if (is(handler['onIntersection'])) {\r\n//                     handler.onIntersection({\r\n//                         isInView: entry.isIntersecting,\r\n//                         ratio: entry.intersectionRatio\r\n//                     });\r\n//                 }\r\n//             })\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport class CuiIntersectionObserver implements ICuiObserver {\r\n    private observer: IntersectionObserver\r\n    // #handler: ICuiObserverHandler;\r\n    #root: Element;\r\n    #threshold: number[];\r\n    #callback: IntersectionObserverCallback;\r\n    constructor(root: Element, threshold?: number[]) {\r\n        this.#root = root;\r\n        this.#threshold = threshold ?? [0, 0.1, 0.25, 0.5, 0.75];\r\n        //this.#handler = observerHandler;\r\n    }\r\n\r\n    setCallback(callback: IntersectionObserverCallback) {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    connect(): void {\r\n        this.observer = new IntersectionObserver(this.#callback, {\r\n            root: this.#root,\r\n            rootMargin: '0px',\r\n            threshold: this.#threshold\r\n        })\r\n    }\r\n\r\n    observe(target: Element): void {\r\n        this.observer.observe(target)\r\n    }\r\n\r\n    unobserve(target: Element): void {\r\n        this.observer.unobserve(target)\r\n    }\r\n\r\n    disconnect() {\r\n        this.observer.disconnect()\r\n    }\r\n\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { CuiIntersectionObserver } from \"../../app/observers/intersection\";\r\nimport { CuiActionsFatory, ICuiComponentAction } from \"../../core/utlis/actions\";\r\nimport { is, parseAttributeString, getRangeValueOrDefault, clone } from \"../../core/utlis/functions\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiIntersectionAttributes {\r\n    target: string;\r\n    action: ICuiComponentAction;\r\n    offset: number\r\n    constructor() {\r\n        this.target = \"div\";\r\n        this.action = CuiActionsFatory.get('dummy');\r\n        this.offset = 0;\r\n    }\r\n\r\n    parse(args: any) {\r\n        this.target = is(args.target) ? args.target : 'div';\r\n        this.action = is(args.action) ? CuiActionsFatory.get(args.action) : CuiActionsFatory.get('dummy');\r\n        this.offset = getRangeValueOrDefault(parseInt(args.offset), 0, 1, 0);\r\n    }\r\n}\r\n\r\nexport class CuiIntersectionComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor(prefix?: string) {\r\n        this.attribute = `${prefix ?? 'cui'}-intersection`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiIntersectionHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiIntersectionHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #observer: CuiIntersectionObserver;\r\n    #args: CuiIntersectionAttributes;\r\n    #targets: Element[];\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiIntersectionHandler\", element, utils);\r\n        this.#attribute = attribute\r\n        this.#observer = new CuiIntersectionObserver(this.element);\r\n        this.#args = new CuiIntersectionAttributes();\r\n        this.#targets = []\r\n    }\r\n\r\n    handle(): void {\r\n        this.parseArguments(null);\r\n        this.#observer.setCallback(this.onIntersection.bind(this))\r\n        this.#observer.connect();\r\n        this.#targets.forEach(target => {\r\n            this.#observer.observe(target);\r\n        })\r\n    }\r\n\r\n    refresh(): void {\r\n        let prev = clone(this.#args)\r\n        this.parseArguments(prev);\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#observer.disconnect();\r\n    }\r\n\r\n    parseArguments(prev: CuiIntersectionAttributes) {\r\n        this.#args.parse(parseAttributeString(this.element.getAttribute(this.#attribute)));\r\n        if (prev === null || prev.target !== this.#args.target) {\r\n            this.#targets = [...document.querySelectorAll(this.#args.target)];\r\n        }\r\n    }\r\n\r\n    onIntersection(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void {\r\n        if (!is(this.#targets)) {\r\n            return;\r\n        }\r\n        let action = null;\r\n        entries.forEach(entry => {\r\n            action = this.getAction(entry.target);\r\n            if (entry.isIntersecting && entry.intersectionRatio > this.#args.offset) {\r\n                action.add(entry.target)\r\n            } else {\r\n                action.remove(entry.target)\r\n            }\r\n            this.emitIntersection(entry)\r\n        })\r\n    }\r\n\r\n    getAction(element: Element) {\r\n        return element.hasAttribute('action') ? CuiActionsFatory.get(element.getAttribute('action')) : this.#args.action;\r\n    }\r\n\r\n    emitIntersection(entry: IntersectionObserverEntry) {\r\n        this.emitEvent(EVENTS.ON_INTERSECTION, {\r\n            entry: entry,\r\n            offset: this.#args.offset,\r\n            timestamp: Date.now()\r\n        })\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { getStringOrDefault, getIntOrDefault, parseAttribute, is, getActiveClass, isString } from \"../../core/utlis/functions\";\r\nimport { ICuiComponentAction, CuiActionsFatory } from \"../../core/utlis/actions\";\r\nimport { CuiActionsHelper } from \"../../core/helpers/helpers\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiOpenArgs {\r\n    target: string;\r\n    action: ICuiComponentAction;\r\n    timeout: number;\r\n    constructor() {\r\n        this.target = \"\";\r\n        this.action = null;\r\n        this.timeout = 0;\r\n    }\r\n\r\n    parse(args: any) {\r\n        if (is(args) && isString(args)) {\r\n            this.target = args;\r\n            this.action = null;\r\n            this.timeout = -1\r\n            return;\r\n        }\r\n        this.target = getStringOrDefault(args.target, null);\r\n        this.action = CuiActionsFatory.get(args.action)\r\n        this.timeout = getIntOrDefault(args.timeout, -1);\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return is(this.target);\r\n    }\r\n}\r\n\r\nexport class CuiOpenComponent implements ICuiComponent {\r\n    attribute: string;\r\n    #prefix: string;\r\n    constructor(prefix?: string) {\r\n        this.#prefix = prefix ?? 'cui';\r\n        this.attribute = `${this.#prefix}-open`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiOpenHandler(element, utils, this.attribute, this.#prefix);\r\n    }\r\n}\r\n\r\nexport class CuiOpenHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #args: CuiOpenArgs;\r\n    #isInitialized: boolean;\r\n    #prefix: string;\r\n    #actionsHelper: CuiActionsHelper;\r\n    #inProgress: boolean;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string, prefix: string) {\r\n        super(\"CuiOpenHandler\", element, utils);\r\n        this.#actionsHelper = new CuiActionsHelper(utils.interactions);\r\n        this.#attribute = attribute\r\n        this.#args = new CuiOpenArgs();\r\n        this.#isInitialized = false;\r\n        this.#prefix = prefix;\r\n        this.#inProgress = false;\r\n\r\n    }\r\n\r\n    handle(): void {\r\n        this._log.debug(\"Init\", \"handle\")\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        if (this.#args.isValid()) {\r\n            this.element.addEventListener('click', this.onClick.bind(this))\r\n            this.#isInitialized = true;\r\n            this._log.debug(\"Initialized\", \"handle\")\r\n        }\r\n\r\n    }\r\n\r\n    refresh(): void {\r\n        this._log.debug(\"Refresh\", \"refresh\")\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        if (this.#args.isValid() && !this.#isInitialized) {\r\n            this.element.addEventListener('click', this.onClick.bind(this))\r\n            this.#isInitialized = true;\r\n            this._log.debug(\"Initialized\", \"refresh\")\r\n        }\r\n    }\r\n\r\n    destroy(): void {\r\n        this._log.debug(\"Destroy\", \"destroy\")\r\n        if (this.#isInitialized) {\r\n            this.element.removeEventListener('click', this.onClick.bind(this))\r\n            this._log.debug(\"Destoryed\", \"destroy\")\r\n        }\r\n\r\n    }\r\n\r\n    onClick(ev: MouseEvent) {\r\n        if (this.#inProgress) {\r\n            return;\r\n        }\r\n        const target = document.querySelector(this.#args.target);\r\n        if (!is(target)) {\r\n            this._log.warning(`Target ${this.#args.target} not found`, 'onClick')\r\n            return;\r\n        }\r\n        this.#inProgress = true;\r\n        if (this.#args.action && this.#args.timeout !== -1) {\r\n            let delay = this.#args.timeout > 0 ? this.#args.timeout : this.utils.setup.animationTime;\r\n            this.#actionsHelper.performAction(target, this.#args.action, delay).then(() => {\r\n                target.classList.add(getActiveClass(this.#prefix));\r\n                this.emitOpen(ev);\r\n                this.#inProgress = false;\r\n            });\r\n        } else {\r\n            target.classList.add(getActiveClass(this.#prefix));\r\n            this.emitOpen(ev);\r\n            this.#inProgress = false;\r\n        }\r\n        ev.preventDefault();\r\n    }\r\n\r\n    emitOpen(ev: MouseEvent) {\r\n        this.emitEvent(EVENTS.ON_OPEN, {\r\n            event: ev,\r\n            timestamp: Date.now()\r\n        })\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { getStringOrDefault, getIntOrDefault, parseAttribute, is, getActiveClass, isString } from \"../../core/utlis/functions\";\r\nimport { ICuiComponentAction, CuiActionsFatory } from \"../../core/utlis/actions\";\r\nimport { CLASSES, EVENTS } from \"../../core/utlis/statics\";\r\nimport { CuiActionsHelper } from \"../../core/helpers/helpers\";\r\n\r\nexport class CuiCloseArgs {\r\n    target: string;\r\n    action: ICuiComponentAction;\r\n    timeout: number;\r\n    constructor() {\r\n        this.target = \"\";\r\n        this.action = null;\r\n        this.timeout = 0;\r\n    }\r\n\r\n    parse(args: any) {\r\n        if (is(args) && isString(args)) {\r\n            this.target = args\r\n            this.action = null\r\n            this.timeout = -1\r\n            return;\r\n        }\r\n        this.target = getStringOrDefault(args.target, null);\r\n        this.action = CuiActionsFatory.get(args.action)\r\n        this.timeout = getIntOrDefault(args.timeout, -1);\r\n    }\r\n}\r\n\r\nexport class CuiCloseComponent implements ICuiComponent {\r\n    attribute: string;\r\n    #prefix: string;\r\n    constructor(prefix?: string) {\r\n        this.#prefix = prefix ?? 'cui';\r\n        this.attribute = `${this.#prefix}-close`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiCloseHandler(element, utils, this.attribute, this.#prefix);\r\n    }\r\n}\r\n\r\nexport class CuiCloseHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #args: CuiCloseArgs;\r\n    #isInitialized: boolean;\r\n    #prefix: string;\r\n    #inProgress: boolean;\r\n    #actionHelper: CuiActionsHelper;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string, prefix: string) {\r\n        super(\"CuiCloseHandler\", element, utils);\r\n        this.#actionHelper = new CuiActionsHelper(utils.interactions);\r\n        this.#attribute = attribute\r\n        this.#args = new CuiCloseArgs();\r\n        this.#isInitialized = false;\r\n        this.#prefix = prefix;\r\n    }\r\n\r\n    handle(): void {\r\n        this._log.debug(\"Init\", \"handle\")\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        this.element.addEventListener('click', this.onClick.bind(this))\r\n        this.#isInitialized = true;\r\n        this._log.debug(\"Initialized\", \"handle\")\r\n    }\r\n\r\n    refresh(): void {\r\n        this._log.debug(\"Refresh\", \"refresh\")\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        if (!this.#isInitialized) {\r\n            this.element.addEventListener('click', this.onClick.bind(this))\r\n            this.#isInitialized = true;\r\n            this._log.debug(\"Initialized\", \"refresh\")\r\n        }\r\n    }\r\n\r\n    destroy(): void {\r\n        this._log.debug(\"Destroy\", \"destroy\")\r\n        if (this.#isInitialized) {\r\n            this.element.removeEventListener('click', this.onClick.bind(this))\r\n            this._log.debug(\"Destoryed\", \"destroy\")\r\n        }\r\n    }\r\n\r\n    onClick(ev: MouseEvent) {\r\n        if (this.#inProgress) {\r\n            return;\r\n        }\r\n        const target = this.getTarget();\r\n        if (!is(target)) {\r\n            this._log.warning(`Target ${this.#args.target} not found`, 'onClick')\r\n            return;\r\n        }\r\n        this.#inProgress = true;\r\n        if (this.#args.action && this.#args.timeout !== -1) {\r\n            let delay = this.#args.timeout > 0 ? this.#args.timeout : this.utils.setup.animationTime;\r\n            this.#actionHelper.performAction(target, this.#args.action, delay).then(() => {\r\n                target.classList.remove(getActiveClass(this.#prefix));\r\n                this.emitClose(ev);\r\n                this.#inProgress = false\r\n            })\r\n        } else {\r\n            target.classList.remove(getActiveClass(this.#prefix));\r\n            this.emitClose(ev);\r\n            this.#inProgress = false\r\n        }\r\n        ev.preventDefault();\r\n    }\r\n\r\n    private getTarget(): Element {\r\n        return is(this.#args.target) ? document.querySelector(this.#args.target) : this.element.parentElement;\r\n    }\r\n\r\n    private emitClose(ev: MouseEvent) {\r\n        this.emitEvent(EVENTS.ON_CLOSE, {\r\n            timestamp: Date.now(),\r\n            event: ev\r\n        })\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICuiComponentAction, CuiActionsFatory } from \"../../core/utlis/actions\";\r\nimport { is, isString, getStringOrDefault, getName, parseAttribute } from \"../../core/utlis/functions\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiToggleArgs {\r\n    target: string;\r\n    action: ICuiComponentAction;\r\n    constructor() {\r\n        this.action = null;\r\n        this.target = null;\r\n    }\r\n\r\n    parse(args: any) {\r\n        if (is(args) && isString(args)) {\r\n            this.action = CuiActionsFatory.get(args)\r\n        } else {\r\n            this.target = getStringOrDefault(args.target, null);\r\n            this.action = CuiActionsFatory.get(args.action)\r\n        }\r\n    }\r\n}\r\nexport class CuiToggleComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor(prefix?: string) {\r\n        this.attribute = `${prefix ?? \"cui\"}-toggle`;\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiToggleHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiToggleHandler extends CuiHandlerBase implements ICuiMutationHandler {\r\n    #attribute: string;\r\n    #args: CuiToggleArgs;\r\n    #target: Element;\r\n    #utils: CuiUtils;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiToggleHandler\", element, utils);\r\n        this.#attribute = attribute\r\n        this.#args = new CuiToggleArgs();\r\n        this.#target = this.element;\r\n        this.#utils = utils;\r\n    }\r\n\r\n    handle(): void {\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        this.#target = this.getTarget();\r\n        this.element.addEventListener('click', this.onClick.bind(this));\r\n    }\r\n\r\n    refresh(): void {\r\n        this.#args.parse(parseAttribute(this.element, this.#attribute));\r\n        this.#target = this.getTarget();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.element.removeEventListener('click', this.onClick.bind(this));\r\n    }\r\n\r\n    onClick(ev: MouseEvent) {\r\n        this.#args.action.toggle(this.#target, this.#utils)\r\n        this.emitEvent(EVENTS.ON_TOGGLE, {\r\n            action: this.#args.action,\r\n            target: this.#target,\r\n            timestamp: Date.now()\r\n        })\r\n        ev.preventDefault();\r\n    }\r\n\r\n    getTarget(): Element {\r\n        return is(this.#args.target) ? document.querySelector(this.#args.target) : this.element;\r\n    }\r\n}","import { ICuiComponent, ICuiMutationHandler, CuiContext, ICuiEventBus } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { CuiHandlerBase } from \"../../app/handlers/base\";\r\nimport { ICuiResizable, CuiResizeData } from \"../../app/observers/resize\";\r\nimport { generateCUID } from \"../../core/utlis/functions\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\n\r\nexport class CuiResizeComponent implements ICuiComponent {\r\n    attribute: string;\r\n    constructor() {\r\n        this.attribute = 'cui-resize';\r\n    }\r\n\r\n    getStyle(): string {\r\n        return null;\r\n    }\r\n\r\n    get(element: Element, utils: CuiUtils): ICuiMutationHandler {\r\n        return new CuiResizeHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n\r\nexport class CuiResizeHandler extends CuiHandlerBase implements ICuiMutationHandler, CuiContext {\r\n\r\n    #attribute: string;\r\n    #bus: ICuiEventBus;\r\n    constructor(element: Element, utils: CuiUtils, attribute: string) {\r\n        super(\"CuiResizeHandler\", element, utils);\r\n        this.#attribute = attribute\r\n        this.#bus = utils.bus;\r\n    }\r\n\r\n\r\n    handle(): void {\r\n        //   this._log.debug(this.#element.getAttribute(this.#attribute));\r\n        this.#bus.on(EVENTS.ON_RESIZE, this.resize, this);\r\n    }\r\n\r\n    refresh(): void {\r\n        // console.log(this.#element.getAttribute(this.#attribute));\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#bus.detach(EVENTS.ON_RESIZE, this);\r\n    }\r\n\r\n    resize(data: CuiResizeData) {\r\n        console.log(data);\r\n    }\r\n\r\n    getId(): string {\r\n        return generateCUID(this.#attribute);\r\n    }\r\n}","import { ICuiEventListener } from \"../models/interfaces\";\r\nimport { is } from \"../utlis/functions\";\r\n\r\nexport class CuiKeyPressListener implements ICuiEventListener<KeyboardEvent> {\r\n    #callback: (t: KeyboardEvent) => void;\r\n    #keys: string[];\r\n    #inProgress: boolean;\r\n    #singleEmit: boolean;\r\n    constructor(singleEmit: boolean, keys?: string[]) {\r\n        this.#keys = keys;\r\n        this.#inProgress = false;\r\n        this.#singleEmit = true;\r\n    }\r\n\r\n    setCallback(callback: (t: KeyboardEvent) => void): void {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    isInProgress(): boolean {\r\n        return this.#inProgress;\r\n    }\r\n\r\n    attach(): void {\r\n        document.addEventListener('keydown', this.onKeyDown.bind(this))\r\n        if (this.#singleEmit) {\r\n            document.addEventListener('keyup', this.onKeyUp.bind(this))\r\n        }\r\n    }\r\n\r\n    detach(): void {\r\n        document.removeEventListener('keydown', this.onKeyDown.bind(this))\r\n        if (this.#singleEmit) {\r\n            document.addEventListener('keyup', this.onKeyUp.bind(this))\r\n        }\r\n    }\r\n\r\n    onKeyDown(ev: KeyboardEvent) {\r\n        if (this.#inProgress) {\r\n            return;\r\n        }\r\n        this.#inProgress = true;\r\n        try {\r\n            if (!is(this.#keys) || this.#keys.includes(ev.code)) {\r\n                this.#callback(ev);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e)\r\n        } finally {\r\n            if (!this.#singleEmit)\r\n                this.#inProgress = false;\r\n        }\r\n    }\r\n\r\n    onKeyUp(ev: KeyboardEvent) {\r\n        this.#inProgress = false;\r\n    }\r\n}","import { ICuiEventBus } from \"../../core/models/interfaces\";\r\nimport { CuiKeyPressListener } from \"../../core/listeners/keys\";\r\nimport { EVENTS } from \"../../core/utlis/statics\";\r\nexport interface KeyDownEvent {\r\n    timestamp: number;\r\n    event: KeyboardEvent;\r\n}\r\nexport interface ICuiKeysObserver {\r\n    connect(): void;\r\n    disconnect(): void;\r\n}\r\nexport class CuiKeysObserver {\r\n    #listener: CuiKeyPressListener;\r\n    #bus: ICuiEventBus\r\n    constructor(bus: ICuiEventBus) {\r\n        this.#bus = bus;\r\n        this.#listener = new CuiKeyPressListener(true);\r\n        this.#listener.setCallback(this.onKeyDown.bind(this))\r\n    }\r\n    connect(): void {\r\n        this.#listener.attach();\r\n    }\r\n    disconnect(): void {\r\n        this.#listener.detach();\r\n    }\r\n\r\n    onKeyDown(ev: KeyboardEvent) {\r\n        this.#bus.emit(EVENTS.ON_KEYDOWN, null, {\r\n            timestamp: Date.now(),\r\n            event: ev\r\n        })\r\n    }\r\n\r\n}","import { ICuiPlugin } from \"../../core/models/interfaces\";\r\nimport { CuiUtils } from \"../../core/models/utils\";\r\nimport { ICuiKeysObserver, CuiKeysObserver } from \"./observer\";\r\n\r\n\r\nexport interface CuiKeysObserverPluginSetup {\r\n    autoPrint: boolean;\r\n}\r\n\r\nexport class CuiKeysObserverPlugin implements ICuiPlugin {\r\n    description: string;\r\n    name: string = 'keys-observer';\r\n    setup: CuiKeysObserverPluginSetup;\r\n    #keysObserver: ICuiKeysObserver;\r\n    constructor(keySetup: CuiKeysObserverPluginSetup) {\r\n        this.description = \"CuiKeysObserverPlugin\";\r\n        this.setup = keySetup;\r\n    }\r\n\r\n    init(utils: CuiUtils): void {\r\n        this.#keysObserver = new CuiKeysObserver(utils.bus);\r\n        this.#keysObserver.connect();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.#keysObserver.disconnect();\r\n    }\r\n}","import { CuiSetupInit } from \"../core/models/setup\";\r\nimport { is } from \"../core/utlis/functions\";\r\nimport { CuiInstance } from \"./instance\";\r\nimport { ICONS } from \"../core/utlis/statics\";\r\nimport { ICuiPlugin, CuiInitData, CuiInitResult, ICuiComponent } from \"../core/models/interfaces\";\r\nimport { CuiAutoLightModePlugin } from \"../plugins/light/light\";\r\nimport { CuiIconComponent } from \"../components/icon/icon\";\r\nimport { CuiCircleComponent } from \"../components/circle/circle\";\r\nimport { CuiSpinnerComponent } from \"../components/spinner/spinner\";\r\nimport { CuiDummyComponent } from \"../components/dummy/dummy\";\r\nimport { CuiScrollComponent } from \"../components/scroll/scroll\";\r\nimport { CuiScrollspyComponent } from \"../components/scrollspy/scrollspy\";\r\nimport { CuiAutoPrintModePlugin } from \"../plugins/print/print\";\r\nimport { CuiIntersectionComponent } from \"../components/intersection/intersection\";\r\nimport { CuiOpenComponent } from \"../components/open/open\";\r\nimport { CuiCloseComponent } from \"../components/close/close\";\r\nimport { CuiToggleComponent } from \"../components/toggle/toggle\";\r\nimport { CuiResizeComponent } from \"../components/resize/resize\";\r\nimport { CuiKeysObserverPlugin } from \"../plugins/keys/keys\";\r\n\r\nexport class CuiInitializer {\r\n    #window: any;\r\n    constructor() {\r\n        this.#window = window;\r\n    }\r\n\r\n    async init(setup: CuiInitData): Promise<CuiInitResult> {\r\n        let settings: CuiSetupInit = { ... new CuiSetupInit(), ...setup.setup }\r\n        const appPrefix: string = settings.app;\r\n        const result: CuiInitResult = {\r\n            result: false\r\n        }\r\n        if (is(this.#window[appPrefix])) {\r\n            result.message = \"Instance is already initialized\";\r\n            return result;\r\n        }\r\n        if (is(setup.icons)) {\r\n            for (let icon in setup.icons) {\r\n                ICONS[icon] = setup.icons[icon];\r\n            }\r\n        }\r\n        try {\r\n            this.#window[appPrefix] = new CuiInstance(settings, setup.plugins, setup.components)\r\n            this.#window[appPrefix].init();\r\n        } catch (e) {\r\n            console.error(e);\r\n            result.message = \"An error occured during initialization\";\r\n            return result;\r\n        }\r\n        result.result = true;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class CuiInit {\r\n    #isInitialized: boolean;\r\n    constructor() {\r\n        this.#isInitialized = false;\r\n    }\r\n\r\n    async init(data: CuiInitData): Promise<boolean> {\r\n        if (this.#isInitialized) {\r\n            console.log(\"Module is already initialized\")\r\n            return false;\r\n        }\r\n        const initializer = new CuiInitializer();\r\n        const pluginList: ICuiPlugin[] = [\r\n            new CuiAutoLightModePlugin({ autoLight: true }),\r\n            new CuiAutoPrintModePlugin({ autoPrint: true }),\r\n            new CuiKeysObserverPlugin(null)\r\n        ];\r\n\r\n        const componentList: ICuiComponent[] = [\r\n            new CuiIconComponent(),\r\n            new CuiCircleComponent(),\r\n            new CuiSpinnerComponent(),\r\n            new CuiDummyComponent(),\r\n            new CuiScrollComponent(),\r\n            new CuiScrollspyComponent(),\r\n            new CuiIntersectionComponent(),\r\n            new CuiOpenComponent(),\r\n            new CuiCloseComponent(),\r\n            new CuiToggleComponent(),\r\n            new CuiResizeComponent(),\r\n        ];\r\n\r\n        let result = await initializer.init({\r\n            setup: data.setup,\r\n            icons: data.icons,\r\n            plugins: is(data.plugins) ? [...pluginList, ...data.plugins] : pluginList,\r\n            components: is(data.components) ? [...componentList, ...data.components] : componentList\r\n        })\r\n        if (result.result) {\r\n            this.#isInitialized = true;\r\n            return true;\r\n        } else {\r\n            console.error(`A cUI instance failed to initialize: [${result.message ?? \"#\"}]`);\r\n        }\r\n        console.log(\"Cui Light failed to init\")\r\n        return false;\r\n\r\n    }\r\n}","import { CuiInit } from './app/initializer';\r\n//import \"../node_modules/cui-styles/styles/style.scss\";\r\ndeclare global {\r\n    interface Window {\r\n        cuiInit: CuiInit;\r\n    }\r\n}\r\n\r\nwindow.cuiInit = new CuiInit();"],"sourceRoot":""}