{"version":3,"sources":["webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/functions.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/statics.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/actions.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/models/errors.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/logger.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/factories/logger.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/builders/element.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/animation/definitions.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/listeners/move.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/models/setup.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/observers/mutations.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/helpers/helpers.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/index.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/index.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/index.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/aria.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/handlers/base.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/accordion/accordion.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/animation/animators.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/animation/engine.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/banner/banner.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/builders/icon.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/circle/circle.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/close/close.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/cover/cover.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/dialog/dialog.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/listeners/hover.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/position/evaluator.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/position/calculator.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/task.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/drop/drop.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/float/helpers.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/float/float.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/icon/icon.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/observers/intersection.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/intersection/intersection.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/offcanvas/offcanvas.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/models/elements.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/listeners/scroll.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/offset/modes.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/offset/offset.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/open/open.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/resize/resize.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/scroll/scroll.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/intersection/intersection.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/scrollspy/mode.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/scrollspy/scrollspy.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/handlers/drag/detectors.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/handlers/drag/drag.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/sortable/sortable.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/spinner/spinner.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/switch/slider.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/switch/switch.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/switch/switcher.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/toggle/toggle.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/tooltip/tooltip.js","webpack://cui-light/./node_modules/cui-light-components/dist/esm/module.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/click/click.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/listeners/keys.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/keys/observer.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/keys/keys.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/listeners/media.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/light/light.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/print/print.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/models/colors.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/properties/colors.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/properties/setter.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/properties/handler.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/properties/properties.js","webpack://cui-light/./node_modules/cui-light-plugins/dist/esm/module.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/interactions.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/factories/interactions.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/utils/dictionary.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/managers/cache.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/bus/handlers.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/bus/executors.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/bus/bus.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/styles/appender.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/handlers/colors.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/observers/resize.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/managers/development.js","webpack://cui-light/./node_modules/cui-light-core/dist/esm/models/utils.js"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACR;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,oEAAa;AAC/B;AACA,cAAc,OAAO,GAAG,KAAK;AAC7B;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA,2BAA2B;AAC3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACO;AACP;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,4BAA4B,IAAI,6DAA6D,IAAI,sEAAsE,IAAI,QAAQ;AAClM;AACO;AACP;AACA;AACO;AACP,cAAc,mDAAmD;AACjE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACO;AACP;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACO;AACP,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,cAAc,QAAQ,GAAG,mEAAkB,cAAc;AACzD;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc,kCAAkC,GAAG,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,0CAA0C,+DAAc,sBAAsB,+DAAc;AAC5F,0BAA0B,+DAAc;AACxC;AACA,kDAAkD,8BAA8B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2EAAoB,6BAA6B,KAAK,oBAAoB,UAAU;AAC9G;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI,IAAI,MAAM;AACrC,KAAK;AACL,+CAA+C;AAC/C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5iBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AAC/B;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP,kBAAkB,OAAO;AACzB,oBAAoB,OAAO;AAC3B,uBAAuB,OAAO;AAC9B,2BAA2B,OAAO;AAClC,4BAA4B,OAAO;AACnC,iCAAiC,OAAO;AACxC,8BAA8B,OAAO;AACrC,0BAA0B,OAAO;AACjC,wBAAwB,OAAO;AAC/B,0BAA0B,OAAO;AACjC,yBAAyB,OAAO;AAChC,gCAAgC,OAAO;AACvC,6BAA6B,OAAO;AACpC,yBAAyB,OAAO;AAChC,uBAAuB,OAAO;AAC9B,yBAAyB,OAAO;AAChC,wBAAwB,OAAO;AAC/B,qBAAqB,OAAO;AAC5B,2BAA2B,OAAO;AAClC,0BAA0B,OAAO;AACjC,0BAA0B,OAAO;AACjC,8BAA8B,OAAO;AACrC,wBAAwB,OAAO;AAC/B,8BAA8B,OAAO;AACrC,6BAA6B,OAAO;AACpC,6BAA6B,OAAO;AACpC,iCAAiC,OAAO;AACxC,sBAAsB,OAAO;AAC7B,4BAA4B,OAAO;AACnC,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,+BAA+B,OAAO;AACtC,sBAAsB,OAAO;AAC7B,4BAA4B,OAAO;AACnC,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,+BAA+B,OAAO;AACtC,oBAAoB,OAAO;AAC3B,0BAA0B,OAAO;AACjC,yBAAyB,OAAO;AAChC,yBAAyB,OAAO;AAChC,6BAA6B,OAAO;AACpC,yBAAyB,OAAO;AAChC,oBAAoB,OAAO;AAC3B,0BAA0B,OAAO;AACjC,yBAAyB,OAAO;AAChC,2BAA2B,OAAO;AAClC,iBAAiB,OAAO;AACxB,sBAAsB,OAAO;AAC7B,iBAAiB,OAAO;AACxB,gBAAgB,OAAO;AACvB,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA,2BAA2B,kEAAO;;;;;;;;AChKzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACkD;AAC3C;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAG;AACf;AACA;AACA;AACA;AACA,YAAY,8DAAG;AACf;AACA;AACA;AACA;AACA,YAAY,8DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB,gDAAgD,EAAE,EAAE,WAAW,gBAAgB,iDAAiD,EAAE,EAAE,WAAW,qEAAU,YAAY;AACtN;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB,kDAAkD,EAAE,EAAE,WAAW,gBAAgB,mDAAmD,EAAE,EAAE,WAAW,qEAAU;AAC9M;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,6DAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,6DAAE;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;ACpNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACxDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,OAAO,IAAI,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA,mBAAmB,4BAA4B,IAAI,MAAM,IAAI,eAAe,IAAI,sEAAsE,IAAI,QAAQ,IAAI,QAAQ;AAC9K;AACA;;;;;;ACzC4C;AACD;AAC3C;AACA;AACA;AACO,MAAM,uBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,6DAA6D,0BAAO;AAChG;AACA;;;;;;;;ACbA;AAAA;AAAA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACyD;AAClD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAE;AACd;AACA;AACA;AACA,YAAY,mEAAE;AACd;AACA;AACA,YAAY,mEAAE;AACd;AACA,YAAY,gFAAe;AAC3B;AACA,aAAa;AACb;AACA,YAAY,mEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnHA;AAAA;AAAA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACwC;AACjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,iBAAiB;AACjH;AACA,4FAA4F,iBAAiB;AAC7G;AACA,gGAAgG,iBAAiB;AACjH;AACA,kGAAkG,iBAAiB;AACnH;AACA,8FAA8F,iBAAiB;AAC/G;AACA,gGAAgG,iBAAiB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,iBAAiB;AACpH;AACA,+FAA+F,iBAAiB;AAChH;AACA,mGAAmG,iBAAiB;AACpH;AACA,qGAAqG,iBAAiB;AACtH;AACA,iGAAiG,iBAAiB;AAClH;AACA,mGAAmG,iBAAiB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mEAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,mEAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mEAAE;AACjB;AACA,eAAe,mEAAE;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;ACjLA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACuD;AACkD;AAClG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,uFAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAG;AAC3B;AACA,4BAA4B,oEAAG;AAC/B;AACA,2EAA2E,+EAAc;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mEAAE;AAClB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mFAAkB;AAClC;AACA,oBAAoB,mEAAE;AACtB;AACA,wBAAwB,mFAAkB;AAC1C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,mEAAE;AAClB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1MA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AAC2C;AACH;AACjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,8DAAO;AAChD;AACA;AACA;AACA,oDAAoD,8DAAO;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,8DAAO;AAChD;AACA;AACA;AACA,oDAAoD,8DAAO;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAO;AAClD,wBAAwB,mEAAE;AAC1B;AACA;AACA;AACA,gDAAgD,8DAAO;AACvD;AACA;AACA;AACA;AACA,sDAAsD,8DAAO;AAC7D,gCAAgC,mEAAE;AAClC;AACA;AACA;AACA,2DAA2D,8DAAO;AAClE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;ACnGA;AAAO;;;;;;;;ACAP;AAAO;;;;;;;;ACAP;AAAO;;;;;;;;;;;;;;;;;;;ACAA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACuD;AACc;AACtB;AACO;AACG;AACM;AACrB;AACnC,MAAM,oBAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+BAAE;AAC7C;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAgB;AAC7B;AACA;AACA,oBAAoB,kCAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAAc;AAC7C,0BAA0B,oBAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAc,SAAS,qBAAgB;AACpD;AACA;AACA;AACA;AACA,iCAAiC,mCAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kCAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,mBAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,MAAM,2BAAsB,SAAS,mBAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,yBAAM;AACtE,iEAAiE,yBAAM;AACvE,+CAA+C,8CAAqB;AACpE,gDAAgD,8CAAqB;AACrE;AACA;AACA;AACA;AACA,mDAAmD,8CAAqB;AACxE;AACA;AACA,oDAAoD,8CAAqB;AACzE;AACA;AACA;AACA;AACA,yBAAyB,yBAAM;AAC/B,yBAAyB,yBAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+BAAE;AACxC,4EAA4E,yBAAM;AAClF;AACA;AACA;AACA;AACA;AACA,6JAA6J,yBAAM;AACnK;AACA,gBAAgB,cAAc;AAC9B,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAM;AACnC;AACA;AACA;AACA;AACA,+JAA+J,yBAAM;AACrK;AACA,gBAAgB,cAAc;AAC9B,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mEAAmE,+BAAE;AACrE;AACA;AACA,SAAS;AACT;AACA;AACA;AACO,MAAM,sBAAiB,SAAS,mBAAc;AACrD;AACA;AACA;AACA,yDAAyD,gDAA2B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;;ACnZA,IAAI,iBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AAC0E;AACqD;AAChD;AAC/E,qCAAqC,OAAO;AAC5C;AACO,MAAM,0BAAgB;AAC7B;AACA;AACA;AACA;AACA,QAAQ,8BAAsB,0BAA0B,0CAAa;AACrE,QAAQ,8BAAsB,0BAA0B,0CAAa;AACrE;AACA,QAAQ,8BAAsB;AAC9B;AACA,wBAAwB,iCAAc,GAAG,8BAAsB;AAC/D,qBAAqB,iCAAc,GAAG,8BAAsB;AAC5D,uBAAuB,8BAAsB;AAC7C;AACA;AACA,YAAY,+BAAE;AACd,0BAA0B,yCAAY;AACtC,4BAA4B,iCAAc,GAAG,+CAAkB,gBAAgB,8BAAsB;AACrG,yBAAyB,iCAAc,GAAG,+CAAkB,eAAe,8BAAsB;AACjG,2BAA2B,4CAAe,eAAe,8BAAsB;AAC/E,6BAA6B,yCAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,8BAAsB;AAC9B,4BAA4B,8BAAsB,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAAmB,iCAAiC,8BAAsB;AAC7F;AACA;AACA;AACO,MAAM,6BAAmB,SAAS,sBAAiB;AAC1D;AACA,6DAA6D,0BAAgB;AAC7E;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B,QAAQ,8BAAsB;AAC9B,QAAQ,8BAAsB;AAC9B,QAAQ,8BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAAsB,oCAAoC,yBAAM;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAM,SAAS,8BAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAS;AACxB;AACA;AACA;AACA;AACA,YAAY,8BAAsB;AAClC,gBAAgB,8BAAsB;AACtC;AACA;AACA;AACA,4BAA4B,8BAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAM;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,4CAAe;AACnC;AACA,SAAS;AACT;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA,QAAQ,8BAAsB;AAC9B;AACA,0BAA0B;AAC1B;AACA,YAAY,8BAAsB;AAClC,SAAS;AACT;AACA;AACA;AACA,YAAY,8BAAsB;AAClC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClLA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACiD;AACT;AACxC;AACA;AACA;AACO,MAAM,yBAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAAE,gBAAgB,+BAAE;AAC1C,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,0BAAgB;AAC7B;AACA;AACA,aAAa,+BAAE;AACf,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA,sBAAsB,+BAAE,gBAAgB,+BAAE;AAC1C,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH,8BAAsB;AACxI;AACA;AACA;AACA,kBAAkB,MAAM,EAAE,6CAA6C;AACvE;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,2BAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,GAAG,MAAM,EAAE,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpHA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACwC;AAC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AACA,eAAe,YAAS;AACxB;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA,6BAA6B,yBAAM,eAAe,yBAAsB,OAAO,uBAAmB;AAClG,2BAA2B,yBAAM;AACjC;AACA,aAAa;AACb,YAAY,yBAAsB;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,yBAAsB,OAAO,cAAU;AAC3E;AACA,oCAAoC,yBAAsB;AAC1D,YAAY,cAAc;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,yBAAsB;AAC9C;AACA,oCAAoC,yBAAsB;AAC1D,4CAA4C,YAAY;AACxD,6CAA6C,aAAa;AAC1D,gBAAgB,yBAAsB,kBAAkB,0CAAa,sBAAsB,yBAAsB,OAAO,aAAS;AACjI;AACA,qCAAqC,yBAAsB;AAC3D,qCAAqC,yBAAsB,OAAO,cAAU;AAC5E,+BAA+B,yBAAM;AACrC;AACA,iBAAiB;AACjB,gBAAgB,yBAAsB;AACtC;AACA;AACA,oBAAoB,yBAAsB,OAAO,uBAAmB,eAAe,yBAAM;AACzF;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAsB,OAAO,cAAU;AAC3E;AACA;AACA;AACA;AACA;AACA,eAAe,YAAS;AACxB,sDAAsD,yBAAsB,OAAO,cAAU,EAAE,IAAI,qBAAqB;AACxH,iBAAiB,+BAAE;AACnB;AACA;AACA;AACA;AACA,6CAA6C,yBAAsB,OAAO,cAAU;AACpF,iBAAiB,+BAAE;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAsB;AAChE,YAAY,yBAAsB;AAClC,YAAY,yBAAsB;AAClC;AACA;AACA;AACA,YAAY,yBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAsB;AAC9B;AACA;AACA,QAAQ,yBAAsB;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAS,kBAAkB,cAAU,kBAAkB,cAAU,mHAAmH,uBAAmB,kBAAkB,gBAAY,kBAAkB,iBAAa;;;;;;AC3UpQ,IAAI,4BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,eAAQ,EAAE,iBAAU;AACjB;AACP;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,eAAQ;AAChB,QAAQ,4BAAsB,OAAO,eAAQ;AAC7C;AACA;AACA,mBAAmB,4BAAsB,OAAO,eAAQ;AACxD,mBAAmB,4BAAsB,OAAO,eAAQ;AACxD;AACA;AACA;AACA,eAAQ;AACD;AACP;AACA,QAAQ,iBAAU;AAClB,QAAQ,4BAAsB,OAAO,iBAAU;AAC/C;AACA;AACA,wBAAwB,4BAAsB,OAAO,iBAAU;AAC/D,yBAAyB,4BAAsB,OAAO,iBAAU;AAChE;AACA;AACA;AACA,iBAAU;AACH;AACP;AACA;AACA,QAAQ,4BAAsB;AAC9B;AACA;AACA,oBAAoB,4BAAsB;AAC1C,qBAAqB,4BAAsB;AAC3C;AACA;AACA;AACA;;;ACtDA,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAW,EAAE,YAAO,EAAE,cAAS,0CAA0C,cAAS,iBAAiB,wBAAmB;AACK;AAC3D;AACW;AACD;AACL;AACD;AACxE,sCAAsC,OAAO;AAC7C,uCAAuC,OAAO;AAC9C,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AAClB,MAAM,kBAAY;AACzB;AACA,QAAQ,gBAAW;AACnB,QAAQ,YAAO;AACf,QAAQ,0BAAsB,OAAO,gBAAW;AAChD,QAAQ,0BAAsB,OAAO,YAAO;AAC5C;AACA;AACA;AACA;AACA,uBAAuB,0BAAsB,OAAO,gBAAW;AAC/D;AACA;AACA,wBAAwB,yCAAY;AACpC;AACA,uBAAuB,4CAAe,eAAe,0BAAsB,OAAO,gBAAW;AAC7F,uBAAuB,+CAAkB,eAAe,0CAAa,6BAA6B,0BAAsB,OAAO,YAAO;AACtI,wBAAwB,+CAAkB,gBAAgB,0CAAa,8BAA8B,0BAAsB,OAAO,YAAO;AACzI;AACA;AACA,gBAAW,kBAAkB,YAAO;AAC7B;AACP;AACA,QAAQ,cAAS;AACjB,QAAQ,0BAAsB,OAAO,cAAS;AAC9C,4BAA4B,0BAAsB,OAAO,cAAS,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAe,iCAAiC,0BAAsB,OAAO,cAAS;AACzG;AACA;AACA,cAAS;AACF,MAAM,qBAAe,SAAS,2BAAsB;AAC3D;AACA,yDAAyD,kBAAY;AACrE;AACA;AACA;AACA;AACA,QAAQ,cAAS;AACjB;AACA,QAAQ,wBAAmB;AAC3B;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB,0BAA0B,oCAAoB;AAC5E,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB,OAAO,wBAAmB,MAAM,sBAAsB;AACpF,QAAQ,0BAAsB,8BAA8B,oBAAoB;AAChF,QAAQ,0BAAsB,OAAO,cAAS;AAC9C;AACA;AACA,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B;AACA;AACA,QAAQ,cAAc;AACtB,QAAQ,0BAAsB,4CAA4C,0CAAa,OAAO,0BAAsB,OAAO,cAAS;AACpI,QAAQ,0BAAsB,8CAA8C,0CAAa,SAAS,0BAAsB,OAAO,cAAS;AACxI,QAAQ,0BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B;AACA;AACA,QAAQ,0BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAAsB;AAChD,YAAY,0BAAsB;AAClC;AACA;AACA,+BAA+B,0BAAsB;AACrD,YAAY,0BAAsB;AAClC;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,gDAAgD,0BAAO;AACvD;AACA,4BAA4B,yBAAM;AAClC;AACA;AACA,YAAY,0BAAsB;AAClC;AACA;AACA,iBAAiB,0BAAsB;AACvC;AACA;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,mDAAmD,0BAAO;AAC1D;AACA,4BAA4B,yBAAM;AAClC;AACA;AACA;AACA,gBAAgB,+BAAE;AAClB,2DAA2D,0BAAsB,yBAAyB,0BAAsB;AAChI,YAAY,0BAAsB;AAClC,YAAY,0BAAsB;AAClC,SAAS;AACT;AACA;AACA;AACA,oCAAoC,0BAAsB;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,0BAAsB,OAAO,wBAAmB;AAC3E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,cAAS,iDAAiD,wBAAmB;;;ACzLrL,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACmE;AACL;AAC8C;AACxC;AAC7D,MAAM,gBAAW;AACxB;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAQ;AACpB,wBAAwB,+CAAkB;AAC1C;AACA;AACA,wBAAwB,+CAAkB;AAC1C,yBAAyB,4CAAe;AACxC;AACA;AACA;AACO;AACP;AACA,4BAA4B,sDAAsD;AAClF;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAc;AACjC;AACA;AACO,MAAM,mBAAc,SAAS,UAAU;AAC9C;AACA,wDAAwD,gBAAW;AACnE;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA,YAAY,8BAAsB;AAClC;AACA;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA,+BAA+B,8BAAsB;AACrD;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA;AACA,YAAY,+BAAE;AACd;AACA;AACA;AACA,QAAQ,8BAAsB;AAC9B;AACA;AACA,+BAA+B,wBAAK;AACpC;AACA;AACA;AACA,4BAA4B,gBAAW;AACvC;AACA,YAAY,+BAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClGA,IAAI,iCAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iCAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAS;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,QAAQ,qBAAS;AACjB,QAAQ,iCAAsB;AAC9B,QAAQ,iCAAsB;AAC9B,QAAQ,iCAAsB,OAAO,qBAAS;AAC9C,QAAQ,iCAAsB;AAC9B;AACA;AACA,QAAQ,iCAAsB,OAAO,qBAAS;AAC9C;AACA;AACA,aAAa,iCAAsB,OAAO,qBAAS;AACnD;AACA;AACA,QAAQ,iCAAsB,2CAA2C,iCAAsB,OAAO,qBAAS;AAC/G,kBAAkB,iCAAsB;AACxC;AACA,uBAAuB,iCAAsB;AAC7C,SAAS;AACT;AACA;AACA,YAAY,iCAAsB;AAClC,YAAY,iCAAsB;AAClC;AACA;AACA,YAAY,iCAAsB;AAClC,YAAY,iCAAsB;AAClC;AACA;AACA,YAAY,iCAAsB;AAClC,YAAY,iCAAsB;AAClC;AACA;AACA,8EAA8E,qBAAS;;;AC7DvF,IAAI,8CAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8CAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAS,EAAE,oBAAQ,EAAE,oBAAQ;AACkC;AACsB;AACX;AACyC;AACxC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,sCAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAAE,gBAAgB,iCAAc,iBAAiB,iCAAc;AACrF,sBAAsB,+CAAkB;AACxC,sBAAsB,mDAAsB;AAC5C,sBAAsB,yCAAY;AAClC;AACA;AACO;AACP;AACA,4BAA4B,sDAAsD;AAClF;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAsB;AACzC;AACA;AACO,MAAM,mCAAsB,SAAS,UAAU;AACtD;AACA,gEAAgE,sCAAyB;AACzF,QAAQ,qBAAS;AACjB,QAAQ,oBAAQ;AAChB,QAAQ,oBAAQ;AAChB,QAAQ,8CAAsB,OAAO,qBAAS,MAAM,uBAAuB;AAC3E,QAAQ,8CAAsB,OAAO,oBAAQ;AAC7C,QAAQ,8CAAsB,OAAO,oBAAQ;AAC7C;AACA;AACA;AACA,QAAQ,8CAAsB,OAAO,qBAAS;AAC9C,QAAQ,8CAAsB,OAAO,qBAAS;AAC9C,QAAQ,8CAAsB,OAAO,oBAAQ;AAC7C,YAAY,8CAAsB,OAAO,qBAAS;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAsB,OAAO,qBAAS;AAC9C;AACA;AACA;AACA,aAAa,+BAAE;AACf;AACA,YAAY,8CAAsB,OAAO,oBAAQ;AACjD;AACA,QAAQ,8CAAsB,OAAO,oBAAQ,EAAE,8CAAqB;AACpE;AACA;AACA,aAAa,+BAAE,CAAC,8CAAsB,OAAO,oBAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,yBAAM;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,8CAAsB,OAAO,oBAAQ;AAC7C;AACA;AACA,QAAQ,8CAAsB,OAAO,oBAAQ;AAC7C;AACA;AACA,qBAAS,kBAAkB,oBAAQ,kBAAkB,oBAAQ;;;AClH7D,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAO,EAAE,oBAAW,EAAE,kBAAS,EAAE,kBAAS,EAAE,mBAAU,EAAE,iBAAQ,EAAE,4BAAmB;AACV;AACX;AACoE;AACzE;AAC/D,2CAA2C,OAAO;AAClD,4CAA4C,OAAO;AACnD,0CAA0C,OAAO;AACjD,2CAA2C,OAAO;AAClD,yBAAyB,OAAO;AAChC,mCAAmC,OAAO;AACnC,MAAM,0BAAgB;AAC7B;AACA,QAAQ,gBAAO;AACf,QAAQ,oBAAW;AACnB,QAAQ,8BAAsB,OAAO,oBAAW;AAChD,QAAQ,8BAAsB,OAAO,gBAAO;AAC5C;AACA;AACA;AACA;AACA,uBAAuB,8BAAsB,OAAO,oBAAW;AAC/D;AACA;AACA;AACA;AACA,YAAY,+BAAE;AACd,4BAA4B,yCAAY;AACxC,4BAA4B,yCAAY;AACxC,4BAA4B,+CAAkB;AAC9C,2BAA2B,+CAAkB;AAC7C,4BAA4B,+CAAkB;AAC9C,2BAA2B,4CAAe,eAAe,8BAAsB,OAAO,oBAAW;AACjG;AACA;AACA;AACA;AACA,eAAe,0CAAa,+FAA+F,8BAAsB,OAAO,gBAAO;AAC/J;AACA;AACA,eAAe,0CAAa,iGAAiG,8BAAsB,OAAO,gBAAO;AACjK;AACA;AACA,gBAAO,kBAAkB,oBAAW;AAC7B;AACP;AACA,QAAQ,kBAAS;AACjB,QAAQ,8BAAsB,OAAO,kBAAS;AAC9C,4BAA4B,8BAAsB,OAAO,kBAAS,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAAmB,iCAAiC,8BAAsB,OAAO,kBAAS;AAC7G;AACA;AACA,kBAAS;AACF,MAAM,6BAAmB,SAAS,2BAAsB;AAC/D;AACA,6DAA6D,0BAAgB;AAC7E,QAAQ,kBAAS;AACjB,QAAQ,mBAAU;AAClB,QAAQ,iBAAQ;AAChB,QAAQ,4BAAmB;AAC3B,QAAQ,8BAAsB,OAAO,kBAAS;AAC9C,QAAQ,8BAAsB,OAAO,mBAAU,EAAE,0CAAa;AAC9D,QAAQ,8BAAsB,OAAO,4BAAmB;AACxD,QAAQ,8BAAsB,OAAO,iBAAQ;AAC7C;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8BAAsB,OAAO,iBAAQ;AAC7C;AACA;AACA;AACA;AACA,YAAY,8BAAsB,OAAO,4BAAmB,eAAe,yBAAM;AACjF;AACA,6BAA6B,8BAAsB,OAAO,mBAAU;AACpE,sCAAsC,QAAQ;AAC9C;AACA;AACA,yBAAyB,yBAAM,eAAe,8BAAsB,OAAO,4BAAmB;AAC9F,gCAAgC,8BAAsB,OAAO,mBAAU;AACvE;AACA,2BAA2B,8BAAsB,OAAO,iBAAQ;AAChE;AACA;AACA;AACA;AACA;AACA,qDAAqD,0CAAa,0BAA0B,8BAAsB,OAAO,kBAAS;AAClI;AACA;AACA;AACA;AACA;AACA,oCAAoC,8BAAsB,OAAO,mBAAU;AAC3E;AACA;AACA,kBAAkB,oCAAO,CAAC,8BAAsB,OAAO,kBAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAS,kBAAkB,mBAAU,kBAAkB,iBAAQ,kBAAkB,4BAAmB;;;ACxIpG,IAAI,6BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,YAAI,EAAE,gBAAQ,EAAE,kBAAU;AACvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,YAAI;AACZ,QAAQ,gBAAQ;AAChB,QAAQ,6BAAsB,OAAO,gBAAQ;AAC7C,QAAQ,6BAAsB,OAAO,YAAI;AACzC;AACA;AACA,eAAe,6BAAsB,OAAO,YAAI;AAChD;AACA;AACA,eAAe,6BAAsB,OAAO,YAAI;AAChD;AACA;AACA,eAAe,6BAAsB,OAAO,YAAI;AAChD;AACA;AACA,eAAe,6BAAsB,OAAO,YAAI;AAChD;AACA;AACA,eAAe,6BAAsB,OAAO,gBAAQ;AACpD;AACA;AACA,eAAe,6BAAsB,OAAO,gBAAQ;AACpD;AACA;AACA,eAAe,6BAAsB,OAAO,gBAAQ;AACpD;AACA;AACA,eAAe,6BAAsB,OAAO,gBAAQ;AACpD;AACA;AACA,mBAAmB,6BAAsB,OAAO,gBAAQ;AACxD;AACA;AACA,YAAI,kBAAkB,gBAAQ;AACvB;AACP;AACA,QAAQ,kBAAU;AAClB,QAAQ,6BAAsB,OAAO,kBAAU;AAC/C;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,eAAe,6BAAsB,OAAO,kBAAU;AACtD;AACA;AACA,mBAAmB,6BAAsB,OAAO,kBAAU;AAC1D;AACA;AACA,kBAAU;AACH;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3HA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,aAAO,EAAE,iBAAW,EAAE,gBAAU,EAAE,YAAM,EAAE,YAAM,EAAE,eAAS,EAAE,iBAAW,EAAE,UAAI;AACxB;AACM;AAClB;AAC9C;AACO,MAAM,wBAAiB;AAC9B;AACA,QAAQ,aAAO;AACf,QAAQ,iBAAW;AACnB,QAAQ,gBAAU;AAClB,QAAQ,YAAM;AACd,QAAQ,YAAM;AACd,QAAQ,eAAS;AACjB,QAAQ,iBAAW;AACnB,QAAQ,UAAI;AACZ;AACA;AACA,QAAQ,2BAAsB,OAAO,aAAO;AAC5C,QAAQ,2BAAsB,OAAO,UAAI,EAAE,oBAAoB;AAC/D,QAAQ,2BAAsB,OAAO,iBAAW;AAChD,QAAQ,2BAAsB,OAAO,gBAAU,EAAE,mDAAsB;AACvE,QAAQ,2BAAsB,OAAO,YAAM,EAAE,2BAAsB,OAAO,YAAM;AAChF,QAAQ,2BAAsB,OAAO,iBAAW;AAChD,QAAQ,2BAAsB,OAAO,eAAS;AAC9C,QAAQ,2BAAsB,kBAAkB,kBAAa;AAC7D,QAAQ,2BAAsB;AAC9B;AACA;AACA,QAAQ,2BAAsB,OAAO,eAAS;AAC9C;AACA;AACA,QAAQ,2BAAsB,OAAO,aAAO,6BAA6B,2BAAsB;AAC/F,QAAQ,2BAAsB,OAAO,iBAAW;AAChD;AACA;AACA;AACA,QAAQ,2BAAsB,OAAO,aAAO,gCAAgC,2BAAsB;AAClG,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB,OAAO,iBAAW;AAChD;AACA;AACA,uBAAuB,2BAAsB,OAAO,aAAO;AAC3D;AACA,YAAY,2BAAsB,OAAO,aAAO;AAChD;AACA;AACA;AACA;AACA,QAAQ,2BAAsB,OAAO,gBAAU,EAAE,mDAAsB;AACvE;AACA;AACA,eAAe,2BAAsB,OAAO,iBAAW;AACvD;AACA;AACA,eAAe,2BAAsB,OAAO,iBAAW;AACvD;AACA;AACA,aAAa,+BAAE,CAAC,2BAAsB,OAAO,eAAS;AACtD;AACA;AACA,mBAAmB,2BAAsB,OAAO,UAAI;AACpD,kBAAkB,2BAAsB,OAAO,UAAI;AACnD,QAAQ,2BAAsB,OAAO,YAAM,EAAE,2BAAsB,OAAO,YAAM;AAChF,QAAQ,2BAAsB,OAAO,YAAM,EAAE,2BAAsB,OAAO,YAAM;AAChF,YAAY,2BAAsB,OAAO,iBAAW,iCAAiC,+BAAE;AACvF;AACA;AACA,QAAQ,2BAAsB,OAAO,iBAAW;AAChD;AACA,QAAQ,2BAAsB,OAAO,eAAS;AAC9C;AACA;AACA;AACA;AACA,uBAAuB,+BAAE;AACzB;AACA,SAAS;AACT,YAAY,+BAAE;AACd,YAAY,2BAAsB;AAClC,QAAQ,2BAAsB,OAAO,iBAAW;AAChD,QAAQ,2BAAsB,OAAO,YAAM;AAC3C,QAAQ,2BAAsB,OAAO,YAAM;AAC3C;AACA;AACA,eAAe,2BAAsB,OAAO,gBAAU,WAAW,2BAAsB,OAAO,YAAM,KAAK,2BAAsB,OAAO,gBAAU,KAAK,2BAAsB,OAAO,YAAM,KAAK,2BAAsB,OAAO,gBAAU;AACpO;AACA;AACA;AACA;AACA;AACA,aAAO,kBAAkB,iBAAW,kBAAkB,gBAAU,kBAAkB,YAAM,kBAAkB,YAAM,kBAAkB,eAAS,kBAAkB,iBAAW,kBAAkB,UAAI;;;ACvG9L,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,mFAAmF,eAAU;AACtF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAU;AAClB,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB,OAAO,eAAU;AAC/C,QAAQ,0BAAsB;AAC9B,QAAQ,0BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAAsB;AACjD,uCAAuC,0BAAsB,OAAO,eAAU;AAC9E,YAAY,0BAAsB;AAClC;AACA,iBAAiB,0BAAsB,mCAAmC,0BAAsB,OAAO,eAAU;AACjH,YAAY,0BAAsB;AAClC;AACA,yBAAyB,0BAAsB,4CAA4C,0BAAsB;AACjH,YAAY,0BAAsB;AAClC;AACA,QAAQ,0BAAsB;AAC9B,eAAe,0BAAsB;AACrC;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAAsB;AAChD,sCAAsC,0BAAsB,OAAO,eAAU;AAC7E,YAAY,0BAAsB;AAClC;AACA,iBAAiB,0BAAsB,mCAAmC,0BAAsB,OAAO,eAAU;AACjH,YAAY,0BAAsB;AAClC;AACA,yBAAyB,0BAAsB,4CAA4C,0BAAsB;AACjH,YAAY,0BAAsB;AAClC;AACA,QAAQ,0BAAsB;AAC9B,eAAe,0BAAsB;AACrC;AACA;AACA,+KAA+K,eAAU;AAClL;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5FA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,eAAS,EAAE,aAAO,6BAA6B,YAAM,EAAE,YAAM,EAAE,gBAAU,EAAE,WAAK;AACjB;AACU;AACC;AACsD;AACrF;AACgB;AACxD,MAAM,oBAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4CAAe;AACtC,uBAAuB,4CAAe;AACtC,oBAAoB,yCAAY;AAChC,oBAAoB,+CAAkB;AACtC;AACA;AACO;AACP;AACA,4BAA4B,sDAAsD;AAClF;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC;AACA;AACO,MAAM,uBAAgB,SAAS,UAAU;AAChD;AACA,0DAA0D,oBAAa;AACvE,QAAQ,eAAS;AACjB,QAAQ,aAAO;AACf;AACA;AACA;AACA,QAAQ,YAAM;AACd,QAAQ,YAAM;AACd,QAAQ,gBAAU;AAClB,QAAQ,WAAK;AACb;AACA;AACA,QAAQ,2BAAsB,OAAO,aAAO;AAC5C,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB,OAAO,YAAM;AAC3C,QAAQ,2BAAsB,OAAO,YAAM;AAC3C,QAAQ,2BAAsB,OAAO,gBAAU;AAC/C,QAAQ,2BAAsB,OAAO,WAAK;AAC1C,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB,OAAO,eAAS;AAC9C;AACA;AACA;AACA,QAAQ,2BAAsB,OAAO,eAAS,MAAM,wBAAiB;AACrE,QAAQ,2BAAsB,OAAO,eAAS;AAC9C,QAAQ,2BAAsB,OAAO,eAAS;AAC9C;AACA;AACA;AACA;AACA;AACA,YAAY,2BAAsB,OAAO,eAAS;AAClD,YAAY,2BAAsB,OAAO,eAAS;AAClD;AACA;AACA;AACA;AACA;AACA,QAAQ,2BAAsB,OAAO,WAAK;AAC1C,QAAQ,2BAAsB,OAAO,aAAO;AAC5C,QAAQ,2BAAsB,gBAAgB,8CAAqB;AACnE,QAAQ,2BAAsB,qBAAqB,oBAAoB;AACvE;AACA;AACA,aAAa,+BAAE,CAAC,2BAAsB;AACtC;AACA;AACA;AACA,4BAA4B,2BAAsB;AAClD;AACA;AACA;AACA,8BAA8B,2BAAsB;AACpD;AACA,YAAY,2BAAsB;AAClC,2BAA2B,2BAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAAsB;AACjD,YAAY,2BAAsB,OAAO,YAAM;AAC/C,YAAY,2BAAsB,OAAO,YAAM;AAC/C;AACA;AACA;AACA,aAAa,gCAAG,CAAC,2BAAsB,iBAAiB,2BAAsB,OAAO,aAAO;AAC5F;AACA;AACA;AACA,QAAQ,2BAAsB;AAC9B;AACA,2BAA2B,2BAAsB,OAAO,aAAO,GAAG,2BAAsB;AACxF;AACA;AACA,8BAA8B,2BAAsB,OAAO,aAAO,GAAG,2BAAsB;AAC3F;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,yBAAM;AAC7B,qBAAqB,2BAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAAsB,OAAO,YAAM,KAAK,2BAAsB,OAAO,gBAAU,kBAAkB,2BAAsB,OAAO,YAAM,KAAK,2BAAsB,OAAO,gBAAU;AAC5M;AACA;AACA,gCAAgC,2BAAsB,OAAO,WAAK,sBAAsB,2BAAsB,OAAO,WAAK;AAC1H,gCAAgC,2BAAsB,OAAO,WAAK,qBAAqB,2BAAsB,OAAO,WAAK;AACzH,gBAAgB,0CAAa,cAAc,0CAAa;AACxD;AACA;AACA,wCAAwC,2BAAsB,OAAO,WAAK;AAC1E;AACA;AACA;AACA,eAAS,kBAAkB,aAAO,6FAA6F,YAAM,kBAAkB,YAAM,kBAAkB,gBAAU,kBAAkB,WAAK;;;ACnKhN,IAAI,YAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,IAAI,yBAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,eAAW,EAAE,WAAO,EAAE,YAAQ;AACiC;AAC8E;AACnE;AACC;AACxE,MAAM,gBAAW;AACxB;AACA,QAAQ,eAAW;AACnB,QAAQ,yBAAsB,OAAO,eAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+BAAE,UAAU,qCAAQ;AAChC;AACA;AACA,2BAA2B,yBAAsB,OAAO,eAAW;AACnE;AACA;AACA;AACA;AACA,sBAAsB,+CAAkB;AACxC;AACA,uBAAuB,4CAAe,eAAe,yBAAsB,OAAO,eAAW;AAC7F,uBAAuB,yCAAY;AACnC;AACA;AACA;AACA,eAAW;AACJ;AACP;AACA,QAAQ,WAAO;AACf,QAAQ,yBAAsB,OAAO,WAAO;AAC5C,4BAA4B,yBAAsB,OAAO,WAAO,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAc,iCAAiC,yBAAsB,OAAO,WAAO;AACtG;AACA;AACA,WAAO;AACA,MAAM,mBAAc,SAAS,UAAU;AAC9C;AACA,wDAAwD,gBAAW;AACnE,QAAQ,YAAQ;AAChB,QAAQ,yBAAsB,OAAO,YAAQ;AAC7C;AACA;AACA;AACA;AACA,QAAQ,yBAAsB,OAAO,YAAQ,eAAe,yBAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAM,OAAO,yBAAsB,OAAO,YAAQ;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAAE;AACf,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAS;AACxB;AACA,gBAAgB,+BAAE;AAClB;AACA,0CAA0C,yBAAM;AAChD;AACA;AACA;AACA;AACA,oBAAoB,gCAAG;AACvB;AACA,kCAAkC,8CAAqB;AACvD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,+BAAE;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAAE;AAClB;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,+BAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAM;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,+BAAE;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAAE,uCAAuC,iCAAc,CAAC;AAC7E;AACA;AACA;AACA,eAAe,6CAAgB;AAC/B;AACA,SAAS;AACT;AACA;AACA,YAAQ;;;ACtLR,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,aAAO,EAAE,cAAQ;AAC8C;AACJ;AACoD;AAC1B;AAChB;AAClE,MAAM,oBAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,qBAAqB,4CAAe;AACpC;AACA;AACO;AACP;AACA,QAAQ,aAAO;AACf,QAAQ,2BAAsB,OAAO,aAAO;AAC5C,4BAA4B,2BAAsB,OAAO,aAAO,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC;AACA;AACA,aAAO;AACA,MAAM,uBAAgB,SAAS,UAAU;AAChD;AACA,0DAA0D,oBAAa;AACvE,QAAQ,cAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2BAAsB,OAAO,cAAQ;AAC7C,QAAQ,2BAAsB,kCAAkC,uBAAuB;AACvF,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B;AACA;AACA,QAAQ,2BAAsB,OAAO,cAAQ,oBAAoB,yBAAM;AACvE,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB,qBAAqB,4CAAe;AAClE,QAAQ,2BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAAsB,OAAO,cAAQ;AACjD,kCAAkC,yBAAM,SAAS,2BAAsB,OAAO,cAAQ;AACtF,YAAY,2BAAsB,OAAO,cAAQ;AACjD;AACA,QAAQ,2BAAsB;AAC9B,QAAQ,2BAAsB;AAC9B;AACA;AACA,QAAQ,2BAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA,YAAY,2BAAsB;AAClC;AACA;AACA;AACA;AACA,+DAA+D,2BAAsB,sCAAsC,2BAAsB;AACjJ;AACA,qCAAqC,2BAAsB;AAC3D,YAAY,2BAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAAsB;AACnC;AACA;AACA;AACA,aAAa,+BAAE,CAAC,2BAAsB;AACtC,4DAA4D,2BAAsB;AAClF;AACA;AACA,YAAY,2BAAsB,uBAAuB,2BAAsB;AAC/E;AACA;AACA,gCAAgC,yCAAgB,KAAK,2BAAsB;AAC3E;AACA,wBAAwB,2BAAsB;AAC9C,wBAAwB,2BAAsB;AAC9C;AACA;AACA;AACA,oBAAoB,2BAAsB,mBAAmB,2BAAsB;AACnF,oBAAoB,2BAAsB;AAC1C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAAsB;AAClC,yBAAyB,2BAAsB;AAC/C,YAAY,2BAAsB;AAClC;AACA,QAAQ,2BAAsB;AAC9B;AACA,YAAY,2BAAsB;AAClC,SAAS;AACT;AACA;AACA,cAAQ;;;ACrMR,IAAI,kCAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kCAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAO;AAC+C;AACJ;AACqC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,yBAAkB;AAC/B;AACA,yBAAyB,+BAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC;AACA;AACO,MAAM,oBAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAkB;AACxC,sBAAsB,+CAAkB;AACxC,wBAAwB,+BAAE;AAC1B;AACA;AACO,MAAM,uBAAgB,SAAS,UAAU;AAChD;AACA,0DAA0D,oBAAa;AACvE;AACA,QAAQ,oBAAO;AACf;AACA;AACA,QAAQ,kCAAsB;AAC9B,QAAQ,kCAAsB,OAAO,oBAAO;AAC5C,QAAQ,kCAAsB;AAC9B;AACA;AACA,+CAA+C,kCAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kCAAsB;AACxE;AACA;AACA,aAAa,gCAAG,CAAC,kCAAsB,OAAO,oBAAO,GAAG,kCAAsB;AAC9E;AACA;AACA;AACA,iBAAiB,yCAAY,CAAC,kCAAsB,OAAO,oBAAO,KAAK,kCAAsB;AAC7F;AACA,mBAAmB,kCAAsB;AACzC;AACA;AACA,QAAQ,kCAAsB;AAC9B;AACA;AACA,SAAS;AACT,uBAAuB,yBAAM;AAC7B;AACA;AACA;AACA,oBAAoB,kCAAsB,OAAO,oBAAO;AACxD;AACA,oBAAoB,kCAAsB;AAC1C;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,kCAAsB,OAAO,oBAAO;AAC5C,YAAY,+BAAE,CAAC,kCAAsB,OAAO,oBAAO;AACnD,YAAY,kCAAsB,gBAAgB,+BAAE,gEAAgE,kCAAsB,OAAO,oBAAO;AACxJ;AACA;AACA;AACA,yBAAyB,oBAAO;;;ACrGhC,IAAI,kDAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kDAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,qBAAqB,kCAAS,aAAa,gBAAI;AACS;AACE;AACF;AACxD;AACO,MAAM,oCAAuB;AACpC;AACA;AACA;AACA,QAAQ,kCAAS;AACjB;AACA,QAAQ,gBAAI;AACZ,QAAQ,kDAAsB,OAAO,gBAAI,EAAE,oBAAoB;AAC/D,QAAQ,kDAAsB,4BAA4B,wBAAiB;AAC3E,QAAQ,kDAAsB;AAC9B,QAAQ,kDAAsB;AAC9B,QAAQ,kDAAsB,OAAO,kCAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAsB;AAC9B;AACA;AACA,QAAQ,kDAAsB;AAC9B;AACA;AACA,QAAQ,kDAAsB,OAAO,kCAAS;AAC9C;AACA;AACA,QAAQ,kDAAsB,OAAO,gBAAI,EAAE,oBAAoB;AAC/D,QAAQ,kDAAsB;AAC9B;AACA;AACA,eAAe,kDAAsB;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAsB;AAC9B;AACA;AACA,eAAe,kDAAsB,2BAA2B,kDAAsB;AACtF;AACA;AACA,aAAa,gCAAG,CAAC,kDAAsB,mBAAmB,kDAAsB,OAAO,kCAAS;AAChG;AACA;AACA,YAAY,kDAAsB,OAAO,kCAAS;AAClD,YAAY,kDAAsB,OAAO,kCAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAAa;AAC5B;AACA;AACA;AACA,oCAAoC,kDAAsB,OAAO,gBAAI;AACrE,oCAAoC,kDAAsB,OAAO,gBAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iCAAiC,kCAAS,6CAA6C,gBAAI;;;ACzHzB;AAC3D;AACP;AACA;AACA,uBAAuB,wBAAmB;AAC1C;AACA,mBAAmB,yBAAoB;AACvC;AACA;AACA,MAAM,uBAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa,gCAAG;AAChB;AACA;AACA;AACA;AACA,oBAAoB,+BAAE;AACtB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACO,MAAM,yBAAoB,SAAS,uBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,wBAAmB,SAAS,uBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B,EAAE;AACjF,qEAAqE,2BAA2B,EAAE;AAClG;AACA;AACA,gBAAgB,gCAAG;AACnB,8EAA8E,mBAAmB,EAAE;AACnG,sEAAsE,mBAAmB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpHA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAS,UAAU,iBAAQ,gBAAgB,cAAK,YAAY,qBAAY;AACT;AACW;AACsD;AACrD;AACa;AACb;AACvB;AACxD;AACO,MAAM,0BAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B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ACkD;AACS;AACD;AAC3B;AACnC,MAAM,4BAAoB;AACjC;AACA,QAAQ,cAAO;AACf,QAAQ,4BAAsB,OAAO,cAAO,MAAM,qBAAc;AAChE;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,4BAA4B,gCAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gCAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,4BAA4B,gCAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,4BAA4B,gCAAa;AACzC;AACA;AACA,mBAAmB,mBAAmB,UAAU,4BAAsB,OAAO,cAAO;AACpF;AACA;AACA,mBAAmB,mBAAmB,SAAS,4BAAsB,OAAO,cAAO;AACnF;AACA;AACA,mBAAmB,oBAAoB,WAAW,4BAAsB,OAAO,cAAO;AACtF;AACA;AACA,mBAAmB,oBAAoB,cAAc,4BAAsB,OAAO,cAAO;AACzF;AACA;AACA,mBAAmB,oBAAoB,UAAU,4BAAsB,OAAO,cAAO;AACrF;AACA;AACA,mBAAmB,oBAAoB,YAAY,4BAAsB,OAAO,cAAO;AACvF;AACA;AACA,mBAAmB,oBAAoB,YAAY,4BAAsB,OAAO,cAAO;AACvF;AACA;AACA;AACA,eAAe,OAAO,gCAAgC,OAAO;AAC7D,eAAe,OAAO;AACtB;AACA;AACA,QAAQ,4BAAsB,OAAO,cAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,wBAAwB,MAAM,EAAE,+CAA+C;AAC/E;AACA;AACA;AACA,cAAO;;;AC/KP,IAAI,+BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACiE;AACW;AACf;AACZ;AAC1C,MAAM,gCAAqB;AAClC;AACA;AACA;AACA;AACA;AACA,QAAQ,+BAAsB,aAAa,kCAAgB;AAC3D;AACA;AACA;AACA,2BAA2B,4BAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAAE;AACvB;AACA;AACA;AACA;AACA,qBAAqB,+BAAE;AACvB;AACA,mDAAmD,eAAQ;AAC3D;AACA;AACA,qBAAqB,+BAAE;AACvB;AACA,uDAAuD,eAAQ;AAC/D;AACA;AACA,qBAAqB,+BAAE;AACvB;AACA,uDAAuD,eAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,eAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAQ;AACxD;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAQ;AAC3D;AACA,gBAAgB,+BAAsB;AACtC;AACA;AACA;AACA,eAAe,+BAAE,SAAS,+BAAE;AAC5B;AACA;AACA,eAAe,+BAAE,SAAS,+BAAE,iBAAiB,+BAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzNqD;AACD;AACG;AACA;AACS;AACzD;AACP;AACA;AACA;AACA,YAAY,4BAAsB,EAAE,mBAAmB;AACvD,YAAY,4BAAsB,EAAE,mBAAmB;AACvD,YAAY,0BAAqB,GAAG;AACpC,YAAY,0BAAoB;AAChC,YAAY,gCAAqB,GAAG;AACpC;AACA;;;;;;;;;;;;;;;;ACfA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvHkE;AAC3D,MAAM,mCAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;;;;;;;;;AClBA,IAAI,+BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACoE;AACnC;AAC1B,MAAM,wBAAa;AAC1B;AACA;AACA;AACA,QAAQ,+BAAsB;AAC9B,QAAQ,+BAAsB;AAC9B;AACA;AACA,qBAAqB,+BAAE;AACvB,oBAAoB,+BAAsB;AAC1C,oBAAoB,+BAAsB;AAC1C,8BAA8B,+BAAa;AAC3C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+BAAsB;AAC9B,QAAQ,+BAAsB;AAC9B;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,oBAAoB,+BAAsB;AAC1C;AACA,YAAY,+BAAsB;AAClC,YAAY,+BAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAAsB;AACrC;AACA;AACA,eAAe,+BAAE;AACjB;AACA;AACA,eAAe,+BAAsB;AACrC;AACA;AACA,eAAe,+BAAsB;AACrC;AACA;AACA,eAAe,+BAAE,QAAQ,+BAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAiB,mBAAmB,IAAI;AAC9D;AACA,QAAQ,+BAAsB;AAC9B;AACA;AACA,QAAQ,+BAAsB;AAC9B,QAAQ,+BAAsB;AAC9B;AACA;AACA,aAAa,+BAAE;AACf,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;;;ACxFA,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACoD;AACZ;AACjC,MAAM,qBAAe;AAC5B;AACA;AACA;AACA,QAAQ,0BAAsB,mBAAmB,wBAAa;AAC9D,QAAQ,0BAAsB;AAC9B;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,YAAY,0BAAsB;AAClC;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B;AACA;AACA;AACA;AACA,mBAAmB,0BAAsB;AACzC;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B;AACA;AACA;AACA,eAAe,+BAAE,QAAQ,0BAAsB;AAC/C;AACA;AACA,aAAa,+BAAE;AACf;AACA;AACA,YAAY,0BAAsB;AAClC;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAAsB;AAC9B;AACA;AACA,YAAY,0BAAsB,gCAAgC,0BAAsB;AACxF,YAAY,0BAAsB,sBAAsB,0BAAsB;AAC9E;AACA;AACA;AACA;;;;;;AChEA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,IAAI,6BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6BAAsB,IAAI,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACwC;AACe;AACvD,MAAM,wBAAe;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAAE,aAAa,+BAAE;AACjC;AACA;AACO,MAAM,+BAAsB,SAAS,wBAAe;AAC3D;AACA;AACA;AACA;AACA,QAAQ,6BAAsB;AAC9B,QAAQ,6BAAsB,aAAa,kCAAgB;AAC3D;AACA;AACA;AACA,iBAAiB,+BAAE;AACnB,gBAAgB,6BAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAAsB;AACpD;AACA;AACA,oBAAoB,6BAAsB;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACO,MAAM,+BAAsB,SAAS,wBAAe;AAC3D;AACA;AACA;AACA,QAAQ,6BAAsB;AAC9B;AACA;AACA;AACA,iBAAiB,+BAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6BAAsB;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2BAA2B,+BAAsB;AACjD;AACA,2BAA2B,+BAAsB;AACjD;AACA;AACA;;;AC3IA,IAAI,iBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACO;AACP;AACA,eAAe,iBAAS;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;;;ACjBA,IAAI,WAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EA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A;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA,aAAa,gCAAG;AAChB,sBAAsB,+BAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA;AACA,eAAe,WAAS;AACxB,iBAAiB,+BAAE;AACnB,0BAA0B,+BAAa;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,aAAa,gCAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAG;AAChB,sBAAsB,+BAAa;AACnC;AACA,2BAA2B,mBAAmB;AAC9C,sBAAsB,0BAA0B;AAChD,mBAAmB,eAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY,mBAAmB;AACpF;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAsB;AACxC,eAAe,wBAAsB,sDAAsD,wBAAsB;AACjH;AACA;AACA;AACO,MAAM,sBAAkB;AAC/B;AACA;AACA,eAAe,+BAAE,cAAc,kBAAc,cAAc,eAAW,KAAK,+BAAsB,KAAK,mBAAmB;AACzH;AACA;AACO;AACP;AACA;AACA;AACA,QAAQ,wBAAsB;AAC9B,QAAQ,wBAAsB;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,wBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wBAAsB;AAC9B;AACA;AACA,aAAa,wBAAsB;AACnC;AACA;AACA,YAAY,wBAAsB;AAClC,YAAY,wBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAsB;AACrC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","file":"vendors~index.js","sourcesContent":["import { ArgumentError, RegisterElementError } from \"../models/errors\";\r\nimport { COMPONENTS_COUNTER, CUID_ATTRIBUTE } from \"./statics\";\r\n/**\r\n * Checks if value is defined an is not null\r\n * Additionally with type check it can check value if it is not empty string or collection or object\r\n *\r\n * @param val - value\r\n * @param typecheck - default true - additional check whether value is not empty (string, collection, object)\r\n * @returns whether value passed all conditions\r\n */\r\nexport function is(val, typecheck = true) {\r\n    if (typeof val !== 'undefined' && val !== null) {\r\n        if (!typecheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            return !isEmpty(val);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Checks if value is empty string, array or object\r\n *\r\n *\r\n * @param val - value\r\n * @returns whether value passed all conditions\r\n */\r\nexport function isEmpty(val) {\r\n    if (typeof val === \"string\") {\r\n        return val.length === 0;\r\n    }\r\n    if (typeof val === \"boolean\") {\r\n        return val;\r\n    }\r\n    else if (Array.isArray(val)) {\r\n        return val.length === 0;\r\n    }\r\n    return false;\r\n}\r\nexport function getName(prefix, name) {\r\n    if (!is(prefix) || !is(name)) {\r\n        throw new ArgumentError(\"Missing argument value\");\r\n    }\r\n    return `${prefix}-${name}`;\r\n}\r\nexport function sleep(timeout) {\r\n    return new Promise(resolve => setTimeout(() => {\r\n        resolve(true);\r\n    }, timeout));\r\n}\r\n/**\r\n * Creates proper html element from given string\r\n * @param htmlString - string containing html\r\n */\r\nexport function createElementFromString(htmlString) {\r\n    if (!is(htmlString)) {\r\n        return null;\r\n    }\r\n    let template = document.createElement('template');\r\n    template.innerHTML = htmlString;\r\n    return template.content.children.length > 0 ? template.content.children[0] : null;\r\n}\r\nexport function getMatchingAttribute(element, attributes) {\r\n    let attr = null;\r\n    let len = attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        let attribute = attributes[i];\r\n        if (element.hasAttribute(attribute)) {\r\n            attr = attribute;\r\n            break;\r\n        }\r\n    }\r\n    return attr;\r\n}\r\nexport function getMatchingAttributes(element, attributes) {\r\n    if (!element || !is(element.hasAttribute)) {\r\n        return [];\r\n    }\r\n    return attributes.filter(a => {\r\n        return element.hasAttribute(a);\r\n    });\r\n}\r\nexport function getRangeValue(value, min, max) {\r\n    if (value < min) {\r\n        return min;\r\n    }\r\n    else if (value > max) {\r\n        return max;\r\n    }\r\n    return value;\r\n}\r\nexport function getRangeValueOrDefault(value, min, max, def) {\r\n    if (value === null || typeof value === 'undefined' || isNaN(value)) {\r\n        return def;\r\n    }\r\n    return getRangeValue(value, min, max);\r\n}\r\nexport function increaseValue(value, amount) {\r\n    return amount < 0 || amount > 1 ? 0 : value + (value * amount);\r\n}\r\nexport function decreaseValue(value, amount) {\r\n    return amount < 0 || amount > 1 ? 0 : value - (value * amount);\r\n}\r\nexport function clone(object) {\r\n    if (!is(object)) {\r\n        return null;\r\n    }\r\n    return Object.assign({}, object);\r\n}\r\nexport function getSingleColorRatio(first, second, max) {\r\n    return Math.abs(((first - second) / max) * 100);\r\n}\r\n/**\r\n * Creates string containg css selector for array of attributes\r\n * @param attributes - attributes values\r\n */\r\nexport function joinAttributesForQuery(attributes) {\r\n    if (!is(attributes)) {\r\n        return \"\";\r\n    }\r\n    return `[${attributes.join('],[')}]`;\r\n}\r\n/**\r\n * Checks light system light mode\r\n * @returns Light Mode - dark/light\r\n */\r\nexport function getSystemLightMode() {\r\n    return window.matchMedia &&\r\n        window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n}\r\n/**\r\n * Check print mode in the browser window\r\n * @returns true if window is displayed in print mode\r\n */\r\nexport function getSystemPrintMode() {\r\n    return window.matchMedia &&\r\n        window.matchMedia('print').matches;\r\n}\r\n/**\r\n * Verifies whether attributes exist and have some values\r\n * @param attributes attributes list\r\n */\r\nexport function are(...attributes) {\r\n    if (!is(attributes)) {\r\n        return false;\r\n    }\r\n    let c = attributes.length;\r\n    for (let i = 0; i < c; i++) {\r\n        if (!is(attributes[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function calcWindowSize(width) {\r\n    if (width <= 640) {\r\n        return 'small';\r\n    }\r\n    else if (width > 640 && width <= 960) {\r\n        return \"medium\";\r\n    }\r\n    else if (width > 960 && width <= 1200) {\r\n        return \"large\";\r\n    }\r\n    return 'xlarge';\r\n}\r\nexport function calcWindowSize2(width) {\r\n    let size = \"none\";\r\n    if (width >= 640) {\r\n        size = 'small';\r\n    }\r\n    if (width >= 960) {\r\n        size = \"medium\";\r\n    }\r\n    if (width >= 1200) {\r\n        size = \"large\";\r\n    }\r\n    if (width >= 1600) {\r\n        size = 'xlarge';\r\n    }\r\n    return size;\r\n}\r\n/**\r\n * Creates object from string.\r\n * Supported syntaxes are:\r\n * - JSON\r\n * - single value\r\n * - key:value,value;key=value\r\n *\r\n * @param attribute - attribute value\r\n */\r\nexport function parseAttributeString(attribute) {\r\n    let ret = {};\r\n    if (!is(attribute)) {\r\n        return ret;\r\n    }\r\n    //@ts-ignore - null already checked\r\n    ret = parseJsonString(attribute.trim());\r\n    if (!is(ret)) {\r\n        //@ts-ignore - null already checked\r\n        if (!attribute.includes(';') && !attribute.includes(':')) {\r\n            ret = attribute;\r\n        }\r\n        else {\r\n            ret = {};\r\n            //@ts-ignore - null already checked\r\n            attribute.split(';').forEach(val => {\r\n                let sp = splitColon(val);\r\n                //let sp = val.split(':')\r\n                let len = sp.length;\r\n                let tag = undefined;\r\n                let value = \"\";\r\n                if (len < 2) {\r\n                    return;\r\n                }\r\n                tag = sp[0].trim();\r\n                value = sp[1].trim();\r\n                if (tag)\r\n                    ret[tag] = value.replace('U+0003B', ';');\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Creates object from JSON string\r\n* String must start with { and end with }\r\n *\r\n * @param attribute - attribute value\r\n * @returns object if string passes test, null otherwise\r\n */\r\nexport function parseJsonString(attribute) {\r\n    let out = null;\r\n    if (is(attribute) && attribute.startsWith('{') && attribute.endsWith('}')) {\r\n        try {\r\n            out = jsonify(attribute);\r\n        }\r\n        catch (e) {\r\n            console.error(prepLogString(\"An exception occured\", 'Functions', 'parseJsonString'), e);\r\n        }\r\n        return out;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Creates object from JSON string\r\n * @param attribute - JSON string\r\n */\r\nexport function jsonify(attribute) {\r\n    return attribute && attribute.length > 0 ? JSON.parse(attribute) : {};\r\n}\r\nexport function getOffsetTop(element) {\r\n    if (!is(element)) {\r\n        return -1;\r\n    }\r\n    let val = element.offsetTop - parseInt(getStyleValue(element, 'margin-top')) - parseInt(getStyleValue(element, 'padding-top')) - parseInt(getStyleValue(element, 'border-top-width'));\r\n    return val < 0 ? element.offsetTop : val;\r\n}\r\nexport function getOffsetLeft(element) {\r\n    if (!is(element)) {\r\n        return -1;\r\n    }\r\n    let val = element.offsetLeft - parseInt(getStyleValue(element, 'margin-left')) - parseInt(getStyleValue(element, 'padding-left')) - parseInt(getStyleValue(element, 'border-left-width'));\r\n    return val < 0 ? element.offsetLeft : val;\r\n}\r\nexport function getIntOrDefault(value, def) {\r\n    let integer = parseInt(value);\r\n    return isNaN(integer) ? def : integer;\r\n}\r\nexport function getStyleValue(target, property) {\r\n    if (!is(target) || !is(property)) {\r\n        return null;\r\n    }\r\n    if (target.currentStyle) {\r\n        return target.currentStyle[property];\r\n    }\r\n    else if (window.getComputedStyle) {\r\n        return window.getComputedStyle(target, null).getPropertyValue(property);\r\n    }\r\n    return null;\r\n}\r\nexport function prepLogString(message, component, functionName) {\r\n    return `[${new Date().toLocaleString()}][${component !== null && component !== void 0 ? component : \"-\"}][${functionName !== null && functionName !== void 0 ? functionName : '-'}][${message}]`;\r\n}\r\nexport function isInRange(value, min, max) {\r\n    return is(value) && value >= min && value <= max;\r\n}\r\nexport function getActiveClass(prefix) {\r\n    return `${prefix !== null && prefix !== void 0 ? prefix : \"\"}-active`;\r\n}\r\nexport function parseAttribute(element, attribute) {\r\n    return are(element, attribute) ? parseAttributeString(element.getAttribute(attribute)) : null;\r\n}\r\n/**\r\n *  Checks whether string value contains synonym of true\r\n * @param value - string to check\r\n */\r\nexport function isStringTrue(value) {\r\n    return is(value) ? ['y', 't', 'true', 'yes'].includes(value.toLowerCase()) : false;\r\n}\r\nexport function boolStringOrDefault(prop, def) {\r\n    return is(prop) ? isStringTrue(prop) : def;\r\n}\r\nexport function getStringOrDefault(value, def) {\r\n    return is(value) ? value.toLowerCase() : def;\r\n}\r\n/**\r\n * Checks whether device supports touch\r\n */\r\nexport function isTouchSupported() {\r\n    return ('ontouchstart' in window) ||\r\n        (navigator.maxTouchPoints > 0) ||\r\n        (navigator.msMaxTouchPoints > 0);\r\n}\r\n/**\r\n * Checks whether value is type of string\r\n * @param {any} value - value to be checked\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * Replaces mask {prefix} with actual value in the string\r\n * @param {string} value - text containg a mask\r\n * @param {string} prefix - value to be put in place of mask\r\n */\r\nexport function replacePrefix(value, prefix) {\r\n    return !is(value) ? value : value.replace(\"{prefix}\", prefix !== null && prefix !== void 0 ? prefix : \"\");\r\n}\r\n/**\r\n * Generates identifier for Cui element\r\n *\r\n * @param element - Cui element selector\r\n * @returns generated identifier\r\n */\r\nexport function generateCUID(element) {\r\n    let starter = is(element) ? element : \"cui-element\";\r\n    return `${starter}-${COMPONENTS_COUNTER.next().value}`;\r\n}\r\n/**\r\n * Generates random string\r\n */\r\nexport function generateRandomString() {\r\n    let rand = getRandomInt(1, 1000);\r\n    let rand2 = getRandomInt(1, 100);\r\n    return `${Math.floor(Math.random() * rand2)}-${Math.floor(rand)}`;\r\n}\r\n/**\r\n * Generates random integer\r\n * @param min - min number\r\n * @param max - max number\r\n * @returns random integer\r\n */\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n/**\r\n * Registers Element as Cui element, initializes handlers, sets component style to document header and sets $cuid\r\n * @param {any} node - document node\r\n * @param {ICuiComponent[]} components -supported components array\r\n * @param {string[]} attributes - supported attributes array\r\n * @param {CuiUtils} utils - Cui Utils instance\r\n */\r\nexport function registerCuiElement(node, components, attributes, utils) {\r\n    let element = node;\r\n    element.$handlers = {};\r\n    let matching = getMatchingAttributes(node, attributes);\r\n    if (is(matching)) {\r\n        element.$cuid = node.hasAttribute(CUID_ATTRIBUTE) ? node.getAttribute(CUID_ATTRIBUTE) : generateCUID(node.tagName);\r\n        node.setAttribute(CUID_ATTRIBUTE, element.$cuid);\r\n        matching.forEach(match => {\r\n            let component = components.find(c => { return c.attribute === match; });\r\n            if (!is(component)) {\r\n                return;\r\n            }\r\n            try {\r\n                //@ts-ignore - component already checked agains undefined\r\n                utils.styleAppender.append(component.getStyle());\r\n                //@ts-ignore - component already checked agains undefined\r\n                let handler = component.get(node, utils);\r\n                //@ts-ignore - component already checked agains undefined\r\n                element.$handlers[component.attribute] = handler;\r\n                //@ts-ignore - component already checked agains undefined\r\n                element.$handlers[component.attribute].handle(parseAttribute(node, component.attribute));\r\n            }\r\n            catch (e) {\r\n                let attr = matching ? matching.join(\", \") : \"\";\r\n                throw new RegisterElementError(`An error occured during [${attr}] initialization: ${e.message}`);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport function addCuiArgument(element, cuiArg, args) {\r\n    if (!are(cuiArg, args, element)) {\r\n        return false;\r\n    }\r\n    if (element.hasAttribute(cuiArg)) {\r\n        return false;\r\n    }\r\n    let argArr = [];\r\n    enumerateObject(args, (arg, value) => {\r\n        argArr.push(`${arg}: ${value}`);\r\n    });\r\n    element.setAttribute(cuiArg, argArr.join(\"; \"));\r\n    return true;\r\n}\r\nexport function* counter() {\r\n    let idx = 0;\r\n    while (true) {\r\n        let reset = yield idx++;\r\n        if (reset || idx > 200000) {\r\n            idx = 0;\r\n        }\r\n    }\r\n}\r\nexport function getHandlerExtendingOrNull(target, fName) {\r\n    if (!is(target.$handlers)) {\r\n        return null;\r\n    }\r\n    for (let handler in target.$handlers) {\r\n        if (target.$handlers.hasOwnProperty(handler)) {\r\n            let h = target.$handlers[handler];\r\n            if (hasFunction(h, fName))\r\n                return h;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks whether property exists on the object and it is a function\r\n * @param obj - object\r\n * @param fName - property name\r\n */\r\nexport function hasFunction(obj, fName) {\r\n    return is(obj[fName]) && typeof obj[fName] === 'function';\r\n}\r\n/**\r\n * Gets closest parent element which is a cUI element\r\n * @param element\r\n */\r\nexport function getParentCuiElement(element) {\r\n    if (!is(element)) {\r\n        return undefined;\r\n    }\r\n    let parent = element.parentElement;\r\n    return is(parent) && is(parent.$cuid) ? parent : getParentCuiElement(parent);\r\n}\r\n/**\r\n * Calculates element height by calculating childerns heights\r\n * @param element\r\n */\r\nexport function getChildrenHeight(element) {\r\n    let height = 0;\r\n    if (!element) {\r\n        return -1;\r\n    }\r\n    Array.from(element.children).forEach((child) => {\r\n        height += child.getBoundingClientRect().height;\r\n    });\r\n    return height > 0 ? height + 4 : height;\r\n}\r\nexport function enumerateObject(object, callback) {\r\n    if (!are(object, callback)) {\r\n        return;\r\n    }\r\n    for (let prop in object) {\r\n        if (object.hasOwnProperty(prop)) {\r\n            callback(prop, object[prop]);\r\n        }\r\n    }\r\n}\r\nexport function round(value, decimalPlaces) {\r\n    const multiplier = Math.pow(10, decimalPlaces);\r\n    return Math.floor(value) / multiplier;\r\n}\r\nexport function calculateNextIndex(val, currentIndex, totalLength) {\r\n    let idx = -1;\r\n    switch (val) {\r\n        case 'prev':\r\n            idx = currentIndex <= 0 ? totalLength - 1 : currentIndex - 1;\r\n            break;\r\n        case 'next':\r\n            idx = currentIndex < totalLength - 1 ? currentIndex + 1 : 0;\r\n            break;\r\n        case 'first':\r\n            idx = 0;\r\n            break;\r\n        case 'last':\r\n            idx = totalLength - 1;\r\n        default:\r\n            idx = getIntOrDefault(val, -1);\r\n            break;\r\n    }\r\n    return idx;\r\n}\r\nexport function getFirstMatching(array, callback) {\r\n    let count = array.length;\r\n    if (!array || count === 0) {\r\n        return undefined;\r\n    }\r\n    for (let idx = 0; idx < count; idx++) {\r\n        if (callback(array[idx], idx)) {\r\n            return array[idx];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function mapObject(input, callback) {\r\n    return callback(input);\r\n}\r\nexport function mapObjectArray(input, callback) {\r\n    return input.map((item) => {\r\n        return mapObject(item, callback);\r\n    });\r\n}\r\n/**\r\n * Delays callback execution by specific time. Callback cannot be called again until previous execution finishes or was cancelled\r\n * @param callback - callback to execute\r\n * @param delayTime - time in ms that execution shall be delayed by\r\n * @returns Cancel callback\r\n */\r\nexport function delay(callback, delayTime) {\r\n    if (!are(callback, delayTime)) {\r\n        throw new Error(\"[delay]: Input arguments are not correct\");\r\n    }\r\n    let id = null;\r\n    return function (...args) {\r\n        if (id === null) {\r\n            id = setTimeout(() => {\r\n                callback(...args);\r\n                id = null;\r\n            }, delayTime);\r\n        }\r\n        return function () {\r\n            if (id !== null) {\r\n                clearTimeout(id);\r\n                id = null;\r\n            }\r\n        };\r\n    };\r\n}\r\nexport function splitColon(text) {\r\n    let ret = [];\r\n    if (!is(text)) {\r\n        return ret;\r\n    }\r\n    let split = text.split(\":\");\r\n    if (split.length === 1) {\r\n        return split;\r\n    }\r\n    let tag = split.shift();\r\n    // @ts-ignore tag is always defined\r\n    return [tag, split.join(\":\")];\r\n}\r\n","import { counter } from \"./functions\";\r\nexport const CUID_ATTRIBUTE = \"cuid\";\r\nexport const CLASSES = {\r\n    dark: 'dark',\r\n    animProgress: 'animation-progress',\r\n    print: 'print',\r\n    active: 'active',\r\n    swipingOn: \"swiping-on\",\r\n    selectionOff: \"selection-off\",\r\n};\r\nexport const ICONS = {\r\n    close: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 1.9999999,1.9999999 18,18\\\"></path><path d=\\\"M 18,1.9999999 1.9999999,18\\\"></path></svg>\",\r\n    accordion: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 5.0000475,7.4490018 10.000024,12.551028 15,7.4490018\\\"></path></svg>\",\r\n    special_menu: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path class=\\\"menu_handle_2\\\" d=\\\"M 1,10 H 19\\\"></path><path class=\\\"menu_handle_1\\\" d=\\\"M 1,4.8571429 H 19\\\"></path><path  class=\\\"menu_handle_3\\\" d=\\\"M 1,15.142857 H 19\\\"></path></svg>\",\r\n    special_fail: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-fail\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7.000001 A 43,43 0 0 1 92.999999,50 43,43 0 0 1 50,92.999999 43,43 0 0 1 7.0000011,50 43,43 0 0 1 50,7.000001 Z\\\"></path><path class=\\\"arm_1\\\" d=\\\"M 28.536809,28.536809 71.342023,71.342023\\\"></path><path class=\\\"arm_2\\\" d=\\\"M 71.342023,28.536809 28.536809,71.342023\\\"></path></svg>\",\r\n    special_success: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"special-success\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle\\\" d=\\\"M 50,7 A 43,43 0 0 1 93,50 43,43 0 0 1 50,93 43,43 0 0 1 7,50 43,43 0 0 1 50,7 Z\\\"></path><path class=\\\"arm\\\" d=\\\"M 22.988405,48.234784 36.946233,72.410453 75.516456,33.84023\\\"></path></svg>\",\r\n};\r\nexport const COLORS = ['red', 'green', 'blue', 'alpha'];\r\nexport const CSS_APP_BACKGROUND_COLORS = {\r\n    light: '--cui-color-light-app-background',\r\n    dark: '--cui-color-dark-app-background'\r\n};\r\nexport const CSS_COMPONENT_BACKGROUND_COLORS = {\r\n    light: '--cui-color-light-background',\r\n    dark: '--cui-color-dark-background '\r\n};\r\nexport const CSS_COMPONENT_BORDER_COLORS = {\r\n    light: '--cui-color-light-border',\r\n    dark: '--cui-color-dark-border'\r\n};\r\nexport const CSS_THEMES = {\r\n    light: {\r\n        base: '--cui-color-light-base',\r\n        muted: '--cui-color-light-muted',\r\n        active: '--cui-color-light-active'\r\n    },\r\n    dark: {\r\n        base: '--cui-color-dark-base',\r\n        muted: '--cui-color-dark-muted',\r\n        active: '--cui-color-dark-active'\r\n    },\r\n    accent: {\r\n        base: '--cui-color-primary',\r\n        muted: '--cui-color-primary-muted',\r\n        active: '--cui-color-primary-active'\r\n    },\r\n    secondary: {\r\n        base: '--cui-color-secondary',\r\n        muted: '--cui-color-secondary-muted',\r\n        active: '--cui-color-secondary-active'\r\n    },\r\n    success: {\r\n        base: '--cui-color-success',\r\n        muted: '--cui-color-success-muted',\r\n        active: '--cui-color-success-active'\r\n    },\r\n    warning: {\r\n        base: '--cui-color-warning',\r\n        muted: '--cui-color-warning-muted',\r\n        active: '--cui-color-warning-active'\r\n    },\r\n    error: {\r\n        base: '--cui-color-error',\r\n        muted: '--cui-color-error-muted',\r\n        active: '--cui-color-error-active'\r\n    }\r\n};\r\nexport const SCOPE_SELECTOR = \":scope \";\r\nexport const CSS_VARIABLES = {\r\n    fontSize: \"--{prefix}-font-size\",\r\n    lineHeight: \"--{prefix}-line-height\",\r\n    animationTime: \"--{prefix}-animation-time\",\r\n    animationTimeLong: \"--{prefix}-animation-time-long\",\r\n    animationTimeShort: \"--{prefix}-animation-time-short\",\r\n    colorLightAppBackground: \"--{prefix}-color-light-app-background\",\r\n    colorLightBackground: \"--{prefix}-color-light-background\",\r\n    colorLightBorder: \"--{prefix}-color-light-border\",\r\n    colorLightBase: \"--{prefix}-color-light-base\",\r\n    colorLightActive: \"--{prefix}-color-light-active\",\r\n    colorLightMuted: \"--{prefix}-color-light-muted\",\r\n    colorDarkAppBackground: \"--{prefix}-color-dark-app-background\",\r\n    colorDarkBackground: \"--{prefix}-color-dark-background\",\r\n    colorDarkBorder: \"--{prefix}-color-dark-border\",\r\n    colorDarkBase: \"--{prefix}-color-dark-base\",\r\n    colorDarkActive: \"--{prefix}-color-dark-active\",\r\n    colorDarkMuted: \"--{prefix}-color-dark-muted\",\r\n    colorAccent: \"--{prefix}-color-primary\",\r\n    colorAccentActive: \"--{prefix}-color-primary-active\",\r\n    colorAccentMuted: \"--{prefix}-color-primary-muted\",\r\n    colorAccentShade: \"--{prefix}-color-primary-shade\",\r\n    colorAccentShadeDark: \"--{prefix}-color-primary-shade-dark\",\r\n    colorSecondary: \"--{prefix}-color-secondary\",\r\n    colorSecondaryActive: \"--{prefix}-color-secondary-active\",\r\n    colorSecondaryMuted: \"--{prefix}-color-secondary-muted\",\r\n    colorSecondaryShade: \"--{prefix}-color-secondary-shade\",\r\n    colorSecondaryShadeDark: \"--{prefix}-color-secondary-shade-dark\",\r\n    colorWarning: \"--{prefix}-color-warning\",\r\n    colorWarningActive: \"--{prefix}-color-warning-active\",\r\n    colorWarningMuted: \"--{prefix}-color-warning-muted\",\r\n    colorWarningShade: \"--{prefix}-color-warning-shade\",\r\n    colorWarningShadeDark: \"--{prefix}-color-warning-shade-dark\",\r\n    colorSuccess: \"--{prefix}-color-success\",\r\n    colorSuccessActive: \"--{prefix}-color-success-active\",\r\n    colorSuccessMuted: \"--{prefix}-color-success-muted\",\r\n    colorSuccessShade: \"--{prefix}-color-success-shade\",\r\n    colorSuccessShadeDark: \"--{prefix}-color-success-shade-dark\",\r\n    colorError: \"--{prefix}-color-error\",\r\n    colorErrorActive: \"--{prefix}-color-error-active\",\r\n    colorErrorMuted: \"--{prefix}-color-error-muted\",\r\n    colorErrorShade: \"--{prefix}-color-error-shade\",\r\n    colorErrorShadeDark: \"--{prefix}-color-error-shade-dark\",\r\n    inputBackground: \"--{prefix}-input-background-color\",\r\n    colorShade: \"--{prefix}-color-shade\",\r\n    colorShadeDarker: \"--{prefix}-color-shade-darker\",\r\n    colorShadeLight: \"--{prefix}-color-shade-light\",\r\n    colorShadeLighter: \"--{prefix}-color-shade-light-lighter\",\r\n    outline: \"--{prefix}-outline\",\r\n    borderRadius: \"--{prefix}-border-radius\",\r\n    padding: \"--{prefix}-padding\",\r\n    margin: \"--{prefix}-margin\",\r\n    scrollbarWidth: \"--{prefix}-scrollbar-width\",\r\n    componentSpace: \"--{prefix}-component-space\",\r\n    accordionIcon: \"--{prefix}-accordion-icon\"\r\n};\r\nexport class STATICS {\r\n}\r\nSTATICS.logLevel = 'none';\r\nSTATICS.prefix = 'cui';\r\nexport const EVENTS = {\r\n    INSTANCE_INITIALIZED: 'instance-initialized',\r\n    INSTANCE_FINISHED: 'instance-finished',\r\n    RESIZE: \"resize\",\r\n    OPEN: \"open\",\r\n    OPENED: \"opened\",\r\n    CLOSE: \"close\",\r\n    CLOSED: \"closed\",\r\n    TOGGLE: \"toggle\",\r\n    TOGGLED: 'toggled',\r\n    SWITCH: \"switch\",\r\n    SWITCHED: \"switched\",\r\n    ON_SCROLL: \"scroll\",\r\n    TARGET_CHANGE: 'targetchange',\r\n    INTERSECTION: 'intersection',\r\n    KEYDOWN: 'keydown',\r\n    SCROLLBY: 'scrollby',\r\n    WINDOW_CLICK: 'windowclick',\r\n    OFFSET: 'offset',\r\n    PROGRESS_CHANGE: \"progresschange\",\r\n    PROGRESS_CHANGED: \"progresschanged\",\r\n    CHANGE: \"change\",\r\n    CHANGED: \"changed\",\r\n    GLOBAL_MOVE: \"globalmove\",\r\n    MOVE_LOCK: \"movelock\",\r\n    PAUSE: \"pause\",\r\n    PAUSED: \"paused\",\r\n    SORTED: \"sorted\",\r\n    SORT_START: \"sortstart\"\r\n};\r\nexport const OBSERVABLE_SCROLL = \"SCROLL\";\r\nexport const OBSERVABLE_INTERSECTION = \"INTERSECTION\";\r\nexport const COMPONENTS_COUNTER = counter();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _class, _name, _attributeName, _attributeValue, _attributeName_1, _attributeValue_1;\r\nimport { is, are, splitColon } from \"./functions\";\r\nexport class CuiClassAction {\r\n    constructor(className) {\r\n        _class.set(this, void 0);\r\n        __classPrivateFieldSet(this, _class, className);\r\n    }\r\n    add(element, utils) {\r\n        if (are(element, __classPrivateFieldGet(this, _class)) && !element.classList.contains(__classPrivateFieldGet(this, _class))) {\r\n            element.classList.add(__classPrivateFieldGet(this, _class));\r\n        }\r\n    }\r\n    remove(element, utils) {\r\n        if (are(element, __classPrivateFieldGet(this, _class)) && element.classList.contains(__classPrivateFieldGet(this, _class))) {\r\n            element.classList.remove(__classPrivateFieldGet(this, _class));\r\n        }\r\n    }\r\n    toggle(element, utils) {\r\n        if (are(element, __classPrivateFieldGet(this, _class))) {\r\n            if (element.classList.contains(__classPrivateFieldGet(this, _class))) {\r\n                element.classList.remove(__classPrivateFieldGet(this, _class));\r\n            }\r\n            else {\r\n                element.classList.add(__classPrivateFieldGet(this, _class));\r\n            }\r\n        }\r\n    }\r\n}\r\n_class = new WeakMap();\r\nexport class CuiInboundAction {\r\n    constructor(name) {\r\n        _name.set(this, void 0);\r\n        __classPrivateFieldSet(this, _name, name);\r\n    }\r\n    add(element, utils) {\r\n        if (!utils) {\r\n            return;\r\n        }\r\n        switch (__classPrivateFieldGet(this, _name)) {\r\n            case 'dark-mode':\r\n                utils.setLightMode('dark');\r\n                break;\r\n            case 'light-mode':\r\n                utils.setLightMode('light');\r\n                break;\r\n        }\r\n    }\r\n    remove(element, utils) {\r\n        if (!utils) {\r\n            return;\r\n        }\r\n        switch (__classPrivateFieldGet(this, _name)) {\r\n            case 'dark-mode':\r\n                utils.setLightMode('light');\r\n                break;\r\n            case 'light-mode':\r\n                utils.setLightMode('dark');\r\n                break;\r\n        }\r\n    }\r\n    toggle(element, utils) {\r\n        if (!utils) {\r\n            return;\r\n        }\r\n        switch (__classPrivateFieldGet(this, _name)) {\r\n            case 'dark-mode':\r\n                this.setDarkMode(utils);\r\n                break;\r\n            case 'light-mode':\r\n                this.setDarkMode(utils);\r\n                break;\r\n        }\r\n    }\r\n    setDarkMode(utils) {\r\n        if (utils.getLightMode() === 'dark') {\r\n            utils.setLightMode('light');\r\n        }\r\n        else {\r\n            utils.setLightMode('dark');\r\n        }\r\n    }\r\n}\r\n_name = new WeakMap();\r\nexport class AttributeAction {\r\n    constructor(attribute) {\r\n        var _a, _b;\r\n        _attributeName.set(this, void 0);\r\n        _attributeValue.set(this, void 0);\r\n        _a = this, _b = this, [({ set value(_c) { __classPrivateFieldSet(_a, _attributeName, _c); } }).value, ({ set value(_c) { __classPrivateFieldSet(_b, _attributeValue, _c); } }).value] = splitColon(attribute); // attribute.split(',')\r\n    }\r\n    add(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName), __classPrivateFieldGet(this, _attributeValue))) {\r\n            return;\r\n        }\r\n        element.setAttribute(__classPrivateFieldGet(this, _attributeName), __classPrivateFieldGet(this, _attributeValue));\r\n    }\r\n    remove(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName), __classPrivateFieldGet(this, _attributeValue))) {\r\n            return;\r\n        }\r\n        if (element.hasAttribute(__classPrivateFieldGet(this, _attributeName))) {\r\n            element.removeAttribute(__classPrivateFieldGet(this, _attributeName));\r\n        }\r\n    }\r\n    toggle(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName), __classPrivateFieldGet(this, _attributeValue))) {\r\n            return;\r\n        }\r\n        if (element.hasAttribute(__classPrivateFieldGet(this, _attributeName))) {\r\n            element.removeAttribute(__classPrivateFieldGet(this, _attributeName));\r\n        }\r\n        else {\r\n            element.setAttribute(__classPrivateFieldGet(this, _attributeName), __classPrivateFieldGet(this, _attributeValue));\r\n        }\r\n    }\r\n}\r\n_attributeName = new WeakMap(), _attributeValue = new WeakMap();\r\nexport class StyleAction {\r\n    constructor(attribute) {\r\n        var _a, _b;\r\n        _attributeName_1.set(this, void 0);\r\n        _attributeValue_1.set(this, void 0);\r\n        _a = this, _b = this, [({ set value(_c) { __classPrivateFieldSet(_a, _attributeName_1, _c); } }).value, ({ set value(_c) { __classPrivateFieldSet(_b, _attributeValue_1, _c); } }).value] = splitColon(attribute);\r\n    }\r\n    add(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName_1), __classPrivateFieldGet(this, _attributeValue_1))) {\r\n            return;\r\n        }\r\n        let el = element;\r\n        if (el.style && !el.style[__classPrivateFieldGet(this, _attributeName_1)]) {\r\n            el.style[__classPrivateFieldGet(this, _attributeName_1)] = __classPrivateFieldGet(this, _attributeValue_1);\r\n        }\r\n    }\r\n    remove(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName_1), __classPrivateFieldGet(this, _attributeValue_1))) {\r\n            return;\r\n        }\r\n        let el = element;\r\n        if (el.style && el.style[__classPrivateFieldGet(this, _attributeName_1)]) {\r\n            el.style[__classPrivateFieldGet(this, _attributeName_1)] = \"\";\r\n        }\r\n    }\r\n    toggle(element, utils) {\r\n        if (!are(element, __classPrivateFieldGet(this, _attributeName_1), __classPrivateFieldGet(this, _attributeValue_1))) {\r\n            return;\r\n        }\r\n        let el = element;\r\n        if (!el.style) {\r\n            return;\r\n        }\r\n        if (!el.style[__classPrivateFieldGet(this, _attributeName_1)]) {\r\n            el.style[__classPrivateFieldGet(this, _attributeName_1)] = __classPrivateFieldGet(this, _attributeValue_1);\r\n        }\r\n        else {\r\n            delete el.style[__classPrivateFieldGet(this, _attributeName_1)];\r\n        }\r\n    }\r\n}\r\n_attributeName_1 = new WeakMap(), _attributeValue_1 = new WeakMap();\r\nexport class DummyAction {\r\n    constructor() {\r\n    }\r\n    add(element, utils) {\r\n    }\r\n    remove(element, utils) {\r\n    }\r\n    toggle(element, utils) {\r\n    }\r\n}\r\nexport class CuiActionsFatory {\r\n    static get(value) {\r\n        if (!is(value)) {\r\n            return new DummyAction();\r\n        }\r\n        let indicator = value[0];\r\n        switch (indicator) {\r\n            case '.':\r\n                return new CuiClassAction(value.substring(1));\r\n            case '~':\r\n                return new CuiInboundAction(value.substring(1));\r\n            case \"&\":\r\n                return new AttributeAction(value.substring(1));\r\n            case \"^\":\r\n                return new StyleAction(value.substring(1));\r\n            default:\r\n                return new CuiClassAction(value);\r\n        }\r\n    }\r\n}\r\nexport class CuiActionsListFactory {\r\n    static get(value) {\r\n        if (!is(value)) {\r\n            return [];\r\n        }\r\n        const split = value.split(',');\r\n        return split.map(single => {\r\n            return CuiActionsFatory.get(single.trim());\r\n        });\r\n    }\r\n}\r\n","export class ErrorBase extends Error {\r\n    constructor(name, message) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n        this.name = name;\r\n    }\r\n}\r\nexport class ItemNotFoundError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"ItemNotFoundError\", message);\r\n    }\r\n}\r\nexport class ArgumentError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\nexport class CuiBusError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"ArgumentError\", message);\r\n    }\r\n}\r\nexport class CuiInstanceInitError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"CuiInstanceInitError\", message);\r\n    }\r\n}\r\nexport class CuiScrollSpyOutOfRangeError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"CuiScrollSpyOutOfRangeError\", message);\r\n    }\r\n}\r\nexport class RegisterElementError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"RegisterElementError\", message);\r\n    }\r\n}\r\nexport class AnimatorError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"AnimatorError\", message);\r\n    }\r\n}\r\nexport class CSSVariableError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"CSSVariableError\", message);\r\n    }\r\n}\r\nexport class CuiColorError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"CuiColorError\", message);\r\n    }\r\n}\r\nexport class CuiPositionError extends ErrorBase {\r\n    constructor(message) {\r\n        super(\"CuiPositionError\", message);\r\n    }\r\n}\r\n","export class CuiLogger {\r\n    constructor(name, level) {\r\n        this.level = level;\r\n        this.component = name;\r\n        this.id = \"-\";\r\n    }\r\n    setLevel(level) {\r\n        this.level = level;\r\n    }\r\n    setId(id) {\r\n        this.id = id;\r\n    }\r\n    debug(message, functionName) {\r\n        if (this.level === 'debug') {\r\n            console.log(this.prepString(message, \"debug\", functionName));\r\n        }\r\n    }\r\n    error(message, functionName) {\r\n        if (this.level === 'error' || this.level === 'debug' || this.level === 'warning')\r\n            console.error(this.prepString(message, \"error\", functionName));\r\n    }\r\n    warning(message, functionName) {\r\n        if (this.level === 'warning' || this.level === 'debug')\r\n            console.warn(this.prepString(message, \"warning\", functionName));\r\n    }\r\n    exception(e, functionName) {\r\n        console.error(this.prepString(`An exception occured: ${e.name}: ${e.message}`, \"exception\", functionName));\r\n        if (this.level === 'debug')\r\n            console.error(e.stack);\r\n    }\r\n    performance(callback, functionName) {\r\n        if (this.level !== 'debug') {\r\n            return;\r\n        }\r\n        let start = Date.now();\r\n        callback();\r\n        console.log(this.prepString(`Performance measure: ${Date.now() - start}ms`, \"performance\", functionName));\r\n    }\r\n    prepString(message, level, functionName) {\r\n        return `[${new Date().toLocaleString()}][${level}][${this.component}][${functionName !== null && functionName !== void 0 ? functionName : '-'}][${this.id}][${message}]`;\r\n    }\r\n}\r\n","import { CuiLogger } from \"../utils/logger\";\r\nimport { STATICS } from \"../utils/statics\";\r\n/**\r\n *\r\n */\r\nexport class CuiLoggerFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param name - component name\r\n     */\r\n    static get(name, logLevel) {\r\n        return new CuiLogger(name, logLevel !== null && logLevel !== void 0 ? logLevel : STATICS.logLevel);\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _id, _classes, _attributes, _tag;\r\nimport { is, enumerateObject } from \"../utils/functions\";\r\nexport class ElementBuilder {\r\n    constructor(tag) {\r\n        _id.set(this, void 0);\r\n        _classes.set(this, void 0);\r\n        _attributes.set(this, void 0);\r\n        _tag.set(this, void 0);\r\n        __classPrivateFieldSet(this, _tag, tag);\r\n        __classPrivateFieldSet(this, _classes, []);\r\n        __classPrivateFieldSet(this, _attributes, undefined);\r\n        __classPrivateFieldSet(this, _id, undefined);\r\n    }\r\n    setId(id) {\r\n        __classPrivateFieldSet(this, _id, id);\r\n        return this;\r\n    }\r\n    setClasses(...classList) {\r\n        __classPrivateFieldSet(this, _classes, classList);\r\n        return this;\r\n    }\r\n    setAttributes(attributes) {\r\n        __classPrivateFieldSet(this, _attributes, attributes);\r\n        return this;\r\n    }\r\n    build(innerHTML) {\r\n        let element = document.createElement(__classPrivateFieldGet(this, _tag));\r\n        if (is(__classPrivateFieldGet(this, _id))) {\r\n            // @ts-ignore id is checked\r\n            element.id = __classPrivateFieldGet(this, _id);\r\n        }\r\n        if (is(__classPrivateFieldGet(this, _classes))) {\r\n            element.classList.add(...__classPrivateFieldGet(this, _classes));\r\n        }\r\n        if (is(__classPrivateFieldGet(this, _attributes))) {\r\n            // @ts-ignore attributes are checked\r\n            enumerateObject(__classPrivateFieldGet(this, _attributes), (attr, value) => {\r\n                element.setAttribute(attr, value);\r\n            });\r\n        }\r\n        if (is(innerHTML)) {\r\n            // @ts-ignore innerHTML checked already\r\n            element.innerHTML = innerHTML;\r\n        }\r\n        return element;\r\n    }\r\n}\r\n_id = new WeakMap(), _classes = new WeakMap(), _attributes = new WeakMap(), _tag = new WeakMap();\r\n","export const SWIPE_ANIMATIONS_DEFINITIONS = {\r\n    \"slide\": {\r\n        current: {\r\n            left: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 0,\r\n                        to: -100,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            },\r\n            right: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 0,\r\n                        to: 100,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        previous: {\r\n            left: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 100,\r\n                        to: 0,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            },\r\n            right: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: -100,\r\n                        to: 0,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    fade: {\r\n        current: {\r\n            left: {\r\n                opacity: {\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            right: {\r\n                opacity: {\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            }\r\n        },\r\n        previous: {\r\n            left: {\r\n                opacity: {\r\n                    from: 0,\r\n                    to: 1\r\n                }\r\n            },\r\n            right: {\r\n                opacity: {\r\n                    from: 0,\r\n                    to: 1\r\n                }\r\n            }\r\n        }\r\n    },\r\n    push: {\r\n        current: {\r\n            left: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 0,\r\n                        to: -10,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            },\r\n            right: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 0,\r\n                        to: 10,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        previous: {\r\n            left: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: 100,\r\n                        to: 0,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            },\r\n            right: {\r\n                transform: {\r\n                    translateX: {\r\n                        from: -100,\r\n                        to: 0,\r\n                        unit: \"%\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _element, _onEvent, _isLocked, _isAttached, _preventDefault, _target;\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiMoveEventListener {\r\n    constructor(element) {\r\n        _element.set(this, void 0);\r\n        _onEvent.set(this, void 0);\r\n        _isLocked.set(this, void 0);\r\n        _isAttached.set(this, void 0);\r\n        _preventDefault.set(this, void 0);\r\n        _target.set(this, void 0);\r\n        __classPrivateFieldSet(this, _isLocked, false);\r\n        __classPrivateFieldSet(this, _element, element !== null && element !== void 0 ? element : document.body);\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n        __classPrivateFieldSet(this, _preventDefault, false);\r\n        __classPrivateFieldSet(this, _onEvent, undefined);\r\n        __classPrivateFieldSet(this, _target, undefined);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onTouchStart = this.onTouchStart.bind(this);\r\n        this.onTouchEnd = this.onTouchEnd.bind(this);\r\n        this.onTouchMove = this.onTouchMove.bind(this);\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _onEvent, callback);\r\n    }\r\n    setTarget(element) {\r\n        __classPrivateFieldSet(this, _target, element);\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _isLocked);\r\n    }\r\n    preventDefault(flag) {\r\n        __classPrivateFieldSet(this, _preventDefault, flag);\r\n    }\r\n    attach() {\r\n        if (__classPrivateFieldGet(this, _isAttached)) {\r\n            return;\r\n        }\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('mousedown', this.onMouseDown, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('mouseup', this.onMouseUp, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('mousemove', this.onMouseMove, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('touchstart', this.onTouchStart, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('touchend', this.onTouchEnd, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).addEventListener('touchmove', this.onTouchMove, { passive: false });\r\n        __classPrivateFieldSet(this, _isAttached, true);\r\n    }\r\n    detach() {\r\n        console.log(\"On detach\");\r\n        if (!__classPrivateFieldGet(this, _isAttached)) {\r\n            return;\r\n        }\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('mousedown', this.onMouseDown, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('mouseup', this.onMouseUp, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('mousemove', this.onMouseMove, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('touchstart', this.onTouchStart, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('touchend', this.onTouchEnd, { passive: false });\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _element).removeEventListener('touchmove', this.onTouchMove, { passive: false });\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _isAttached);\r\n    }\r\n    onMouseDown(ev) {\r\n        if (__classPrivateFieldGet(this, _isLocked)) {\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _target) && !__classPrivateFieldGet(this, _target).contains(ev.target)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _isLocked, true);\r\n        this.publishMouseEvent(\"down\", ev);\r\n    }\r\n    onMouseUp(ev) {\r\n        if (!__classPrivateFieldGet(this, _isLocked)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _isLocked, false);\r\n        this.publishMouseEvent(\"up\", ev);\r\n    }\r\n    onMouseMove(ev) {\r\n        if (__classPrivateFieldGet(this, _isLocked)) {\r\n            this.publishMouseEvent(\"move\", ev);\r\n        }\r\n    }\r\n    onTouchStart(ev) {\r\n        if (__classPrivateFieldGet(this, _isLocked)) {\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _target) && !__classPrivateFieldGet(this, _target).contains(ev.target)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _isLocked, true);\r\n        this.publishTouchEvent('down', ev);\r\n    }\r\n    onTouchEnd(ev) {\r\n        if (!__classPrivateFieldGet(this, _isLocked)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _isLocked, false);\r\n        this.publishTouchEvent('up', ev);\r\n    }\r\n    onTouchMove(ev) {\r\n        if (__classPrivateFieldGet(this, _isLocked)) {\r\n            this.publishTouchEvent('move', ev);\r\n        }\r\n    }\r\n    publishMouseEvent(type, ev) {\r\n        if (__classPrivateFieldGet(this, _preventDefault) && ev.cancelable) {\r\n            ev.preventDefault();\r\n        }\r\n        if (!is(__classPrivateFieldGet(this, _onEvent))) {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _onEvent).call(this, {\r\n            type: type,\r\n            x: ev.clientX,\r\n            y: ev.clientY,\r\n            moveX: ev.movementX,\r\n            moveY: ev.movementY,\r\n            target: ev.target,\r\n            event: ev\r\n        });\r\n    }\r\n    publishTouchEvent(type, ev) {\r\n        if (__classPrivateFieldGet(this, _preventDefault) && ev.cancelable)\r\n            ev.preventDefault();\r\n        if (!is(__classPrivateFieldGet(this, _onEvent))) {\r\n            return;\r\n        }\r\n        let touch = null;\r\n        if (ev.touches.length > 0) {\r\n            touch = ev.touches[0];\r\n        }\r\n        else if (ev.changedTouches.length > 0) {\r\n            touch = ev.changedTouches[0];\r\n        }\r\n        // @ts-ignore - already checked\r\n        __classPrivateFieldGet(this, _onEvent).call(this, {\r\n            event: ev,\r\n            type: type,\r\n            target: ev.target,\r\n            //@ts-ignore\r\n            x: is(touch) ? touch.clientX : -1,\r\n            //@ts-ignore\r\n            y: is(touch) ? touch.clientY : -1,\r\n            moveX: -1,\r\n            moveY: -1\r\n        });\r\n    }\r\n}\r\n_element = new WeakMap(), _onEvent = new WeakMap(), _isLocked = new WeakMap(), _isAttached = new WeakMap(), _preventDefault = new WeakMap(), _target = new WeakMap();\r\n","export class CuiSetup {\r\n    constructor() {\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n        this.prefix = \"cui\";\r\n        this.plugins = {};\r\n    }\r\n    fromInit(init) {\r\n        var _a;\r\n        this.prefix = (_a = init.prefix) !== null && _a !== void 0 ? _a : \"cui\";\r\n        this.logLevel = init.logLevel;\r\n        this.cacheSize = init.cacheSize;\r\n        this.autoLightMode = init.autoLightMode;\r\n        this.animationTime = init.animationTime;\r\n        this.animationTimeShort = init.animationTimeShort;\r\n        this.animationTimeLong = init.animationTimeLong;\r\n        this.scrollThreshold = init.scrollThreshold;\r\n        this.resizeThreshold = init.resizeThreshold;\r\n        return this;\r\n    }\r\n}\r\nexport class CuiSetupInit {\r\n    constructor() {\r\n        this.prefix = 'cui';\r\n        this.app = '$cui';\r\n        this.logLevel = 'warning';\r\n        this.interaction = 'async';\r\n        this.animationTime = 300;\r\n        this.animationTimeShort = 150;\r\n        this.animationTimeLong = 500;\r\n        this.cacheSize = 500;\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n        this.root = document.body;\r\n        this.busSetup = undefined;\r\n        this.development = undefined;\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _observer, _options, _element, _components, _attributes, _utils, _queryString, _isObserving, _observer_1, _element_1, _disabled, _options_1;\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\nimport { is, are, registerCuiElement, joinAttributesForQuery, parseAttribute } from \"../utils/functions\";\r\nexport class CuiMutationObserver {\r\n    constructor(element, utils) {\r\n        _observer.set(this, void 0);\r\n        _options.set(this, void 0);\r\n        _element.set(this, void 0);\r\n        _components.set(this, void 0);\r\n        _attributes.set(this, void 0);\r\n        _utils.set(this, void 0);\r\n        _queryString.set(this, void 0);\r\n        __classPrivateFieldSet(this, _observer, undefined);\r\n        this.plugins = undefined;\r\n        __classPrivateFieldSet(this, _options, undefined);\r\n        __classPrivateFieldSet(this, _element, element);\r\n        this._log = CuiLoggerFactory.get('CuiMutationObserver');\r\n        __classPrivateFieldSet(this, _components, []);\r\n        __classPrivateFieldSet(this, _attributes, []);\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n        __classPrivateFieldSet(this, _queryString, \"\");\r\n    }\r\n    setPlugins(plugins) {\r\n        this.plugins = plugins;\r\n        return this;\r\n    }\r\n    setComponents(components) {\r\n        __classPrivateFieldSet(this, _components, components);\r\n        return this;\r\n    }\r\n    setAttributes(attributes) {\r\n        __classPrivateFieldSet(this, _options, {\r\n            attributes: true,\r\n            subtree: true,\r\n            childList: true,\r\n            attributeFilter: attributes\r\n        });\r\n        __classPrivateFieldSet(this, _attributes, attributes);\r\n        __classPrivateFieldSet(this, _queryString, joinAttributesForQuery(attributes));\r\n        return this;\r\n    }\r\n    start() {\r\n        this._log.debug(\"Starting\");\r\n        if (!__classPrivateFieldGet(this, _options)) {\r\n            this._log.error(\"Cannot start - options are not defined\");\r\n            return this;\r\n        }\r\n        __classPrivateFieldSet(this, _observer, new MutationObserver(this.mutationCallback.bind(this)));\r\n        __classPrivateFieldGet(this, _observer).observe(__classPrivateFieldGet(this, _element), __classPrivateFieldGet(this, _options));\r\n        this._log.debug(\"Started\");\r\n        return this;\r\n    }\r\n    stop() {\r\n        this._log.debug(\"Stopping\");\r\n        if (!__classPrivateFieldGet(this, _observer)) {\r\n            this._log.debug(\"Observer not available\");\r\n            return this;\r\n        }\r\n        __classPrivateFieldGet(this, _observer).disconnect();\r\n        __classPrivateFieldSet(this, _observer, undefined);\r\n        this._log.debug(\"Stopped\");\r\n        return this;\r\n    }\r\n    mutationCallback(mutations, observer) {\r\n        mutations.forEach((mutation) => {\r\n            switch (mutation.type) {\r\n                case 'attributes':\r\n                    const item = mutation.target;\r\n                    if (are(mutation.attributeName, item)) {\r\n                        // @ts-ignore - attribute name is checked\r\n                        if (are(item.$handlers, item.$handlers[mutation.attributeName])) {\r\n                            // @ts-ignore - attribute name is checked\r\n                            item.$handlers[mutation.attributeName].refresh(parseAttribute(item, mutation.attributeName));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._log.error(\"Mutation attribute doesn't not exisist\");\r\n                    }\r\n                    break;\r\n                case 'childList':\r\n                    this.handleChildListMutation(mutation);\r\n                    break;\r\n            }\r\n            if (is(this.plugins)) {\r\n                // @ts-ignore plugins is defined here\r\n                this.plugins.onMutation(mutation).then(() => {\r\n                    //\r\n                });\r\n            }\r\n        });\r\n    }\r\n    handleChildListMutation(mutation) {\r\n        const addedLen = mutation.addedNodes.length;\r\n        const removedLen = mutation.removedNodes.length;\r\n        if (addedLen > 0) {\r\n            this._log.debug(\"Registering added nodes: \" + addedLen);\r\n            this.handleAddedNodes(mutation.addedNodes);\r\n        }\r\n        else if (removedLen > 0) {\r\n            this._log.debug(\"Removing nodes: \" + removedLen);\r\n            this.handleRemovedNodes(mutation.removedNodes);\r\n        }\r\n    }\r\n    handleAddedNodes(nodes) {\r\n        nodes.forEach((node) => {\r\n            try {\r\n                registerCuiElement(node, __classPrivateFieldGet(this, _components), __classPrivateFieldGet(this, _attributes), __classPrivateFieldGet(this, _utils));\r\n                let childrens = node.hasChildNodes() ? node.querySelectorAll(__classPrivateFieldGet(this, _queryString)) : null;\r\n                if (is(childrens)) {\r\n                    childrens.forEach((child) => {\r\n                        registerCuiElement(child, __classPrivateFieldGet(this, _components), __classPrivateFieldGet(this, _attributes), __classPrivateFieldGet(this, _utils));\r\n                    });\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._log.exception(e);\r\n            }\r\n        });\r\n    }\r\n    handleRemovedNodes(nodes) {\r\n        nodes.forEach((node) => {\r\n            this.destroySingleElement(node);\r\n            let childrens = node.hasChildNodes() ? node.querySelectorAll(__classPrivateFieldGet(this, _queryString)) : null;\r\n            if (is(childrens)) {\r\n                childrens.forEach((child) => {\r\n                    this.destroySingleElement(child);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    destroySingleElement(node) {\r\n        let element = node;\r\n        if (element.$handlers) {\r\n            for (let name in element.$handlers) {\r\n                if (element.$handlers.hasOwnProperty(name)) {\r\n                    try {\r\n                        element.$handlers[name].destroy();\r\n                    }\r\n                    catch (e) {\r\n                        this._log.exception(e, 'remove - ' + name);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n_observer = new WeakMap(), _options = new WeakMap(), _element = new WeakMap(), _components = new WeakMap(), _attributes = new WeakMap(), _utils = new WeakMap(), _queryString = new WeakMap();\r\nexport class CuiComponentMutationHandler {\r\n    constructor(target) {\r\n        _isObserving.set(this, void 0);\r\n        _observer_1.set(this, void 0);\r\n        _element_1.set(this, void 0);\r\n        _disabled.set(this, void 0);\r\n        _options_1.set(this, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n        __classPrivateFieldSet(this, _observer_1, undefined);\r\n        __classPrivateFieldSet(this, _disabled, false);\r\n        __classPrivateFieldSet(this, _isObserving, false);\r\n        __classPrivateFieldSet(this, _element_1, target);\r\n    }\r\n    observe() {\r\n        if (!__classPrivateFieldGet(this, _isObserving) && !__classPrivateFieldGet(this, _disabled) && __classPrivateFieldGet(this, _observer_1)) {\r\n            __classPrivateFieldGet(this, _observer_1).observe(__classPrivateFieldGet(this, _element_1), __classPrivateFieldGet(this, _options_1));\r\n            __classPrivateFieldSet(this, _isObserving, true);\r\n        }\r\n    }\r\n    unobserve() {\r\n        if (__classPrivateFieldGet(this, _isObserving) && __classPrivateFieldGet(this, _observer_1)) {\r\n            __classPrivateFieldGet(this, _observer_1).disconnect();\r\n            __classPrivateFieldSet(this, _isObserving, false);\r\n        }\r\n    }\r\n    isObserving() {\r\n        return __classPrivateFieldGet(this, _isObserving);\r\n    }\r\n    disable(flag) {\r\n        __classPrivateFieldSet(this, _disabled, flag);\r\n        if (__classPrivateFieldGet(this, _disabled)) {\r\n            this.unobserve();\r\n        }\r\n    }\r\n    onMutation(callback) {\r\n        if (__classPrivateFieldGet(this, _isObserving))\r\n            this.unobserve();\r\n        __classPrivateFieldSet(this, _observer_1, new MutationObserver(callback));\r\n    }\r\n}\r\n_isObserving = new WeakMap(), _observer_1 = new WeakMap(), _element_1 = new WeakMap(), _disabled = new WeakMap(), _options_1 = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _interactions;\r\nimport { CLASSES } from \"../utils/statics\";\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiActionsHelper {\r\n    constructor(interactions) {\r\n        _interactions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _interactions, interactions);\r\n    }\r\n    performAction(target, action, timeout, callback) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve) => {\r\n                __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                    action.add(target);\r\n                    target.classList.add(CLASSES.animProgress);\r\n                    setTimeout(() => {\r\n                        __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                            action.remove(target);\r\n                            target.classList.remove(CLASSES.animProgress);\r\n                            if (callback)\r\n                                callback();\r\n                            resolve(true);\r\n                        }, null);\r\n                    }, timeout);\r\n                }, null);\r\n            });\r\n        });\r\n    }\r\n    performActions(target, actions, timeout, callback) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve) => {\r\n                __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                    actions.forEach(x => x.add(target));\r\n                    target.classList.add(CLASSES.animProgress);\r\n                    setTimeout(() => {\r\n                        __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                            actions.forEach(x => x.remove(target));\r\n                            target.classList.remove(CLASSES.animProgress);\r\n                            if (callback)\r\n                                callback();\r\n                            resolve(true);\r\n                        }, null);\r\n                    }, timeout);\r\n                }, null);\r\n            });\r\n        });\r\n    }\r\n    performSwitchAction(inTarget, outTarget, inAction, outAction, onFinish, timeout) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve) => {\r\n                __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                    inAction.forEach(x => x.add(inTarget));\r\n                    inTarget.classList.add(CLASSES.animProgress);\r\n                    if (is(outTarget)) {\r\n                        //@ts-ignore\r\n                        outAction.forEach(x => x.add(outTarget));\r\n                        //@ts-ignore\r\n                        outTarget.classList.add(CLASSES.animProgress);\r\n                    }\r\n                    setTimeout(() => {\r\n                        __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n                            inAction.forEach(x => x.remove(inTarget));\r\n                            inTarget.classList.remove(CLASSES.animProgress);\r\n                            if (is(outTarget)) {\r\n                                //@ts-ignore\r\n                                outAction.forEach(x => x.remove(outTarget));\r\n                                //@ts-ignore\r\n                                outTarget.classList.remove(CLASSES.animProgress);\r\n                            }\r\n                            onFinish();\r\n                            resolve(true);\r\n                        }, null);\r\n                    }, timeout);\r\n                }, null);\r\n            });\r\n        });\r\n    }\r\n}\r\n_interactions = new WeakMap();\r\n","export const CUI_LIGHT_COMPONENTS_VERSION = \"0.2.7\";\r\n","export const CUI_LIGHT_PLUGINS_VERSION = \"0.2.6\";\r\n","export const CUI_CORE_VERSION = \"0.2.8\";\r\n","export class AriaAttributes {\r\n    static setLabel(element, label) {\r\n        if (!element.hasAttribute('aria-label')) {\r\n            element.setAttribute('aria-label', label);\r\n        }\r\n    }\r\n    static setAria(element, attr, value) {\r\n        if (!element.hasAttribute(attr)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n    }\r\n    static removeAria(element, attr) {\r\n        if (element.hasAttribute(attr)) {\r\n            element.removeAttribute(attr);\r\n        }\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _interactions, _emittedEvents, _attribute, _openEventId, _closeEventId, _keyCloseEventId, _openAct, _closeAct, _mutionHandler;\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\nimport { CuiComponentMutationHandler } from \"../observers/mutations\";\r\nimport { AriaAttributes } from \"../utils/aria\";\r\nimport { CuiActionsHelper } from \"../helpers/helpers\";\r\nimport { CuiActionsListFactory } from \"../utils/actions\";\r\nimport { is, getActiveClass, clone } from \"../utils/functions\";\r\nimport { EVENTS } from \"../utils/statics\";\r\nexport class ComponentHelper {\r\n    constructor(interactions) {\r\n        _interactions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _interactions, interactions);\r\n    }\r\n    hasClass(cls, element) {\r\n        return cls && element.classList.contains(cls) ? true : false;\r\n    }\r\n    setClass(cls, element) {\r\n        this.setClasses([cls], element);\r\n    }\r\n    setClasses(classes, element) {\r\n        if (element) {\r\n            element.classList.add(...classes);\r\n        }\r\n    }\r\n    setClassesAs(element, ...classes) {\r\n        __classPrivateFieldGet(this, _interactions).mutate(this.setClasses, this, classes, element);\r\n    }\r\n    removeClass(cls, element) {\r\n        this.removeClasses([cls], element);\r\n    }\r\n    removeClasses(classes, element) {\r\n        if (element) {\r\n            element.classList.remove(...classes);\r\n        }\r\n    }\r\n    removeClassesAs(element, ...classes) {\r\n        __classPrivateFieldGet(this, _interactions).mutate(this.removeClasses, this, classes, element);\r\n    }\r\n    removeAttribute(attributeName, element) {\r\n        if (element && element.hasAttribute(attributeName))\r\n            element.removeAttribute(attributeName);\r\n    }\r\n    setStyle(element, property, value) {\r\n        if (element && element[\"style\"] && is(value)) {\r\n            element.style[property] = value;\r\n        }\r\n    }\r\n}\r\n_interactions = new WeakMap();\r\nexport class CuiComponentBase {\r\n    constructor(componentName, element, utils) {\r\n        _emittedEvents.set(this, void 0);\r\n        this._log = CuiLoggerFactory.get(componentName);\r\n        this.utils = utils;\r\n        this.element = element;\r\n        this.cuid = element.$cuid;\r\n        this.isLocked = false;\r\n        this._log.setId(this.cuid);\r\n        this.activeClassName = getActiveClass(utils.setup.prefix);\r\n        this.helper = new ComponentHelper(utils.interactions);\r\n        __classPrivateFieldSet(this, _emittedEvents, []);\r\n        this.componentName = componentName;\r\n    }\r\n    mutate(callback, ...args) {\r\n        this.utils.interactions.mutate(callback, this, ...args);\r\n    }\r\n    fetch(callback, ...args) {\r\n        this.utils.interactions.fetch(callback, this, ...args);\r\n    }\r\n    getEventName(name) {\r\n        return [name, this.cuid].join('-');\r\n    }\r\n    /**\r\n     * Emits event using passed data and cuid of the element\r\n     * NOTE: Don't use it to emit global events\r\n     * @param event Event name\r\n     * @param data Data to emit\r\n     */\r\n    emitEvent(event, ...data) {\r\n        if (!__classPrivateFieldGet(this, _emittedEvents).includes(event))\r\n            __classPrivateFieldGet(this, _emittedEvents).push(event);\r\n        this.utils.bus.emit(event, this.cuid, ...data);\r\n    }\r\n    onEvent(event, callback) {\r\n        return this.utils.bus.on(event, callback, this.element);\r\n    }\r\n    detachEvent(event, id) {\r\n        if (id != null) {\r\n            this.utils.bus.detach(event, id);\r\n            id = \"\";\r\n        }\r\n    }\r\n    getId() {\r\n        return this.cuid;\r\n    }\r\n    checkLockAndWarn(fName) {\r\n        if (this.isLocked) {\r\n            this._log.warning(\"Component is locked\", fName);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Helper which checks whether element has an active flag set\r\n     */\r\n    isActive() {\r\n        return this.element.classList.contains(this.activeClassName);\r\n    }\r\n    detachEmiitedEvents() {\r\n        __classPrivateFieldGet(this, _emittedEvents).forEach(event => {\r\n            this.utils.bus.detachByCuid(event, this.cuid);\r\n            this._log.debug(\"Detaching event: \" + event + \" on component delete\");\r\n        });\r\n    }\r\n    registerInDebug() {\r\n        this.utils.development.registerElement(this.element, this.cuid, this.componentName);\r\n    }\r\n    removeFromDebug() {\r\n        this.utils.development.unregisterElement(this.cuid, this.componentName);\r\n    }\r\n    setDebugProperty(name, value) {\r\n        this.utils.development.setProperty(this.cuid, this.componentName, name, value);\r\n    }\r\n    logInfo(message, functionName) {\r\n        this._log.debug(message, functionName);\r\n        this.utils.development.pushState(this.cuid, this.componentName, \"info\", message, functionName);\r\n    }\r\n    logWarning(message, functionName) {\r\n        this._log.warning(message, functionName);\r\n        this.utils.development.pushState(this.cuid, this.componentName, \"warning\", message, functionName);\r\n    }\r\n    pushDebugState(type, message, functionName) {\r\n        this.utils.development.pushState(this.cuid, this.componentName, type, message, functionName);\r\n    }\r\n    logError(message, functionName, error) {\r\n        this._log.error(message, functionName);\r\n        if (error) {\r\n            this._log.exception(error, functionName);\r\n        }\r\n        this.utils.development.pushState(this.cuid, this.componentName, \"error\", message, functionName);\r\n    }\r\n}\r\n_emittedEvents = new WeakMap();\r\nexport class CuiHandlerBase extends CuiComponentBase {\r\n    constructor(componentName, element, attribute, args, utils) {\r\n        super(componentName, element, utils);\r\n        _attribute.set(this, void 0);\r\n        this.args = args;\r\n        this.actionsHelper = new CuiActionsHelper(utils.interactions);\r\n        this.prevArgs = undefined;\r\n        this.isInitialized = false;\r\n        __classPrivateFieldSet(this, _attribute, attribute);\r\n    }\r\n    handle(args) {\r\n        this.logInfo(\"Init\", 'handle');\r\n        if (this.isInitialized) {\r\n            this.logWarning(\"Trying to initialize component again\", 'handle');\r\n            return;\r\n        }\r\n        this.args.parse(args);\r\n        if (!this.element.classList.contains(__classPrivateFieldGet(this, _attribute))) {\r\n            this.element.classList.add(__classPrivateFieldGet(this, _attribute));\r\n        }\r\n        this.registerInDebug();\r\n        this.onHandle();\r\n        this.isInitialized = true;\r\n    }\r\n    refresh(args) {\r\n        this.logInfo(\"Update\", 'refresh');\r\n        if (!this.isInitialized) {\r\n            this.logError(\"Cannot update not initialized component\", 'refresh');\r\n            return;\r\n        }\r\n        this.prevArgs = clone(this.args);\r\n        this.args.parse(args);\r\n        this.pushDebugState(\"info\", \"Component update\", 'refresh');\r\n        this.onRefresh();\r\n    }\r\n    destroy() {\r\n        this.logInfo(\"Destroy\", \"destroy\");\r\n        this.onRemove();\r\n        this.detachEmiitedEvents();\r\n        this.removeFromDebug();\r\n        this.isInitialized = false;\r\n    }\r\n}\r\n_attribute = new WeakMap();\r\nexport class CuiHandler extends CuiHandlerBase {\r\n    constructor(componentName, element, attribute, args, utils) {\r\n        super(componentName, element, attribute, args, utils);\r\n    }\r\n    onHandle() {\r\n        this.onInit();\r\n    }\r\n    onRefresh() {\r\n        this.onUpdate();\r\n    }\r\n    onRemove() {\r\n        this.onDestroy();\r\n    }\r\n    /**\r\n     * Helper created for elements that animate - perfroms an action *add*, after timeout it performs *remove*.\r\n     *\r\n     * @param action - action to perfrom\r\n     * @param timeout - timeout specified for action removal\r\n     * @param onFinish - callback to be performed after action is finished after removal\r\n     * @param callback - optional - callback to be executed in mutation on action removal, e.g. additional DOM changes on element\r\n     */\r\n    performAction(actions, timeout, onFinish, callback) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (yield this.actionsHelper.performActions(this.element, actions, timeout, callback)) {\r\n                onFinish();\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n}\r\nexport class CuiInteractableHandler extends CuiHandlerBase {\r\n    constructor(componentName, element, attribute, args, utils) {\r\n        super(componentName, element, attribute, args, utils);\r\n        _openEventId.set(this, void 0);\r\n        _closeEventId.set(this, void 0);\r\n        _keyCloseEventId.set(this, void 0);\r\n        _openAct.set(this, void 0);\r\n        _closeAct.set(this, void 0);\r\n        __classPrivateFieldSet(this, _openEventId, null);\r\n        __classPrivateFieldSet(this, _closeEventId, null);\r\n        __classPrivateFieldSet(this, _keyCloseEventId, null);\r\n        __classPrivateFieldSet(this, _closeAct, []);\r\n        __classPrivateFieldSet(this, _openAct, []);\r\n    }\r\n    onHandle() {\r\n        __classPrivateFieldSet(this, _openEventId, this.onEvent(EVENTS.OPEN, this.openFromEvent.bind(this)));\r\n        __classPrivateFieldSet(this, _closeEventId, this.onEvent(EVENTS.CLOSE, this.closeFromEvent.bind(this)));\r\n        __classPrivateFieldSet(this, _openAct, CuiActionsListFactory.get(this.args.openAct));\r\n        __classPrivateFieldSet(this, _closeAct, CuiActionsListFactory.get(this.args.closeAct));\r\n        this.onInit();\r\n    }\r\n    onRefresh() {\r\n        if (!this.prevArgs || this.args.openAct !== this.prevArgs.openAct) {\r\n            __classPrivateFieldSet(this, _openAct, CuiActionsListFactory.get(this.args.openAct));\r\n        }\r\n        if (!this.prevArgs || this.args.closeAct !== this.prevArgs.closeAct) {\r\n            __classPrivateFieldSet(this, _closeAct, CuiActionsListFactory.get(this.args.closeAct));\r\n        }\r\n        this.onUpdate();\r\n    }\r\n    onRemove() {\r\n        this.detachEvent(EVENTS.CLOSE, __classPrivateFieldGet(this, _closeEventId));\r\n        this.detachEvent(EVENTS.OPEN, __classPrivateFieldGet(this, _openEventId));\r\n        this.onDestroy();\r\n    }\r\n    open(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.checkLockAndWarn(\"open\")) {\r\n                return false;\r\n            }\r\n            if (this.isActive()) {\r\n                this.logWarning(\"Component is already opened\");\r\n                return false;\r\n            }\r\n            if (this.args.escClose || is(this.args.keyClose)) {\r\n                __classPrivateFieldSet(this, _keyCloseEventId, this.onEvent(EVENTS.KEYDOWN, this.onKeyClose.bind(this)));\r\n            }\r\n            if (!this.onBeforeOpen()) {\r\n                return false;\r\n            }\r\n            this.isLocked = true;\r\n            return this.performAction(__classPrivateFieldGet(this, _openAct), this.args.timeout, this.onActionFinish.bind(this, this.onAfterOpen.bind(this), EVENTS.OPENED, args), () => {\r\n                this.helper.setClass(this.activeClassName, this.element);\r\n                AriaAttributes.setAria(this.element, 'aria-expanded', 'true');\r\n            });\r\n            ;\r\n        });\r\n    }\r\n    close(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.checkLockAndWarn(\"close\")) {\r\n                return false;\r\n            }\r\n            if (!this.isActive()) {\r\n                this.logWarning(\"Component is already closed\");\r\n                return false;\r\n            }\r\n            this.detachEvent(EVENTS.KEYDOWN, __classPrivateFieldGet(this, _keyCloseEventId));\r\n            if (!this.onBeforeClose()) {\r\n                return false;\r\n            }\r\n            this.isLocked = true;\r\n            return this.performAction(__classPrivateFieldGet(this, _closeAct), this.args.timeout, this.onActionFinish.bind(this, this.onAfterClose.bind(this), EVENTS.CLOSED, args), () => {\r\n                this.helper.removeClass(this.activeClassName, this.element);\r\n                AriaAttributes.setAria(this.element, 'aria-expanded', 'false');\r\n            });\r\n            ;\r\n        });\r\n    }\r\n    /**\r\n     * Helper created for elements that animate - perfroms an action *add*, after timeout it performs *remove*.\r\n     *\r\n     * @param action - action to perfrom\r\n     * @param timeout - timeout specified for action removal\r\n     * @param onFinish - callback to be performed after action is finished after removal\r\n     * @param callback - optional - callback to be executed in mutation on action removal, e.g. additional DOM changes on element\r\n     */\r\n    performAction(actions, timeout, onFinish, callback) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (yield this.actionsHelper.performActions(this.element, actions, timeout, callback)) {\r\n                onFinish();\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    openFromEvent(args) {\r\n        this.open(args);\r\n    }\r\n    closeFromEvent(args) {\r\n        this.close(args);\r\n    }\r\n    onActionFinish(callback, event, args) {\r\n        callback();\r\n        this.emitEvent(event, {\r\n            timestamp: Date.now(),\r\n            state: args\r\n        });\r\n        this.isLocked = false;\r\n    }\r\n    onKeyClose(ev) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.args.escClose && ev.event.key === \"Escape\" || is(this.args.keyClose) && ev.event.key === this.args.keyClose) {\r\n                yield this.close('Closed by key');\r\n            }\r\n        });\r\n    }\r\n}\r\n_openEventId = new WeakMap(), _closeEventId = new WeakMap(), _keyCloseEventId = new WeakMap(), _openAct = new WeakMap(), _closeAct = new WeakMap();\r\nexport class CuiMutableHandler extends CuiHandlerBase {\r\n    constructor(componentName, element, attribute, args, utils) {\r\n        super(componentName, element, attribute, args, utils);\r\n        _mutionHandler.set(this, void 0);\r\n        __classPrivateFieldSet(this, _mutionHandler, new CuiComponentMutationHandler(element));\r\n        __classPrivateFieldGet(this, _mutionHandler).onMutation(this.mutation.bind(this));\r\n    }\r\n    onHandle() {\r\n        this.onInit();\r\n        __classPrivateFieldGet(this, _mutionHandler).observe();\r\n    }\r\n    onRefresh() {\r\n        __classPrivateFieldGet(this, _mutionHandler).unobserve();\r\n        this.onUpdate();\r\n        __classPrivateFieldGet(this, _mutionHandler).observe();\r\n    }\r\n    onRemove() {\r\n        __classPrivateFieldGet(this, _mutionHandler).unobserve();\r\n        this.onDestroy();\r\n    }\r\n    /**\r\n     * Callback attached to mutation observer set on root element\r\n     *\r\n     * @param record - mutation records\r\n     */\r\n    mutation(records) {\r\n        this._log.debug(\"Element mutation\", \"mutation\");\r\n        this.onMutation(records.reduce((result, item) => {\r\n            if (item.type !== \"childList\") {\r\n                return result;\r\n            }\r\n            if (item.addedNodes.length > 0) {\r\n                result.added.push(...item.addedNodes);\r\n            }\r\n            if (item.removedNodes.length > 0) {\r\n                result.removed.push(...item.removedNodes);\r\n            }\r\n            return result;\r\n        }, {\r\n            added: [],\r\n            removed: []\r\n        }));\r\n    }\r\n}\r\n_mutionHandler = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTitleSelector, _defItemsSelector, _defTimeout, _prefix, _items, _targets, _switchEventId;\r\nimport { CuiMutableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { getIntOrDefault, is, isStringTrue, replacePrefix, getStringOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS, SCOPE_SELECTOR } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst ACCORDION_TITLE_CLS = '> * > .{prefix}-accordion-title';\r\nconst ACCORDION_ITEMS_CLS = '> *';\r\nexport class CuiAccordionArgs {\r\n    constructor(prefix, timeout) {\r\n        _defTitleSelector.set(this, void 0);\r\n        _defItemsSelector.set(this, void 0);\r\n        _defTimeout.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTitleSelector, replacePrefix(ACCORDION_TITLE_CLS, prefix));\r\n        __classPrivateFieldSet(this, _defItemsSelector, replacePrefix(ACCORDION_ITEMS_CLS, prefix));\r\n        this.animation = false;\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        this.single = false;\r\n        this.selector = SCOPE_SELECTOR + __classPrivateFieldGet(this, _defTitleSelector);\r\n        this.items = SCOPE_SELECTOR + __classPrivateFieldGet(this, _defItemsSelector);\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n    }\r\n    parse(args) {\r\n        if (is(args)) {\r\n            this.single = isStringTrue(args.single);\r\n            this.selector = SCOPE_SELECTOR + getStringOrDefault(args.selector, __classPrivateFieldGet(this, _defTitleSelector));\r\n            this.items = SCOPE_SELECTOR + getStringOrDefault(args.content, __classPrivateFieldGet(this, _defItemsSelector));\r\n            this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n            this.animation = isStringTrue(args.animation);\r\n            return;\r\n        }\r\n    }\r\n    isValid() {\r\n        return true;\r\n    }\r\n}\r\n_defTitleSelector = new WeakMap(), _defItemsSelector = new WeakMap(), _defTimeout = new WeakMap();\r\nexport class CuiAccordionComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-accordion`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiAccordionHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiAccordionHandler extends CuiMutableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiAccordionHandler\", element, attribute, new CuiAccordionArgs(prefix, utils.setup.animationTime), utils);\r\n        _items.set(this, void 0);\r\n        _targets.set(this, void 0);\r\n        _switchEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _switchEventId, null);\r\n        __classPrivateFieldSet(this, _items, []);\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        __classPrivateFieldSet(this, _switchEventId, null);\r\n    }\r\n    onInit() {\r\n        if (this.args.isValid()) {\r\n            try {\r\n                this.initTargets();\r\n                __classPrivateFieldSet(this, _switchEventId, this.onEvent(EVENTS.SWITCH, this.onSwitch.bind(this)));\r\n            }\r\n            catch (e) {\r\n                this._log.exception(e, 'handle');\r\n            }\r\n            this._log.debug(\"Initialized\", \"handle\");\r\n        }\r\n    }\r\n    onUpdate() {\r\n        try {\r\n            this.initTargets();\r\n        }\r\n        catch (e) {\r\n            this._log.exception(e, 'handle');\r\n        }\r\n    }\r\n    onDestroy() {\r\n        this.detachEvent(EVENTS.SWITCH, __classPrivateFieldGet(this, _switchEventId));\r\n    }\r\n    onMutation(mutations) {\r\n        if (mutations.added.length > 0 || mutations.removed.length > 0)\r\n            this.initTargets();\r\n    }\r\n    switch(index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._log.debug(\"Switch to: \" + index);\r\n            if (index < 0 || this.isLocked || !this.isInitialized) {\r\n                return false;\r\n            }\r\n            __classPrivateFieldSet(this, _items, this.queryItems());\r\n            if (__classPrivateFieldGet(this, _items).length <= index) {\r\n                return false;\r\n            }\r\n            this.isLocked = true;\r\n            const current = __classPrivateFieldGet(this, _items)[index];\r\n            if (this.helper.hasClass(this.activeClassName, current)) {\r\n                this.helper.removeClassesAs(current, this.activeClassName);\r\n            }\r\n            else {\r\n                if (this.args.single) {\r\n                    this.closeAllExcept(index);\r\n                }\r\n                this.helper.setClassesAs(current, this.activeClassName);\r\n            }\r\n            this.emitEvent(EVENTS.SWITCHED, {\r\n                index: index,\r\n                currentTarget: current,\r\n                timestamp: Date.now()\r\n            });\r\n            this.isLocked = false;\r\n            return true;\r\n        });\r\n    }\r\n    onSwitch(index) {\r\n        this.switch(getIntOrDefault(index, -1)).then(() => {\r\n            this._log.debug(\"Switch from event to \" + index);\r\n        });\r\n    }\r\n    initTargets() {\r\n        __classPrivateFieldSet(this, _items, this.queryItems());\r\n        const t = this.element.querySelectorAll(this.args.selector);\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        t.forEach((item, index) => {\r\n            let target = { element: item };\r\n            this.setListener(target, index);\r\n            __classPrivateFieldGet(this, _targets).push(target);\r\n        });\r\n    }\r\n    closeAllExcept(current) {\r\n        this.mutate(() => {\r\n            __classPrivateFieldGet(this, _items).forEach((item, index) => {\r\n                if (current !== index && this.helper.hasClass(this.activeClassName, item)) {\r\n                    item.classList.remove(this.activeClassName);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    setListener(target, index) {\r\n        target.listener = () => {\r\n            this.switch(index);\r\n        };\r\n        target.element.addEventListener('click', target.listener);\r\n    }\r\n    removeListener(target) {\r\n        if (target.listener) {\r\n            target.element.removeEventListener('click', target.listener);\r\n        }\r\n    }\r\n    queryItems() {\r\n        return [...this.element.querySelectorAll(this.args.items)];\r\n    }\r\n}\r\n_items = new WeakMap(), _targets = new WeakMap(), _switchEventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _unit;\r\nimport { AnimatorError } from \"../models/errors\";\r\nimport { is } from \"../utils/functions\";\r\n/**\r\n * Changes the opacity of the element from 0 to 1\r\n */\r\nexport class OpacityAnimator {\r\n    constructor() {\r\n        this.length = this.to = this.from = -1;\r\n        this.rtl = false;\r\n    }\r\n    setProperty(prop) {\r\n        if (!prop || !is(prop.from) || !is(prop.to)) {\r\n            throw new AnimatorError(\"[OpacityAnimator] Property has incorrect format\");\r\n        }\r\n        this.from = prop.from;\r\n        this.to = prop.to;\r\n        this.length = Math.abs(this.to - this.from);\r\n        this.rtl = this.from > this.to;\r\n    }\r\n    perform(element, progress, factor) {\r\n        if (this.to < 0) {\r\n            return;\r\n        }\r\n        let current = this.length * progress;\r\n        if (element[\"style\"]) {\r\n            element.style.opacity = this.rtl ? Math.max(this.from - current, 0) : Math.min(this.from + current, 1);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Changes any style property of the element\r\n */\r\nexport class PropertyAnimator {\r\n    constructor(property) {\r\n        _unit.set(this, void 0);\r\n        if (!is(property)) {\r\n            throw new AnimatorError(\"[PropertyAnimator] Valid property is required\");\r\n        }\r\n        this.property = property;\r\n        this.length = this.to = this.from = -1;\r\n        this.rtl = false;\r\n        __classPrivateFieldSet(this, _unit, \"\");\r\n    }\r\n    setProperty(prop) {\r\n        if (!prop || !is(prop.from) || !is(prop.to)) {\r\n            throw new AnimatorError(\"[PropertyAnimator] Property has incorrect format\");\r\n        }\r\n        this.from = prop.from;\r\n        this.to = prop.to;\r\n        this.length = Math.abs(this.to - this.from);\r\n        this.rtl = this.from > this.to;\r\n        __classPrivateFieldSet(this, _unit, prop.unit);\r\n    }\r\n    perform(element, progress, factor) {\r\n        if (!this.property) {\r\n            return;\r\n        }\r\n        let current = this.length * progress;\r\n        if (element[\"style\"]) {\r\n            element.style[this.property] = this.createValue(this.rtl ? this.from - current : this.from + current, __classPrivateFieldGet(this, _unit));\r\n        }\r\n    }\r\n    createValue(value, unit) {\r\n        return `${value}${unit !== null && unit !== void 0 ? unit : \"\"}`;\r\n    }\r\n}\r\n_unit = new WeakMap();\r\n/**\r\n * Changes transform property of the element. Supports mulitple properties at the time\r\n */\r\nexport class TransformAnimator {\r\n    constructor() {\r\n        this.prop = undefined;\r\n    }\r\n    setProperty(prop) {\r\n        if (!prop) {\r\n            throw new AnimatorError(\"[TransformAnimator] Property has incorrect format\");\r\n        }\r\n        this.prop = prop;\r\n    }\r\n    build(progress) {\r\n        let props = [];\r\n        for (let name in this.prop) {\r\n            let cur = this.prop[name];\r\n            let diff = Math.abs(cur.to - cur.from);\r\n            let rtl = cur.from > cur.to;\r\n            let val = rtl ? cur.from - (diff * progress) : cur.from + (diff * progress);\r\n            props.push(this.buildSingle(name, val, cur.unit));\r\n        }\r\n        return props.join(\" \");\r\n    }\r\n    buildSingle(name, value, unit) {\r\n        return `${name}(${value}${unit})`;\r\n    }\r\n    perform(element, progress) {\r\n        if (!this.prop) {\r\n            return;\r\n        }\r\n        if (element[\"style\"]) {\r\n            element.style.transform = this.build(progress);\r\n        }\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _engine, _timeout, _factory, _onError, _onFinishCallback, _animators, _lock, _animStartStamp, _element, _cleanOnFinish, _errorOccured, _factory_1, _onError_1, _element_1, _animators_1, _animationEngine, _factory_2, _onError_2;\r\nimport { is } from \"../utils/functions\";\r\nimport { OpacityAnimator, TransformAnimator, PropertyAnimator } from \"./animators\";\r\nexport class CuiAnimation {\r\n    constructor(element) {\r\n        _engine.set(this, void 0);\r\n        _timeout.set(this, void 0);\r\n        _factory.set(this, void 0);\r\n        _onError.set(this, void 0);\r\n        __classPrivateFieldSet(this, _engine, new CuiAnimationEngine(true));\r\n        __classPrivateFieldSet(this, _onError, undefined);\r\n        __classPrivateFieldSet(this, _timeout, 0);\r\n        __classPrivateFieldSet(this, _factory, new AnimatorFactory());\r\n        if (element) {\r\n            __classPrivateFieldGet(this, _engine).setElement(element);\r\n        }\r\n    }\r\n    setElement(element) {\r\n        __classPrivateFieldGet(this, _engine).setElement(element);\r\n    }\r\n    setTimeout(timeout) {\r\n        __classPrivateFieldSet(this, _timeout, timeout);\r\n    }\r\n    onError(callback) {\r\n        __classPrivateFieldSet(this, _onError, callback);\r\n        __classPrivateFieldGet(this, _engine).setOnError(callback);\r\n    }\r\n    onFinish(callback) {\r\n        __classPrivateFieldGet(this, _engine).onFinish(callback);\r\n    }\r\n    perform(props, timeout, factor) {\r\n        if (!is(props)) {\r\n            this.reportError(new Error(\"Animation property cannot be empty\"));\r\n            return;\r\n        }\r\n        let animators = [];\r\n        try {\r\n            for (let prop in props) {\r\n                let animator = __classPrivateFieldGet(this, _factory).get(prop);\r\n                if (!animator)\r\n                    return;\r\n                animator.setProperty(props[prop]);\r\n                animators.push(animator);\r\n                __classPrivateFieldGet(this, _engine).setAnimators(animators);\r\n                __classPrivateFieldGet(this, _engine).animate(timeout !== null && timeout !== void 0 ? timeout : __classPrivateFieldGet(this, _timeout));\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.reportError(e);\r\n            return;\r\n        }\r\n    }\r\n    reportError(e) {\r\n        if (__classPrivateFieldGet(this, _onError)) {\r\n            __classPrivateFieldGet(this, _onError).call(this, e);\r\n        }\r\n        else {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n_engine = new WeakMap(), _timeout = new WeakMap(), _factory = new WeakMap(), _onError = new WeakMap();\r\nclass AnimatorFactory {\r\n    get(id) {\r\n        if (!is(id)) {\r\n            return undefined;\r\n        }\r\n        switch (id) {\r\n            case \"opacity\":\r\n                return new OpacityAnimator();\r\n            case \"transform\":\r\n                return new TransformAnimator();\r\n            default:\r\n                return new PropertyAnimator(id);\r\n        }\r\n    }\r\n}\r\nexport class CuiAnimationEngine {\r\n    constructor(cleanOnFinish) {\r\n        _onFinishCallback.set(this, void 0);\r\n        _animators.set(this, void 0);\r\n        _lock.set(this, void 0);\r\n        // Needed in animation perform - set on first animation exec, cleaned on end\r\n        _animStartStamp.set(this, void 0);\r\n        _element.set(this, void 0);\r\n        _cleanOnFinish.set(this, void 0);\r\n        _errorOccured.set(this, void 0);\r\n        _factory_1.set(this, void 0);\r\n        _onError_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _animators, []);\r\n        __classPrivateFieldSet(this, _element, undefined);\r\n        __classPrivateFieldSet(this, _animStartStamp, undefined);\r\n        __classPrivateFieldSet(this, _cleanOnFinish, cleanOnFinish !== null && cleanOnFinish !== void 0 ? cleanOnFinish : false);\r\n        __classPrivateFieldSet(this, _factory_1, new AnimatorFactory());\r\n        __classPrivateFieldSet(this, _lock, false);\r\n        __classPrivateFieldSet(this, _onFinishCallback, undefined);\r\n        __classPrivateFieldSet(this, _errorOccured, false);\r\n        __classPrivateFieldSet(this, _onError_1, undefined);\r\n    }\r\n    onFinish(callback) {\r\n        __classPrivateFieldSet(this, _onFinishCallback, callback);\r\n    }\r\n    setAnimators(animators) {\r\n        __classPrivateFieldSet(this, _animators, animators);\r\n    }\r\n    setProps(props) {\r\n        if (!is(props)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _animators, []);\r\n        try {\r\n            for (let prop in props) {\r\n                let animator = __classPrivateFieldGet(this, _factory_1).get(prop);\r\n                if (!animator)\r\n                    return;\r\n                animator.setProperty(props[prop]);\r\n                __classPrivateFieldGet(this, _animators).push(animator);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.reportError(e);\r\n        }\r\n    }\r\n    setElement(element) {\r\n        __classPrivateFieldSet(this, _element, element);\r\n    }\r\n    setOnError(callback) {\r\n        __classPrivateFieldSet(this, _onError_1, callback);\r\n    }\r\n    animate(timeout, progress, revert) {\r\n        if (__classPrivateFieldGet(this, _lock)) {\r\n            return;\r\n        }\r\n        if (!__classPrivateFieldGet(this, _element) || __classPrivateFieldGet(this, _animators).length === 0) {\r\n            this.reportError(new Error(\"Animation cannot be performed: element or animators are not set\"));\r\n            return;\r\n        }\r\n        let animationProgress = progress !== null && progress !== void 0 ? progress : 0;\r\n        let shouldCalcRevert = revert ? revert : false;\r\n        __classPrivateFieldSet(this, _lock, true);\r\n        requestAnimationFrame(this.animateAsync.bind(this, timeout, animationProgress, shouldCalcRevert));\r\n    }\r\n    isLocked() {\r\n        return __classPrivateFieldGet(this, _lock);\r\n    }\r\n    animateAsync(timeout, initialProgress, revert, timestamp) {\r\n        if (!__classPrivateFieldGet(this, _animStartStamp)) {\r\n            __classPrivateFieldSet(this, _animStartStamp, timestamp);\r\n        }\r\n        let pr = timestamp - __classPrivateFieldGet(this, _animStartStamp);\r\n        let animationProgress = pr / timeout;\r\n        let currProgress = 0;\r\n        if (initialProgress === 0) {\r\n            currProgress = animationProgress;\r\n        }\r\n        else {\r\n            currProgress = revert ? initialProgress - (animationProgress * initialProgress) : initialProgress + (animationProgress * initialProgress);\r\n        }\r\n        this.callUpdate(revert ? Math.max(currProgress, 0) : Math.min(currProgress, 1), 1);\r\n        if (pr < timeout && !__classPrivateFieldGet(this, _errorOccured)) {\r\n            requestAnimationFrame(this.animateAsync.bind(this, timeout, initialProgress, revert));\r\n        }\r\n        else {\r\n            this.endAnimation(revert);\r\n        }\r\n    }\r\n    endAnimation(reverted) {\r\n        if (__classPrivateFieldGet(this, _cleanOnFinish) && __classPrivateFieldGet(this, _element)) {\r\n            __classPrivateFieldGet(this, _element).removeAttribute(\"style\");\r\n        }\r\n        if (__classPrivateFieldGet(this, _onFinishCallback)) {\r\n            __classPrivateFieldGet(this, _onFinishCallback).call(this, __classPrivateFieldGet(this, _element), reverted, __classPrivateFieldGet(this, _errorOccured));\r\n        }\r\n        __classPrivateFieldSet(this, _errorOccured, false);\r\n        __classPrivateFieldSet(this, _animStartStamp, undefined);\r\n        __classPrivateFieldSet(this, _lock, false);\r\n    }\r\n    callUpdate(progress, factor) {\r\n        try {\r\n            __classPrivateFieldGet(this, _animators).forEach(animator => animator.perform(__classPrivateFieldGet(this, _element), progress, factor));\r\n        }\r\n        catch (e) {\r\n            this.reportError(e);\r\n            __classPrivateFieldSet(this, _errorOccured, true);\r\n        }\r\n    }\r\n    reportError(e) {\r\n        if (__classPrivateFieldGet(this, _onError_1)) {\r\n            __classPrivateFieldGet(this, _onError_1).call(this, e);\r\n        }\r\n        else {\r\n            console.error(\"An error occured in CuiAnimtionEngine\");\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n_onFinishCallback = new WeakMap(), _animators = new WeakMap(), _lock = new WeakMap(), _animStartStamp = new WeakMap(), _element = new WeakMap(), _cleanOnFinish = new WeakMap(), _errorOccured = new WeakMap(), _factory_1 = new WeakMap(), _onError_1 = new WeakMap();\r\nexport class CuiSwipeAnimationEngine {\r\n    constructor(shouldCleanOnFinish) {\r\n        _element_1.set(this, void 0);\r\n        _animators_1.set(this, void 0);\r\n        _animationEngine.set(this, void 0);\r\n        _factory_2.set(this, void 0);\r\n        _onError_2.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element_1, undefined);\r\n        __classPrivateFieldSet(this, _animators_1, []);\r\n        __classPrivateFieldSet(this, _animationEngine, new CuiAnimationEngine(shouldCleanOnFinish));\r\n        __classPrivateFieldSet(this, _factory_2, new AnimatorFactory());\r\n        __classPrivateFieldSet(this, _onError_2, undefined);\r\n    }\r\n    setElement(element) {\r\n        __classPrivateFieldSet(this, _element_1, element);\r\n    }\r\n    setOnFinish(callback) {\r\n        __classPrivateFieldGet(this, _animationEngine).onFinish(callback);\r\n    }\r\n    setOnError(callback) {\r\n        __classPrivateFieldSet(this, _onError_2, callback);\r\n        __classPrivateFieldGet(this, _animationEngine).setOnError(callback);\r\n    }\r\n    setProps(props) {\r\n        if (!is(props)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _animators_1, []);\r\n        try {\r\n            for (let prop in props) {\r\n                let animator = __classPrivateFieldGet(this, _factory_2).get(prop);\r\n                if (!animator)\r\n                    return;\r\n                animator.setProperty(props[prop]);\r\n                __classPrivateFieldGet(this, _animators_1).push(animator);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.reportError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Perform single update on animators\r\n     * @param progress - progress value to be set to animators 0..1\r\n     */\r\n    update(progress) {\r\n        if (!__classPrivateFieldGet(this, _element_1) || __classPrivateFieldGet(this, _animators_1).length === 0) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _animators_1).forEach(animator => animator.perform(__classPrivateFieldGet(this, _element_1), Math.min(progress, 1), 1));\r\n    }\r\n    /**\r\n     * Perform single update on animators in RAF\r\n     * @param progress - progress value to be set to animators 0..1\r\n     */\r\n    updateAsync(progress) {\r\n        requestAnimationFrame(this.update.bind(this, progress));\r\n    }\r\n    /**\r\n     * Finish swipe animation using animation engine\r\n     * @param progress - initial progress value 0..1\r\n     * @param timeout - time for animation to perform\r\n     * @param revert - whether animation should return back to 0 or progress to the end\r\n     */\r\n    finish(progress, timeout, revert) {\r\n        if (__classPrivateFieldGet(this, _element_1))\r\n            __classPrivateFieldGet(this, _animationEngine).setElement(__classPrivateFieldGet(this, _element_1));\r\n        __classPrivateFieldGet(this, _animationEngine).setAnimators(__classPrivateFieldGet(this, _animators_1));\r\n        __classPrivateFieldGet(this, _animationEngine).animate(timeout, progress, revert);\r\n    }\r\n    reportError(e) {\r\n        if (__classPrivateFieldGet(this, _onError_2)) {\r\n            __classPrivateFieldGet(this, _onError_2).call(this, e);\r\n        }\r\n        else {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n_element_1 = new WeakMap(), _animators_1 = new WeakMap(), _animationEngine = new WeakMap(), _factory_2 = new WeakMap(), _onError_2 = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _prefix_1, _swipeEngine, _isTracking, _startX, _ratio, _swipeAnimation, _moveEventId;\r\nimport { SWIPE_ANIMATIONS_DEFINITIONS } from \"cui-light-core/dist/esm/animation/definitions\";\r\nimport { CuiInteractableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiSwipeAnimationEngine } from \"cui-light-core/dist/esm/animation/engine\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { boolStringOrDefault, getIntOrDefault, getStringOrDefault, replacePrefix } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS, CLASSES } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst BANNER_OPEN_ANIMATION = \".{prefix}-animation-fade-in\";\r\nconst BANNER_CLOSE_ANIMATION = \".{prefix}-animation-fade-out\";\r\nexport class CuiBannerArgs {\r\n    constructor(prefix, timeout) {\r\n        _defTimeout.set(this, void 0);\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        this.escClose = false;\r\n        this.keyClose = \"\";\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.swipe = false;\r\n        this.openAct = \"\";\r\n        this.closeAct = \"\";\r\n    }\r\n    parse(args) {\r\n        this.swipe = boolStringOrDefault(args.swipe, false);\r\n        this.escClose = false;\r\n        this.keyClose = \"\";\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.openAct = getStringOrDefault(args.openAct, replacePrefix(BANNER_OPEN_ANIMATION, __classPrivateFieldGet(this, _prefix)));\r\n        this.closeAct = getStringOrDefault(args.closeAct, replacePrefix(BANNER_CLOSE_ANIMATION, __classPrivateFieldGet(this, _prefix)));\r\n    }\r\n}\r\n_defTimeout = new WeakMap(), _prefix = new WeakMap();\r\nexport class CuiBanerComponent {\r\n    constructor(prefix) {\r\n        _prefix_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix_1)}-banner`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiBannerHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix_1));\r\n    }\r\n}\r\n_prefix_1 = new WeakMap();\r\nexport class CuiBannerHandler extends CuiInteractableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiBannerHandler\", element, attribute, new CuiBannerArgs(prefix, utils.setup.animationTime), utils);\r\n        _swipeEngine.set(this, void 0);\r\n        _isTracking.set(this, void 0);\r\n        _startX.set(this, void 0);\r\n        _ratio.set(this, void 0);\r\n        _swipeAnimation.set(this, void 0);\r\n        _moveEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _swipeEngine, new CuiSwipeAnimationEngine(true));\r\n        __classPrivateFieldGet(this, _swipeEngine).setOnFinish(this.onSwipeFinish.bind(this));\r\n        __classPrivateFieldGet(this, _swipeEngine).setElement(this.element);\r\n        __classPrivateFieldSet(this, _startX, -1);\r\n        __classPrivateFieldSet(this, _ratio, 0);\r\n        __classPrivateFieldSet(this, _swipeAnimation, SWIPE_ANIMATIONS_DEFINITIONS[\"fade\"]);\r\n        __classPrivateFieldSet(this, _moveEventId, null);\r\n        __classPrivateFieldSet(this, _isTracking, false);\r\n    }\r\n    onInit() {\r\n        //   this.#moveEventId = this.onEvent(EVENTS.GLOBAL_MOVE, this.onMove.bind(this));\r\n        if (!this.isActive()) {\r\n            this.open();\r\n        }\r\n    }\r\n    onUpdate() {\r\n    }\r\n    onDestroy() {\r\n        this.detachEvent(EVENTS.GLOBAL_MOVE, __classPrivateFieldGet(this, _moveEventId));\r\n    }\r\n    onBeforeOpen() {\r\n        return true;\r\n    }\r\n    onAfterOpen() {\r\n        if (this.args.swipe) {\r\n            __classPrivateFieldSet(this, _moveEventId, this.onEvent(EVENTS.GLOBAL_MOVE, this.onMove.bind(this)));\r\n        }\r\n    }\r\n    onAfterClose() {\r\n        this.detachEvent(EVENTS.GLOBAL_MOVE, __classPrivateFieldGet(this, _moveEventId));\r\n    }\r\n    onBeforeClose() {\r\n        return true;\r\n    }\r\n    onMove(data) {\r\n        if (this.isLocked) {\r\n            return;\r\n        }\r\n        let current = this.element;\r\n        switch (data.type) {\r\n            case \"down\":\r\n                if (__classPrivateFieldGet(this, _isTracking) || !current.contains(data.target)) {\r\n                    return;\r\n                }\r\n                __classPrivateFieldSet(this, _isTracking, true);\r\n                __classPrivateFieldSet(this, _startX, data.x);\r\n                this.helper.setClassesAs(document.body, CLASSES.swipingOn);\r\n                data.event.preventDefault();\r\n                break;\r\n            case \"up\":\r\n                if (!__classPrivateFieldGet(this, _isTracking) && __classPrivateFieldGet(this, _ratio) == 0) {\r\n                    break;\r\n                }\r\n                let absRatio = Math.abs(__classPrivateFieldGet(this, _ratio));\r\n                let timeout = absRatio * this.args.timeout;\r\n                let back = absRatio <= 0.4;\r\n                // Lock component until animation is finished\r\n                this.isLocked = true;\r\n                __classPrivateFieldGet(this, _swipeEngine).finish(absRatio, timeout, back);\r\n                this.helper.removeClassesAs(document.body, CLASSES.swipingOn);\r\n                __classPrivateFieldSet(this, _isTracking, false);\r\n                break;\r\n            case \"move\":\r\n                if (__classPrivateFieldGet(this, _isTracking)) {\r\n                    let newRatio = (data.x - __classPrivateFieldGet(this, _startX)) / current.offsetWidth;\r\n                    if (__classPrivateFieldGet(this, _ratio) >= 0 && newRatio <= 0 || __classPrivateFieldGet(this, _ratio) <= 0 && newRatio > 0) {\r\n                        __classPrivateFieldGet(this, _swipeEngine).setProps(newRatio > 0 ? __classPrivateFieldGet(this, _swipeAnimation).current.right : __classPrivateFieldGet(this, _swipeAnimation).current.left);\r\n                    }\r\n                    __classPrivateFieldSet(this, _ratio, newRatio);\r\n                    this.mutate(() => {\r\n                        __classPrivateFieldGet(this, _swipeEngine).update(Math.abs(__classPrivateFieldGet(this, _ratio)));\r\n                    });\r\n                    data.event.preventDefault();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onSwipeFinish(element, reverted, error) {\r\n        this.isLocked = false;\r\n        if (!reverted) {\r\n            this.helper.removeClass(this.activeClassName, this.element);\r\n            AriaAttributes.setAria(this.element, 'aria-expanded', 'false');\r\n        }\r\n        __classPrivateFieldSet(this, _ratio, 0);\r\n        __classPrivateFieldSet(this, _startX, 0);\r\n    }\r\n}\r\n_swipeEngine = new WeakMap(), _isTracking = new WeakMap(), _startX = new WeakMap(), _ratio = new WeakMap(), _swipeAnimation = new WeakMap(), _moveEventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _element, _scale, _appender;\r\nimport { createElementFromString, getIntOrDefault, is } from \"../utils/functions\";\r\nexport class IconBuilder {\r\n    constructor(svgString) {\r\n        _element.set(this, void 0);\r\n        _scale.set(this, void 0);\r\n        _appender.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element, svgString);\r\n        __classPrivateFieldSet(this, _scale, 1);\r\n        __classPrivateFieldSet(this, _appender, new IconScaleAppender());\r\n    }\r\n    setScale(scale) {\r\n        __classPrivateFieldSet(this, _scale, scale);\r\n        return this;\r\n    }\r\n    build() {\r\n        let created = createElementFromString(__classPrivateFieldGet(this, _element));\r\n        if (is(created) && __classPrivateFieldGet(this, _scale)) {\r\n            // @ts-ignore created is checked already\r\n            __classPrivateFieldGet(this, _appender).append(created, __classPrivateFieldGet(this, _scale));\r\n        }\r\n        return created;\r\n    }\r\n}\r\n_element = new WeakMap(), _scale = new WeakMap(), _appender = new WeakMap();\r\nexport class IconScaleAppender {\r\n    append(element, value) {\r\n        let width = getIntOrDefault(element.getAttribute(\"width\"), 20);\r\n        let height = getIntOrDefault(element.getAttribute(\"height\"), 20);\r\n        element.setAttribute(\"width\", (width * value).toString());\r\n        element.setAttribute(\"height\", (height * value).toString());\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _factor, _full, _path, _attr, _progressEventId;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { is, getRangeValue, isString, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { ICONS, EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { IconBuilder } from \"cui-light-core/dist/esm/builders/icon\";\r\nexport class CuiCircleArgs {\r\n    constructor() {\r\n        this.progress = 0;\r\n    }\r\n    parse(val) {\r\n        if (!is(val)) {\r\n            this.progress = 0;\r\n        }\r\n        else if (isString(val)) {\r\n            this.progress = getIntOrDefault(val, 0);\r\n        }\r\n        else {\r\n            this.progress = getIntOrDefault(val.progress, 0);\r\n        }\r\n    }\r\n}\r\nexport class CuiCircleComponent {\r\n    constructor(prefix) {\r\n        this.attribute = (prefix !== null && prefix !== void 0 ? prefix : 'cui') + '-circle-progress';\r\n        ICONS['special_circle_progress'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  class=\\\"circle-progress\\\" viewBox=\\\"0 0 100 100\\\" width=\\\"100\\\" height=\\\"100\\\"><path class=\\\"circle-progress-path\\\" d=\\\"M 50,5.3660047 A 44.867708,44.633994 0 0 1 94.867709,49.999997 44.867708,44.633994 0 0 1 50,94.633995 44.867708,44.633994 0 0 1 5.1322908,50.000001 44.867708,44.633994 0 0 1 50,5.3660047\\\"></path></svg>\";\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiCircleHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiCircleHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiCircleHandler\", element, attribute, new CuiCircleArgs(), utils);\r\n        _factor.set(this, void 0);\r\n        _full.set(this, void 0);\r\n        _path.set(this, void 0);\r\n        _attr.set(this, void 0);\r\n        _progressEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _factor, __classPrivateFieldSet(this, _full, 0));\r\n        __classPrivateFieldSet(this, _path, null);\r\n        __classPrivateFieldSet(this, _attr, attribute);\r\n        __classPrivateFieldSet(this, _progressEventId, null);\r\n    }\r\n    onInit() {\r\n        const iconSvg = new IconBuilder(ICONS['special_circle_progress']).build();\r\n        if (!is(iconSvg)) {\r\n            this.logError(\"SVG circle was not created\", \"onInit\");\r\n            return;\r\n        }\r\n        const svg = this.element.querySelector('svg');\r\n        if (is(svg)) {\r\n            //@ts-ignore svg checked\r\n            svg.remove();\r\n        }\r\n        //@ts-ignore iconSvg checked\r\n        this.element.appendChild(iconSvg);\r\n        __classPrivateFieldSet(this, _path, this.element.querySelector('.circle-progress-path'));\r\n        __classPrivateFieldSet(this, _full, __classPrivateFieldGet(this, _path).getTotalLength());\r\n        __classPrivateFieldSet(this, _factor, __classPrivateFieldGet(this, _full) / 100);\r\n        this.fetch(this.readStyle);\r\n        __classPrivateFieldSet(this, _progressEventId, this.onEvent(EVENTS.PROGRESS_CHANGE, this.onSetProgress.bind(this)));\r\n    }\r\n    onUpdate() {\r\n        this.fetch(this.readStyle);\r\n        this.emitEvent(EVENTS.PROGRESS_CHANGED, {\r\n            timestamp: Date.now(),\r\n            progress: this.args.progress\r\n        });\r\n    }\r\n    onDestroy() {\r\n        this.detachEvent(EVENTS.PROGRESS_CHANGE, __classPrivateFieldGet(this, _progressEventId));\r\n    }\r\n    onSetProgress(val) {\r\n        if (is(val)) {\r\n            this.element.setAttribute(__classPrivateFieldGet(this, _attr), val);\r\n        }\r\n    }\r\n    updateStyle(value) {\r\n        __classPrivateFieldGet(this, _path).style.strokeDashoffset = value;\r\n    }\r\n    readStyle() {\r\n        if (this.prevArgs && this.args.progress === this.prevArgs.progress) {\r\n            return;\r\n        }\r\n        const progress = getRangeValue(this.args.progress, 0, 100);\r\n        this.mutate(this.updateStyle, __classPrivateFieldGet(this, _full) - __classPrivateFieldGet(this, _factor) * progress);\r\n    }\r\n}\r\n_factor = new WeakMap(), _full = new WeakMap(), _path = new WeakMap(), _attr = new WeakMap(), _progressEventId = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _eventId;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { getStringOrDefault, getIntOrDefault, is, isString, isStringTrue, getParentCuiElement, are } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiCloseArgs {\r\n    constructor(timeout) {\r\n        _defTimeout.set(this, void 0);\r\n        this.target = \"\";\r\n        this.action = \"\";\r\n        this.prevent = false;\r\n        this.state = \"\";\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n    }\r\n    parse(args) {\r\n        if (is(args) && isString(args)) {\r\n            this.target = args;\r\n            this.action = \"\";\r\n            this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n            this.prevent = false;\r\n            this.state = \"\";\r\n            return;\r\n        }\r\n        this.target = getStringOrDefault(args.target, \"\");\r\n        this.action = args.action;\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.prevent = args.prevent && isStringTrue(args.prevent);\r\n        this.state = args.state;\r\n    }\r\n}\r\n_defTimeout = new WeakMap();\r\nexport class CuiCloseComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-close`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiCloseHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiCloseHandler extends CuiHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiCloseHandler\", element, attribute, new CuiCloseArgs(utils.setup.animationTime), utils);\r\n        _eventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _eventId, null);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onInit() {\r\n        this.element.addEventListener('click', this.onClick);\r\n        __classPrivateFieldSet(this, _eventId, this.onEvent(EVENTS.CLOSE, this.onClose.bind(this)));\r\n    }\r\n    onUpdate() {\r\n        //\r\n    }\r\n    onDestroy() {\r\n        this.element.removeEventListener('click', this.onClick);\r\n        this.detachEvent(EVENTS.CLOSE, __classPrivateFieldGet(this, _eventId));\r\n    }\r\n    onClick(ev) {\r\n        this.onClose(ev);\r\n        if (this.args.prevent)\r\n            ev.preventDefault();\r\n    }\r\n    onClose(ev) {\r\n        if (this.isLocked) {\r\n            return;\r\n        }\r\n        const target = this.getTarget();\r\n        if (!is(target)) {\r\n            this._log.warning(`Target ${this.args.target} not found`, 'onClick');\r\n            return;\r\n        }\r\n        this.isLocked = true;\r\n        //@ts-ignore target is checked\r\n        this.run(target).then((result) => {\r\n            this.onActionFinish(ev, result);\r\n        }).catch((e) => {\r\n            this._log.exception(e);\r\n        }).finally(() => {\r\n            this.isLocked = false;\r\n        });\r\n    }\r\n    run(target) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let cuiId = target.$cuid;\r\n            if (is(cuiId)) {\r\n                yield this.utils.bus.emit(EVENTS.CLOSE, cuiId, this.args.state);\r\n                return false;\r\n            }\r\n            else if (are(this.args.action, this.args.timeout)) {\r\n                let actions = CuiActionsListFactory.get(this.args.action);\r\n                return this.actionsHelper.performActions(target, actions, this.args.timeout, () => {\r\n                    this.removeActiveClass(target);\r\n                });\r\n            }\r\n            else {\r\n                this.removeActiveClassAsync(target);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    removeActiveClass(target) {\r\n        if (is(target) && this.helper.hasClass(this.activeClassName, target)) {\r\n            this.helper.removeClass(this.activeClassName, target);\r\n        }\r\n    }\r\n    removeActiveClassAsync(target) {\r\n        this.fetch(() => {\r\n            if (is(target) && this.helper.hasClass(this.activeClassName, target)) {\r\n                this.helper.removeClassesAs(target, this.activeClassName);\r\n            }\r\n        });\r\n    }\r\n    onActionFinish(ev, shouldEmit) {\r\n        if (shouldEmit)\r\n            this.emitClose(ev);\r\n    }\r\n    getTarget() {\r\n        var _a;\r\n        if (!is(this.args.target)) {\r\n            return getParentCuiElement(this.element);\r\n        }\r\n        return (_a = document.querySelector(this.args.target)) !== null && _a !== void 0 ? _a : getParentCuiElement(this.element);\r\n    }\r\n    emitClose(ev) {\r\n        this.emitEvent(EVENTS.CLOSED, {\r\n            timestamp: Date.now(),\r\n            state: this.args.state,\r\n            event: ev\r\n        });\r\n    }\r\n}\r\n_eventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _prefix_1, _bodyClass, _scrollY;\r\nimport { replacePrefix, isStringTrue, getStringOrDefault, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { CuiInteractableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nconst COVER_OPEN_ANIMATION_CLASS = '.{prefix}-dialog-default-in';\r\nconst COVER_CLOSE_ANIMATION_CLASS = '.{prefix}-dialog-default-out';\r\nconst bodyClass = '{prefix}-cover-open';\r\nexport class CuiCoverArgs {\r\n    constructor(prefix, defTimeout) {\r\n        _defTimeout.set(this, void 0);\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, defTimeout !== null && defTimeout !== void 0 ? defTimeout : 300);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        this.escClose = false;\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.openAct = \"\";\r\n        this.closeAct = \"\";\r\n        this.keyClose = \"\";\r\n    }\r\n    parse(args) {\r\n        this.escClose = isStringTrue(args.escClose);\r\n        this.keyClose = args.keyClose;\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.openAct = getStringOrDefault(args.openAct, replacePrefix(COVER_OPEN_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n        this.closeAct = getStringOrDefault(args.closeAct, replacePrefix(COVER_CLOSE_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n    }\r\n}\r\n_defTimeout = new WeakMap(), _prefix = new WeakMap();\r\nexport class CuiCoverComponent {\r\n    constructor(prefix) {\r\n        _prefix_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix_1)}-cover`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiCoverHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix_1));\r\n    }\r\n}\r\n_prefix_1 = new WeakMap();\r\nexport class CuiCoverHandler extends CuiInteractableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiDialogHandler\", element, attribute, new CuiCoverArgs(prefix, utils.setup.animationTimeLong), utils);\r\n        _bodyClass.set(this, void 0);\r\n        _scrollY.set(this, void 0);\r\n        __classPrivateFieldSet(this, _bodyClass, replacePrefix(bodyClass, prefix));\r\n        __classPrivateFieldSet(this, _scrollY, 0);\r\n    }\r\n    onInit() {\r\n        AriaAttributes.setAria(this.element, 'aria-modal', \"\");\r\n    }\r\n    onUpdate() {\r\n    }\r\n    onDestroy() {\r\n    }\r\n    onBeforeOpen() {\r\n        if (this.isAnyActive()) {\r\n            return false;\r\n        }\r\n        __classPrivateFieldSet(this, _scrollY, window.pageYOffset);\r\n        return true;\r\n    }\r\n    onAfterOpen() {\r\n        this.helper.setClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        document.body.style.top = `-${__classPrivateFieldGet(this, _scrollY)}px`;\r\n        AriaAttributes.setAria(this.element, 'aria-hidden', \"false\");\r\n    }\r\n    onAfterClose() {\r\n        document.body.style.top = '';\r\n        window.scrollTo(0, (__classPrivateFieldGet(this, _scrollY) || 0) * -1);\r\n        __classPrivateFieldSet(this, _scrollY, 0);\r\n        this.helper.removeClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        AriaAttributes.setAria(this.element, 'aria-hidden', \"true\");\r\n    }\r\n    onBeforeClose() {\r\n        return true;\r\n    }\r\n    isAnyActive() {\r\n        return this.helper.hasClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n    }\r\n}\r\n_bodyClass = new WeakMap(), _scrollY = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _prefix_1, _prefix_2, _bodyClass, _scrollY, _windowClickEventId;\r\nimport { replacePrefix, isStringTrue, getStringOrDefault, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { CuiInteractableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nconst DIALOG_OPEN_ANIMATION_CLASS = '.{prefix}-dialog-default-in';\r\nconst DIALOG_CLOSE_ANIMATION_CLASS = '.{prefix}-dialog-default-out';\r\nconst bodyClass = '{prefix}-dialog-open';\r\nconst CONTAINER = '.{prefix}-dialog-container';\r\nexport class CuiDialogArgs {\r\n    constructor(prefix, defTimeout) {\r\n        _defTimeout.set(this, void 0);\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, defTimeout !== null && defTimeout !== void 0 ? defTimeout : 300);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        this.escClose = false;\r\n        this.outClose = false;\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.openAct = \"\";\r\n        this.closeAct = \"\";\r\n        this.keyClose = \"\";\r\n    }\r\n    parse(args) {\r\n        this.escClose = isStringTrue(args.escClose);\r\n        this.outClose = isStringTrue(args.outClose);\r\n        this.keyClose = args.keyClose;\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.openAct = getStringOrDefault(args.openAct, replacePrefix(DIALOG_OPEN_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n        this.closeAct = getStringOrDefault(args.closeAct, replacePrefix(DIALOG_CLOSE_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n    }\r\n}\r\n_defTimeout = new WeakMap(), _prefix = new WeakMap();\r\nexport class CuiDialogComponent {\r\n    constructor(prefix) {\r\n        _prefix_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix_1)}-dialog`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiDialogHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix_1));\r\n    }\r\n}\r\n_prefix_1 = new WeakMap();\r\nexport class CuiDialogHandler extends CuiInteractableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiDialogHandler\", element, attribute, new CuiDialogArgs(prefix, utils.setup.animationTimeLong), utils);\r\n        _prefix_2.set(this, void 0);\r\n        _bodyClass.set(this, void 0);\r\n        _scrollY.set(this, void 0);\r\n        _windowClickEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _bodyClass, replacePrefix(bodyClass, prefix));\r\n        __classPrivateFieldSet(this, _prefix_2, prefix);\r\n        __classPrivateFieldSet(this, _scrollY, 0);\r\n        __classPrivateFieldSet(this, _windowClickEventId, null);\r\n    }\r\n    onInit() {\r\n        AriaAttributes.setAria(this.element, 'aria-modal', \"\");\r\n    }\r\n    onUpdate() {\r\n    }\r\n    onDestroy() {\r\n    }\r\n    onBeforeOpen() {\r\n        if (this.isAnyActive()) {\r\n            return false;\r\n        }\r\n        __classPrivateFieldSet(this, _scrollY, window.pageYOffset);\r\n        return true;\r\n    }\r\n    onAfterOpen() {\r\n        if (this.args.outClose) {\r\n            __classPrivateFieldSet(this, _windowClickEventId, this.onEvent(EVENTS.WINDOW_CLICK, this.onWindowClick.bind(this)));\r\n        }\r\n        this.helper.setClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        document.body.style.top = `-${__classPrivateFieldGet(this, _scrollY)}px`;\r\n    }\r\n    onAfterClose() {\r\n        document.body.style.top = '';\r\n        window.scrollTo(0, (__classPrivateFieldGet(this, _scrollY) || 0) * -1);\r\n        __classPrivateFieldSet(this, _scrollY, 0);\r\n        this.helper.removeClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        this.detachEvent(EVENTS.WINDOW_CLICK, __classPrivateFieldGet(this, _windowClickEventId));\r\n    }\r\n    onBeforeClose() {\r\n        return true;\r\n    }\r\n    isAnyActive() {\r\n        return this.helper.hasClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n    }\r\n    onWindowClick(ev) {\r\n        let container = this.element.querySelector(replacePrefix(CONTAINER, __classPrivateFieldGet(this, _prefix_2)));\r\n        if (container && !container.contains(ev.target)) {\r\n            this.close('out').then(() => {\r\n                this._log.debug(\"Closed by click outside\");\r\n            });\r\n        }\r\n    }\r\n}\r\n_prefix_2 = new WeakMap(), _bodyClass = new WeakMap(), _scrollY = new WeakMap(), _windowClickEventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _target, _callback, _inProgress, _isHovering, _isAttached, _onOverBound, _onMoveBound, _onOutBound;\r\nimport { are } from \"../utils/functions\";\r\nexport class CuiHoverListener {\r\n    constructor(target) {\r\n        _target.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        _inProgress.set(this, void 0);\r\n        _isHovering.set(this, void 0);\r\n        _isAttached.set(this, void 0);\r\n        _onOverBound.set(this, void 0);\r\n        _onMoveBound.set(this, void 0);\r\n        _onOutBound.set(this, void 0);\r\n        __classPrivateFieldSet(this, _target, target);\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _isHovering, false);\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n        __classPrivateFieldSet(this, _onMoveBound, this.onMouseMove.bind(this));\r\n        __classPrivateFieldSet(this, _onOutBound, this.onMouseOut.bind(this));\r\n        __classPrivateFieldSet(this, _onOverBound, this.onMouseOver.bind(this));\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _inProgress);\r\n    }\r\n    attach() {\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).addEventListener(\"mouseover\", __classPrivateFieldGet(this, _onOverBound));\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).addEventListener(\"mousemove\", __classPrivateFieldGet(this, _onMoveBound));\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).addEventListener(\"mouseout\", __classPrivateFieldGet(this, _onOutBound));\r\n        __classPrivateFieldSet(this, _isAttached, true);\r\n    }\r\n    detach() {\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).removeEventListener(\"mouseover\", __classPrivateFieldGet(this, _onOverBound));\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).removeEventListener(\"mousemove\", __classPrivateFieldGet(this, _onMoveBound));\r\n        // @ts-ignore\r\n        __classPrivateFieldGet(this, _target).removeEventListener(\"mouseout\", __classPrivateFieldGet(this, _onOutBound));\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n    }\r\n    emit(mouseEvent, force) {\r\n        if (!are(__classPrivateFieldGet(this, _callback))) {\r\n            return;\r\n        }\r\n        if (!force && __classPrivateFieldGet(this, _inProgress)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, true);\r\n        window.requestAnimationFrame(this.invoke.bind(this, {\r\n            isHovering: __classPrivateFieldGet(this, _isHovering),\r\n            event: mouseEvent,\r\n            timestamp: Date.now()\r\n        }));\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _isAttached);\r\n    }\r\n    invoke(ev) {\r\n        if (__classPrivateFieldGet(this, _callback))\r\n            __classPrivateFieldGet(this, _callback).call(this, ev);\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n    }\r\n    onMouseOver(ev) {\r\n        __classPrivateFieldSet(this, _isHovering, true);\r\n        this.emit(ev, true);\r\n    }\r\n    onMouseOut(ev) {\r\n        __classPrivateFieldSet(this, _isHovering, false);\r\n        this.emit(ev, true);\r\n    }\r\n    onMouseMove(ev) {\r\n        this.emit(ev, false);\r\n    }\r\n}\r\n_target = new WeakMap(), _callback = new WeakMap(), _inProgress = new WeakMap(), _isHovering = new WeakMap(), _isAttached = new WeakMap(), _onOverBound = new WeakMap(), _onMoveBound = new WeakMap(), _onOutBound = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _box, _targetWidth, _targetHeight, _margin;\r\nimport { CuiPositionError } from \"../models/errors\";\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiBasePositionEvaluator {\r\n    constructor() {\r\n        _box.set(this, void 0);\r\n        _targetWidth.set(this, void 0);\r\n        _targetHeight.set(this, void 0);\r\n        _margin.set(this, void 0);\r\n        __classPrivateFieldSet(this, _targetHeight, -1);\r\n        __classPrivateFieldSet(this, _targetWidth, -1);\r\n        __classPrivateFieldSet(this, _box, undefined);\r\n        __classPrivateFieldSet(this, _margin, 0);\r\n    }\r\n    setElementBox(box) {\r\n        __classPrivateFieldSet(this, _box, box);\r\n    }\r\n    setTarget(targetBox) {\r\n        __classPrivateFieldSet(this, _targetWidth, targetBox.width);\r\n        __classPrivateFieldSet(this, _targetHeight, targetBox.height);\r\n    }\r\n    setMargin(value) {\r\n        __classPrivateFieldSet(this, _margin, value);\r\n    }\r\n    getVerticalPosition(value) {\r\n        switch (value) {\r\n            case 'top':\r\n                return this.getTopPosition();\r\n            case \"bottom\":\r\n                return this.getBottomPosition();\r\n            case \"middle\":\r\n                return this.getMiddlePosition();\r\n            default:\r\n                return -1;\r\n        }\r\n    }\r\n    getHorizontalPosition(value) {\r\n        switch (value) {\r\n            case 'left':\r\n                return this.getLeftPosition();\r\n            case \"right\":\r\n                return this.getRightPosition();\r\n            case \"center\":\r\n                return this.getCenterPosition();\r\n            default:\r\n                return -1;\r\n        }\r\n    }\r\n    getAutoVerticalPosition(initial) {\r\n        let innerHeight = window.innerHeight;\r\n        let number = this.getVerticalPosition(initial);\r\n        if ((initial === 'top' || initial === \"middle\") && number < 0) {\r\n            return [this.getVerticalPosition(\"bottom\"), \"bottom\"];\r\n        }\r\n        else if ((initial === \"bottom\" || initial === \"middle\") && number + __classPrivateFieldGet(this, _targetHeight) > innerHeight) {\r\n            return [this.getVerticalPosition(\"top\"), \"top\"];\r\n        }\r\n        return [number, initial];\r\n    }\r\n    getAutoHorizontalPosition(initial) {\r\n        let innerWidth = window.innerWidth;\r\n        let number = this.getHorizontalPosition(initial);\r\n        if ((initial === 'right' || initial === \"center\") && number < 0) {\r\n            return [this.getHorizontalPosition(\"left\"), \"left\"];\r\n        }\r\n        else if ((initial === 'left' || initial === \"center\") && number + __classPrivateFieldGet(this, _targetWidth) > innerWidth) {\r\n            return [this.getHorizontalPosition(\"right\"), \"right\"];\r\n        }\r\n        return [number, initial];\r\n    }\r\n    getTopPosition() {\r\n        this.throwIfNotValid(\"getTopPosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return __classPrivateFieldGet(this, _box).top - __classPrivateFieldGet(this, _margin) - __classPrivateFieldGet(this, _targetHeight);\r\n    }\r\n    getBottomPosition() {\r\n        this.throwIfNotValid(\"getBottomPosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return __classPrivateFieldGet(this, _box).top + __classPrivateFieldGet(this, _box).height + __classPrivateFieldGet(this, _margin);\r\n    }\r\n    getMiddlePosition() {\r\n        this.throwIfNotValid(\"getMiddlePosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return (__classPrivateFieldGet(this, _box).top + __classPrivateFieldGet(this, _box).height / 2) - __classPrivateFieldGet(this, _targetHeight) / 2;\r\n    }\r\n    getLeftPosition() {\r\n        this.throwIfNotValid(\"getLeftPosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return __classPrivateFieldGet(this, _box).left;\r\n    }\r\n    getRightPosition() {\r\n        this.throwIfNotValid(\"getRightPosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return __classPrivateFieldGet(this, _box).left + __classPrivateFieldGet(this, _box).width - __classPrivateFieldGet(this, _targetWidth);\r\n    }\r\n    getCenterPosition() {\r\n        this.throwIfNotValid(\"getCenterPosition\");\r\n        // @ts-ignore - already checked in validate\r\n        return (__classPrivateFieldGet(this, _box).left + __classPrivateFieldGet(this, _box).width / 2) - __classPrivateFieldGet(this, _targetWidth) / 2;\r\n    }\r\n    validate() {\r\n        return is(__classPrivateFieldGet(this, _box)) && __classPrivateFieldGet(this, _targetHeight) > 0 && __classPrivateFieldGet(this, _targetWidth) > 0;\r\n    }\r\n    throwIfNotValid(method) {\r\n        if (!this.validate()) {\r\n            throw new CuiPositionError(`[${method}] Position cannot be calculated: missing data [width: ${__classPrivateFieldGet(this, _targetWidth)}][height: ${__classPrivateFieldGet(this, _targetHeight)}]`);\r\n        }\r\n    }\r\n}\r\n_box = new WeakMap(), _targetWidth = new WeakMap(), _targetHeight = new WeakMap(), _margin = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _static, _preferred, _evaluator, _log;\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\nimport { is } from \"../utils/functions\";\r\nimport { CuiBasePositionEvaluator } from \"./evaluator\";\r\nexport class CuiBasePositionCalculator {\r\n    constructor(evaluator) {\r\n        _static.set(this, void 0);\r\n        _preferred.set(this, void 0);\r\n        _evaluator.set(this, void 0);\r\n        _log.set(this, void 0);\r\n        __classPrivateFieldSet(this, _preferred, \"top-center\");\r\n        __classPrivateFieldSet(this, _static, \"\");\r\n        __classPrivateFieldSet(this, _evaluator, evaluator !== null && evaluator !== void 0 ? evaluator : new CuiBasePositionEvaluator());\r\n        __classPrivateFieldSet(this, _log, CuiLoggerFactory.get(\"CuiBasePositionCalculator\"));\r\n    }\r\n    setMargin(value) {\r\n        __classPrivateFieldGet(this, _evaluator).setMargin(value);\r\n    }\r\n    setPreferred(position) {\r\n        __classPrivateFieldSet(this, _preferred, position);\r\n    }\r\n    setStatic(position) {\r\n        __classPrivateFieldSet(this, _static, position);\r\n    }\r\n    //targetWidth: number, targetHeight: number\r\n    calculate(elementBox, targetBox) {\r\n        __classPrivateFieldGet(this, _evaluator).setElementBox(elementBox);\r\n        __classPrivateFieldGet(this, _evaluator).setTarget(targetBox);\r\n        if (is(__classPrivateFieldGet(this, _static))) {\r\n            __classPrivateFieldGet(this, _log).debug(\"Evaluating static position\");\r\n            const [vertical, horizontal] = this.parse(__classPrivateFieldGet(this, _static));\r\n            return [__classPrivateFieldGet(this, _evaluator).getHorizontalPosition(horizontal), __classPrivateFieldGet(this, _evaluator).getVerticalPosition(vertical), __classPrivateFieldGet(this, _static)];\r\n        }\r\n        let [vertical, horizontal] = [\"\", \"\"];\r\n        if (is(__classPrivateFieldGet(this, _preferred))) {\r\n            __classPrivateFieldGet(this, _log).debug(\"Evaluating auto position\");\r\n            [vertical, horizontal] = this.parse(__classPrivateFieldGet(this, _preferred));\r\n        }\r\n        vertical = vertical !== null && vertical !== void 0 ? vertical : \"top\";\r\n        horizontal = horizontal !== null && horizontal !== void 0 ? horizontal : \"center\";\r\n        __classPrivateFieldGet(this, _log).debug(\"Calculating position: \" + vertical + \"-\" + horizontal);\r\n        const [outVNum, outVPos] = __classPrivateFieldGet(this, _evaluator).getAutoVerticalPosition(vertical);\r\n        const [outHNum, outHPos] = __classPrivateFieldGet(this, _evaluator).getAutoHorizontalPosition(horizontal);\r\n        __classPrivateFieldGet(this, _log).debug(\"Calculated position: \" + outVPos + \"-\" + outHPos);\r\n        return [outHNum, outVNum, outVPos + \"-\" + outHPos];\r\n    }\r\n    parse(position) {\r\n        return position.split(\"-\");\r\n    }\r\n}\r\n_static = new WeakMap(), _preferred = new WeakMap(), _evaluator = new WeakMap(), _log = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _taskId, _autoRenew, _timeout, _callback;\r\nimport { is } from \"./functions\";\r\nexport class CuiTaskRunner {\r\n    constructor(timeout, autoRenew, callback) {\r\n        _taskId.set(this, void 0);\r\n        _autoRenew.set(this, void 0);\r\n        _timeout.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        __classPrivateFieldSet(this, _autoRenew, autoRenew);\r\n        __classPrivateFieldSet(this, _timeout, timeout);\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    start() {\r\n        if (!this.canRun()) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        __classPrivateFieldSet(this, _taskId, setTimeout(() => {\r\n            //@ts-ignore - already checked in canRun\r\n            __classPrivateFieldGet(this, _callback).call(this);\r\n            __classPrivateFieldSet(this, _taskId, null);\r\n            if (__classPrivateFieldGet(this, _autoRenew)) {\r\n                this.start();\r\n            }\r\n        }, __classPrivateFieldGet(this, _timeout)));\r\n    }\r\n    stop() {\r\n        if (__classPrivateFieldGet(this, _taskId)) {\r\n            clearTimeout(__classPrivateFieldGet(this, _taskId));\r\n            __classPrivateFieldSet(this, _taskId, null);\r\n        }\r\n    }\r\n    getId() {\r\n        return __classPrivateFieldGet(this, _taskId);\r\n    }\r\n    canRun() {\r\n        return is(__classPrivateFieldGet(this, _callback)) && __classPrivateFieldGet(this, _timeout) > 0;\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    setTimeout(timeout) {\r\n        __classPrivateFieldSet(this, _timeout, timeout);\r\n    }\r\n}\r\n_taskId = new WeakMap(), _autoRenew = new WeakMap(), _timeout = new WeakMap(), _callback = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defOpenAct, _prefix, _prefix_1, _bodyClass, _attribute, _triggerHoverListener, _hoverListener, _trigger, _windowClickEventId, _openEventId, _closeEventId, _positionCalculator, _posClass, _autoTask, _actions;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { is, replacePrefix, isStringTrue, getStringOrDefault, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS, SCOPE_SELECTOR } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { CuiHoverListener } from \"cui-light-core/dist/esm/listeners/hover\";\r\nimport { CuiBasePositionCalculator } from \"cui-light-core/dist/esm/position/calculator\";\r\nimport { CuiTaskRunner } from \"cui-light-core/dist/esm/utils/task\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nconst bodyClass = '{prefix}-drop-open';\r\nconst DROP_POSITION = \"{prefix}-drop-position-\";\r\nconst DROP_TRIGGER = \"{prefix}-drop-trigger\";\r\nconst DROP_DEFAULT_TRIGGER = \"> a, button\";\r\nconst DROP_DEFAULT_ANIMATION_CLS = '{prefix}-drop-animation-in';\r\nexport class CuiDropArgs {\r\n    constructor(prefix) {\r\n        _defOpenAct.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defOpenAct, replacePrefix(DROP_DEFAULT_ANIMATION_CLS, prefix));\r\n        this.mode = \"click\";\r\n        this.trigger = DROP_DEFAULT_TRIGGER;\r\n        this.autoClose = false;\r\n        this.outClose = false;\r\n        this.prevent = false;\r\n        this.pos = \"\";\r\n        this.action = __classPrivateFieldGet(this, _defOpenAct);\r\n        this.timeout = 3000;\r\n        this.margin = 8;\r\n    }\r\n    parse(args) {\r\n        this.mode = getStringOrDefault(args.mode, 'click').toLowerCase();\r\n        this.trigger = SCOPE_SELECTOR + getStringOrDefault(args.trigger, DROP_DEFAULT_TRIGGER);\r\n        this.prevent = isStringTrue(args.prevent);\r\n        this.autoClose = isStringTrue(args.autoClose);\r\n        this.outClose = args.outClose ? isStringTrue(args.outClose) : true;\r\n        this.pos = getStringOrDefault(args.pos, \"\");\r\n        this.action = getStringOrDefault(args.action, __classPrivateFieldGet(this, _defOpenAct));\r\n        this.timeout = getIntOrDefault(args.timeout, 3000);\r\n        this.margin = getIntOrDefault(args.margin, 8);\r\n    }\r\n}\r\n_defOpenAct = new WeakMap();\r\nexport class CuiDropComponenet {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-drop`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiDropHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiDropHandler extends CuiHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuidropHandler\", element, attribute, new CuiDropArgs(prefix), utils);\r\n        _prefix_1.set(this, void 0);\r\n        _bodyClass.set(this, void 0);\r\n        _attribute.set(this, void 0);\r\n        _triggerHoverListener.set(this, void 0);\r\n        _hoverListener.set(this, void 0);\r\n        _trigger.set(this, void 0);\r\n        _windowClickEventId.set(this, void 0);\r\n        _openEventId.set(this, void 0);\r\n        _closeEventId.set(this, void 0);\r\n        _positionCalculator.set(this, void 0);\r\n        _posClass.set(this, void 0);\r\n        _autoTask.set(this, void 0);\r\n        _actions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _attribute, attribute);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix);\r\n        __classPrivateFieldSet(this, _bodyClass, replacePrefix(bodyClass, prefix));\r\n        __classPrivateFieldSet(this, _hoverListener, new CuiHoverListener(this.element));\r\n        __classPrivateFieldGet(this, _hoverListener).setCallback(this.onElementHover.bind(this));\r\n        __classPrivateFieldSet(this, _windowClickEventId, null);\r\n        __classPrivateFieldSet(this, _openEventId, null);\r\n        __classPrivateFieldSet(this, _closeEventId, null);\r\n        this.onTriggerClick = this.onTriggerClick.bind(this);\r\n        __classPrivateFieldSet(this, _positionCalculator, new CuiBasePositionCalculator());\r\n        __classPrivateFieldGet(this, _positionCalculator).setMargin(8);\r\n        __classPrivateFieldGet(this, _positionCalculator).setPreferred(\"bottom-left\");\r\n        __classPrivateFieldSet(this, _posClass, \"\");\r\n        __classPrivateFieldSet(this, _triggerHoverListener, undefined);\r\n        __classPrivateFieldSet(this, _trigger, this.element);\r\n        __classPrivateFieldSet(this, _actions, []);\r\n        __classPrivateFieldSet(this, _autoTask, new CuiTaskRunner(this.args.timeout, false, this.close.bind(this)));\r\n        ;\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _trigger, this.acquireTrigger());\r\n        __classPrivateFieldSet(this, _triggerHoverListener, new CuiHoverListener(__classPrivateFieldGet(this, _trigger)));\r\n        this.setTriggerEvent();\r\n        __classPrivateFieldSet(this, _openEventId, this.onEvent(EVENTS.OPEN, this.open.bind(this)));\r\n        __classPrivateFieldSet(this, _closeEventId, this.onEvent(EVENTS.CLOSE, this.close.bind(this)));\r\n        __classPrivateFieldGet(this, _positionCalculator).setStatic(this.args.pos);\r\n        __classPrivateFieldGet(this, _positionCalculator).setMargin(this.args.margin);\r\n        __classPrivateFieldSet(this, _autoTask, new CuiTaskRunner(this.args.timeout, false, this.close.bind(this)));\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n        this.mutate(() => {\r\n            AriaAttributes.setAria(this.element, 'aria-dropdown', \"\");\r\n        });\r\n        this._log.debug(\"Initialized\", \"handle\");\r\n    }\r\n    onUpdate() {\r\n        if (__classPrivateFieldGet(this, _triggerHoverListener) && __classPrivateFieldGet(this, _triggerHoverListener).isAttached()) {\r\n            __classPrivateFieldGet(this, _triggerHoverListener).detach();\r\n        }\r\n        else if (this.prevArgs && this.prevArgs.mode === 'click') {\r\n            //@ts-ignore \r\n            __classPrivateFieldGet(this, _trigger).removeEventListener('click', this.onTriggerClick);\r\n        }\r\n        __classPrivateFieldSet(this, _trigger, this.acquireTrigger());\r\n        __classPrivateFieldSet(this, _triggerHoverListener, new CuiHoverListener(__classPrivateFieldGet(this, _trigger)));\r\n        this.setTriggerEvent();\r\n        __classPrivateFieldGet(this, _positionCalculator).setStatic(this.args.pos);\r\n        __classPrivateFieldGet(this, _positionCalculator).setMargin(this.args.margin);\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n        __classPrivateFieldGet(this, _autoTask).setTimeout(this.args.timeout);\r\n    }\r\n    onDestroy() {\r\n        this.detachEvent(EVENTS.OPEN, __classPrivateFieldGet(this, _openEventId));\r\n        this.detachEvent(EVENTS.CLOSE, __classPrivateFieldGet(this, _closeEventId));\r\n    }\r\n    /**\r\n    * Api Method open\r\n    */\r\n    open() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.checkLockAndWarn('open')) {\r\n                return false;\r\n            }\r\n            if (this.isActive()) {\r\n                return this.close();\r\n            }\r\n            if (this.isAnyActive()) {\r\n                yield this.findAndCloseOpenedDrop();\r\n            }\r\n            this.isLocked = true;\r\n            this._log.debug(`Drop ${this.cuid}`, 'open');\r\n            this.onOpen();\r\n            this.isLocked = false;\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n     * Api Method close\r\n     */\r\n    close() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.checkLockAndWarn(\"close\") || !this.isActive()) {\r\n                return false;\r\n            }\r\n            this.isLocked = true;\r\n            this.logInfo(`Drop ${this.cuid}`, 'close');\r\n            this.onClose();\r\n            this.detachEvent(EVENTS.WINDOW_CLICK, __classPrivateFieldGet(this, _windowClickEventId));\r\n            this.emitEvent(EVENTS.CLOSED, {\r\n                timestamp: Date.now()\r\n            });\r\n            __classPrivateFieldGet(this, _hoverListener).detach();\r\n            this.isLocked = false;\r\n            return true;\r\n        });\r\n    }\r\n    onClose() {\r\n        this.mutate(() => {\r\n            this.helper.removeClass(this.activeClassName, this.element);\r\n            this.helper.removeClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n            this.toggleActions();\r\n            this.helper.removeClass(__classPrivateFieldGet(this, _posClass), this.element);\r\n            AriaAttributes.setAria(this.element, 'aria-expanded', 'false');\r\n        });\r\n    }\r\n    onOpen() {\r\n        this.helper.setClass(this.activeClassName, this.element);\r\n        this.mutate(() => {\r\n            const box = __classPrivateFieldGet(this, _trigger).getBoundingClientRect();\r\n            try {\r\n                const [x, y, pos] = __classPrivateFieldGet(this, _positionCalculator).calculate(box, this.element.getBoundingClientRect());\r\n                this.element.style.top = `${y - box.top}px`;\r\n                this.element.style.left = `${x - box.left}px`;\r\n                __classPrivateFieldSet(this, _posClass, replacePrefix(DROP_POSITION + pos, __classPrivateFieldGet(this, _prefix_1)));\r\n                this.toggleActions();\r\n                this.helper.setClass(__classPrivateFieldGet(this, _posClass), this.element);\r\n                this.helper.setClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n                this.emitEvent(EVENTS.OPENED, {\r\n                    timestamp: Date.now()\r\n                });\r\n                __classPrivateFieldGet(this, _hoverListener).attach();\r\n                this.runAutoCloseTask();\r\n                if (this.args.outClose) {\r\n                    __classPrivateFieldSet(this, _windowClickEventId, this.onEvent(EVENTS.WINDOW_CLICK, this.onWindowClick.bind(this)));\r\n                }\r\n                AriaAttributes.setAria(this.element, 'aria-expanded', 'true');\r\n            }\r\n            catch (e) {\r\n                this._log.exception(e);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Event invoked when window is clicked\r\n     * @param ev\r\n     */\r\n    onWindowClick(ev) {\r\n        if (!this.element.contains(ev.target)) {\r\n            this.close();\r\n        }\r\n    }\r\n    isAnyActive() {\r\n        return this.helper.hasClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n    }\r\n    /**\r\n     * Finds and opens other active drop element\r\n     */\r\n    findAndCloseOpenedDrop() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const opened = document.querySelector(`[${__classPrivateFieldGet(this, _attribute)}].${this.activeClassName}`);\r\n            if (!is(opened)) {\r\n                this._log.warning(\"Opened drop was not found\");\r\n                return false;\r\n            }\r\n            //@ts-ignore opened checked\r\n            const handler = opened.$handlers[__classPrivateFieldGet(this, _attribute)];\r\n            if (!is(handler)) {\r\n                this._log.warning(\"Drop handler was not found in the element\");\r\n                return false;\r\n            }\r\n            return handler.close();\r\n        });\r\n    }\r\n    /**\r\n     * Invoked when trigger button is clicked\r\n     * @param ev\r\n     */\r\n    onTriggerClick(ev) {\r\n        if (this.isActive()) {\r\n            this.close();\r\n        }\r\n        else {\r\n            this.open();\r\n        }\r\n        if (this.args.prevent) {\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n    /**\r\n    * Invoked when trigger button is hovered on\r\n    * @param ev\r\n    */\r\n    onHoverEvent(ev) {\r\n        if (ev.isHovering && !this.isActive()) {\r\n            this.open();\r\n        }\r\n        if (this.args.prevent) {\r\n            ev.event.preventDefault();\r\n        }\r\n    }\r\n    /**\r\n     * Method triggered when opened element is hovered on\r\n     * @param ev\r\n     */\r\n    onElementHover(ev) {\r\n        if (ev.isHovering) {\r\n            __classPrivateFieldGet(this, _autoTask).stop();\r\n        }\r\n        else if (!ev.isHovering && this.args.autoClose) {\r\n            this.runAutoCloseTask();\r\n        }\r\n    }\r\n    /**\r\n     * Sets event on trigger button\r\n     */\r\n    setTriggerEvent() {\r\n        if (this.args.mode === 'hover' && __classPrivateFieldGet(this, _triggerHoverListener)) {\r\n            __classPrivateFieldGet(this, _triggerHoverListener).setCallback(this.onHoverEvent.bind(this));\r\n            __classPrivateFieldGet(this, _triggerHoverListener).attach();\r\n        }\r\n        else {\r\n            //@ts-ignore\r\n            __classPrivateFieldGet(this, _trigger).addEventListener('click', this.onTriggerClick);\r\n        }\r\n    }\r\n    /**\r\n     * Runs auto-close task on opened element\r\n     */\r\n    runAutoCloseTask() {\r\n        if (!this.args.autoClose) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _autoTask).start();\r\n    }\r\n    toggleActions() {\r\n        __classPrivateFieldGet(this, _actions).forEach(action => {\r\n            action.toggle(this.element);\r\n        });\r\n    }\r\n    acquireTrigger() {\r\n        let ret = null;\r\n        if (!this.element.parentElement) {\r\n            ret = document.querySelector(this.args.trigger);\r\n        }\r\n        else\r\n            ret = this.element.parentElement.querySelector(this.args.trigger);\r\n        return ret !== null && ret !== void 0 ? ret : this.element;\r\n    }\r\n}\r\n_prefix_1 = new WeakMap(), _bodyClass = new WeakMap(), _attribute = new WeakMap(), _triggerHoverListener = new WeakMap(), _hoverListener = new WeakMap(), _trigger = new WeakMap(), _windowClickEventId = new WeakMap(), _openEventId = new WeakMap(), _closeEventId = new WeakMap(), _positionCalculator = new WeakMap(), _posClass = new WeakMap(), _autoTask = new WeakMap(), _actions = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _element, _element_1, _element_2;\r\nexport class BasePositionCalculator {\r\n    calculate(x, y, diffX, diffY) {\r\n        return [x, y];\r\n    }\r\n}\r\nexport class OptionalPositionCalculator {\r\n    constructor(element) {\r\n        _element.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element, element);\r\n    }\r\n    calculate(x, y, diffX, diffY) {\r\n        let newX = __classPrivateFieldGet(this, _element).offsetLeft + diffX;\r\n        let newY = __classPrivateFieldGet(this, _element).offsetTop + diffY;\r\n        return [newX, newY];\r\n    }\r\n}\r\n_element = new WeakMap();\r\nexport class BaseResizeCalculator {\r\n    constructor(element) {\r\n        _element_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element_1, element);\r\n    }\r\n    calculate(x, y, diffX, diffY) {\r\n        let width = x - __classPrivateFieldGet(this, _element_1).offsetLeft;\r\n        let height = y - __classPrivateFieldGet(this, _element_1).offsetTop;\r\n        return [width, height];\r\n    }\r\n}\r\n_element_1 = new WeakMap();\r\nexport class OptionalResizeCalculator {\r\n    constructor(element) {\r\n        _element_2.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element_2, element);\r\n    }\r\n    calculate(x, y, diffX, diffY) {\r\n        let width = __classPrivateFieldGet(this, _element_2).offsetWidth + diffX;\r\n        let height = __classPrivateFieldGet(this, _element_2).offsetHeight + diffY;\r\n        return [width, height];\r\n    }\r\n}\r\n_element_2 = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _prefix_1, _isMoving, _isResizing, _prevX, _prevY, _prefix_2, _moveListener, _positionCalculator, _resizeCalculator, _resizeBtn, _moveBtn;\r\nimport { replacePrefix, isStringTrue, is, getIntOrDefault, getStringOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { CuiInteractableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiMoveEventListener } from \"cui-light-core/dist/esm/listeners/move\";\r\nimport { BasePositionCalculator, BaseResizeCalculator } from \"./helpers\";\r\nimport { CLASSES, EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst FLOAT_OPEN_ANIMATION_CLASS = '.{prefix}-float-default-in';\r\nconst FLOAT_CLOSE_ANIMATION_CLASS = '.{prefix}-float-default-out';\r\nconst MOVE = '.{prefix}-float-move';\r\nconst RESIZE = '.{prefix}-float-resize';\r\nexport class CuiFloatArgs {\r\n    constructor(prefix, defTimeout) {\r\n        _defTimeout.set(this, void 0);\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, defTimeout !== null && defTimeout !== void 0 ? defTimeout : 300);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        this.escClose = false;\r\n        this.keyClose = \"\";\r\n        this.openAct = \"\";\r\n        this.closeAct = \"\";\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n    }\r\n    parse(args) {\r\n        this.escClose = isStringTrue(args.escClose);\r\n        this.keyClose = args.keyClose;\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.openAct = getStringOrDefault(args.openAct, replacePrefix(FLOAT_OPEN_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n        this.closeAct = getStringOrDefault(args.closeAct, replacePrefix(FLOAT_CLOSE_ANIMATION_CLASS, __classPrivateFieldGet(this, _prefix)));\r\n    }\r\n}\r\n_defTimeout = new WeakMap(), _prefix = new WeakMap();\r\nexport class CuiFloatComponent {\r\n    constructor(prefix) {\r\n        _prefix_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix_1)}-float`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiFloatHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix_1));\r\n    }\r\n}\r\n_prefix_1 = new WeakMap();\r\nexport class CuiFloatHandler extends CuiInteractableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiFloatHandler\", element, attribute, new CuiFloatArgs(prefix, utils.setup.animationTime), utils);\r\n        _isMoving.set(this, void 0);\r\n        _isResizing.set(this, void 0);\r\n        _prevX.set(this, void 0);\r\n        _prevY.set(this, void 0);\r\n        _prefix_2.set(this, void 0);\r\n        _moveListener.set(this, void 0);\r\n        _positionCalculator.set(this, void 0);\r\n        _resizeCalculator.set(this, void 0);\r\n        _resizeBtn.set(this, void 0);\r\n        _moveBtn.set(this, void 0);\r\n        __classPrivateFieldSet(this, _isMoving, false);\r\n        __classPrivateFieldSet(this, _isResizing, false);\r\n        __classPrivateFieldSet(this, _prevX, 0);\r\n        __classPrivateFieldSet(this, _prevY, 0);\r\n        __classPrivateFieldSet(this, _moveListener, new CuiMoveEventListener());\r\n        __classPrivateFieldGet(this, _moveListener).preventDefault(false);\r\n        __classPrivateFieldSet(this, _positionCalculator, new BasePositionCalculator());\r\n        __classPrivateFieldSet(this, _resizeCalculator, new BaseResizeCalculator(element));\r\n        __classPrivateFieldSet(this, _prefix_2, prefix);\r\n        this.move = this.move.bind(this);\r\n        this.resize = this.resize.bind(this);\r\n        __classPrivateFieldSet(this, _moveBtn, null);\r\n        __classPrivateFieldSet(this, _resizeBtn, null);\r\n    }\r\n    onInit() {\r\n        AriaAttributes.setAria(this.element, 'aria-modal', \"\");\r\n        __classPrivateFieldSet(this, _moveBtn, this.element.querySelector(replacePrefix(MOVE, __classPrivateFieldGet(this, _prefix_2))));\r\n        __classPrivateFieldSet(this, _resizeBtn, this.element.querySelector(replacePrefix(RESIZE, __classPrivateFieldGet(this, _prefix_2))));\r\n        __classPrivateFieldGet(this, _moveListener).setCallback(this.onMove.bind(this));\r\n    }\r\n    onUpdate() {\r\n    }\r\n    onDestroy() {\r\n    }\r\n    onBeforeOpen() {\r\n        return true;\r\n    }\r\n    onAfterOpen() {\r\n        __classPrivateFieldGet(this, _moveListener).attach();\r\n    }\r\n    onAfterClose() {\r\n        __classPrivateFieldGet(this, _moveListener).detach();\r\n    }\r\n    onBeforeClose() {\r\n        return true;\r\n    }\r\n    onMove(ev) {\r\n        switch (ev.type) {\r\n            case 'down':\r\n                this.onMouseDown(ev);\r\n                break;\r\n            case 'up':\r\n                this.onMouseUp(ev);\r\n                break;\r\n            case 'move':\r\n                this.onMouseMove(ev);\r\n                break;\r\n        }\r\n    }\r\n    onMouseDown(ev) {\r\n        if (ev.target === __classPrivateFieldGet(this, _moveBtn)) {\r\n            __classPrivateFieldSet(this, _isMoving, true);\r\n            ev.event.preventDefault();\r\n        }\r\n        else if (ev.target === __classPrivateFieldGet(this, _resizeBtn)) {\r\n            __classPrivateFieldSet(this, _isResizing, true);\r\n            ev.event.preventDefault();\r\n            //this.helper.setClass(\"cui-float-resize-shadow\")\r\n        }\r\n        __classPrivateFieldSet(this, _prevX, ev.x);\r\n        __classPrivateFieldSet(this, _prevY, ev.y);\r\n        this.helper.setClassesAs(document.body, CLASSES.swipingOn);\r\n        // Lock global move handler\r\n        this.utils.bus.emit(EVENTS.MOVE_LOCK, null, true);\r\n    }\r\n    onMouseMove(ev) {\r\n        if (__classPrivateFieldGet(this, _isMoving)) {\r\n            this.peform(ev, this.move);\r\n        }\r\n        else if (__classPrivateFieldGet(this, _isResizing)) {\r\n            this.peform(ev, this.resize);\r\n        }\r\n    }\r\n    onMouseUp(ev) {\r\n        __classPrivateFieldSet(this, _isMoving, false);\r\n        __classPrivateFieldSet(this, _isResizing, false);\r\n        this.helper.removeClassesAs(document.body, CLASSES.swipingOn);\r\n        // Unlock global handler\r\n        this.utils.bus.emit(EVENTS.MOVE_LOCK, null, false);\r\n    }\r\n    peform(ev, callback) {\r\n        this.mutate(() => {\r\n            if (is(callback))\r\n                callback(this.element, ev.x, ev.y, (ev.x - __classPrivateFieldGet(this, _prevX)), (ev.y - __classPrivateFieldGet(this, _prevY)));\r\n            __classPrivateFieldSet(this, _prevX, ev.x);\r\n            __classPrivateFieldSet(this, _prevY, ev.y);\r\n        });\r\n        ev.event.preventDefault();\r\n    }\r\n    resize(element, x, y, diffX, diffY) {\r\n        let [newWidth, newHeight] = __classPrivateFieldGet(this, _resizeCalculator).calculate(x, y, diffX, diffY);\r\n        if (this.fitsWindow(element.offsetTop, element.offsetLeft, newWidth, newHeight)) {\r\n            this.mutate(() => {\r\n                element.style.width = newWidth + \"px\";\r\n                element.style.height = newHeight + \"px\";\r\n            });\r\n        }\r\n    }\r\n    move(element, x, y, diffX, diffY) {\r\n        let [newX, newY] = __classPrivateFieldGet(this, _positionCalculator).calculate(x, y, diffX, diffY);\r\n        if (this.fitsWindow(newY, newX, element.offsetWidth, element.offsetHeight)) {\r\n            this.mutate(() => {\r\n                element.style.left = newX + \"px\";\r\n                element.style.top = newY + \"px\";\r\n            });\r\n        }\r\n    }\r\n    fitsWindow(top, left, width, height) {\r\n        return (top + height < window.innerHeight - 10) &&\r\n            (top > 10) && (left > 10) &&\r\n            (left + width < window.innerWidth - 10);\r\n    }\r\n}\r\n_isMoving = new WeakMap(), _isResizing = new WeakMap(), _prevX = new WeakMap(), _prevY = new WeakMap(), _prefix_2 = new WeakMap(), _moveListener = new WeakMap(), _positionCalculator = new WeakMap(), _resizeCalculator = new WeakMap(), _resizeBtn = new WeakMap(), _moveBtn = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _currentIcon;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { ICONS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { is, isString, getStringOrDefault, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { IconBuilder } from \"cui-light-core/dist/esm/builders/icon\";\r\nexport class CuiIconArgs {\r\n    constructor() {\r\n        this.icon = \"\";\r\n        this.scale = 1;\r\n    }\r\n    parse(val) {\r\n        if (isString(val)) {\r\n            this.icon = getStringOrDefault(val, \"\");\r\n        }\r\n        else {\r\n            this.icon = getStringOrDefault(val.icon, \"\");\r\n            this.scale = getIntOrDefault(val.scale, 1);\r\n        }\r\n    }\r\n}\r\nexport class CuiIconComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-icon`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiIconHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiIconHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiIconHandler\", element, attribute, new CuiIconArgs(), utils);\r\n        _currentIcon.set(this, void 0);\r\n        __classPrivateFieldSet(this, _currentIcon, null);\r\n    }\r\n    onInit() {\r\n        if (__classPrivateFieldGet(this, _currentIcon) !== null) {\r\n            this._log.debug(\"Icon already initialized\");\r\n            return;\r\n        }\r\n        this.addIcon(this.args.icon);\r\n        __classPrivateFieldSet(this, _currentIcon, this.args.icon);\r\n    }\r\n    onUpdate() {\r\n        if (this.args.icon === __classPrivateFieldGet(this, _currentIcon)) {\r\n            return;\r\n        }\r\n        this.addIcon(this.args.icon);\r\n        __classPrivateFieldSet(this, _currentIcon, this.args.icon);\r\n    }\r\n    onDestroy() {\r\n        const svg = this.element.querySelector('svg');\r\n        if (is(svg)) {\r\n            //@ts-ignore checked\r\n            svg.remove();\r\n        }\r\n        __classPrivateFieldSet(this, _currentIcon, null);\r\n    }\r\n    addIcon(icon) {\r\n        const iconStr = icon ? ICONS[icon] : null;\r\n        if (!iconStr) {\r\n            return;\r\n        }\r\n        const iconSvg = new IconBuilder(iconStr).setScale(this.args.scale).build();\r\n        const svg = this.element.querySelector('svg');\r\n        if (is(svg)) {\r\n            //@ts-ignore checked\r\n            svg.remove();\r\n        }\r\n        if (this.element.childNodes.length > 0) {\r\n            this.mutate(this.insertBefore, iconSvg);\r\n        }\r\n        else {\r\n            this.mutate(this.appendChild, iconSvg);\r\n        }\r\n    }\r\n    insertBefore(iconElement) {\r\n        this.element.insertBefore(iconElement, this.element.firstChild);\r\n    }\r\n    appendChild(iconElement) {\r\n        this.element.appendChild(iconElement);\r\n    }\r\n}\r\n_currentIcon = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _observer, _root, _threshold, _callback;\r\nexport class CuiIntersectionEntry {\r\n    constructor() {\r\n        this.isInView = false;\r\n        this.ratio = 0;\r\n    }\r\n}\r\n/**\r\n * Creates a wrapper for intersection observer\r\n * Constructor gets a root element for observer and optional array of threshold values [0...1]\r\n */\r\nexport class CuiIntersectionObserver {\r\n    constructor(root, threshold) {\r\n        _observer.set(this, void 0);\r\n        _root.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        __classPrivateFieldSet(this, _root, root);\r\n        __classPrivateFieldSet(this, _threshold, threshold !== null && threshold !== void 0 ? threshold : [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n        __classPrivateFieldSet(this, _observer, undefined);\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    connect() {\r\n        if (!__classPrivateFieldGet(this, _callback)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _observer, new IntersectionObserver(__classPrivateFieldGet(this, _callback), {\r\n            root: __classPrivateFieldGet(this, _root),\r\n            rootMargin: '0px',\r\n            threshold: __classPrivateFieldGet(this, _threshold)\r\n        }));\r\n    }\r\n    observe(target) {\r\n        if (__classPrivateFieldGet(this, _observer))\r\n            __classPrivateFieldGet(this, _observer).observe(target);\r\n    }\r\n    unobserve(target) {\r\n        if (__classPrivateFieldGet(this, _observer))\r\n            __classPrivateFieldGet(this, _observer).unobserve(target);\r\n    }\r\n    disconnect() {\r\n        if (__classPrivateFieldGet(this, _observer))\r\n            __classPrivateFieldGet(this, _observer).disconnect();\r\n    }\r\n}\r\n_observer = new WeakMap(), _root = new WeakMap(), _threshold = new WeakMap(), _callback = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _observer, _targets, _actions;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiIntersectionObserver } from \"cui-light-core/dist/esm/observers/intersection\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { is, getRangeValueOrDefault, getStringOrDefault, isStringTrue } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS, SCOPE_SELECTOR } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst DEFAULT_SELCTOR = \"> *\";\r\n/**\r\n * Intersection\r\n * Toggles action in/out when target is intersecting with the screen\r\n *\r\n * Set this on scrollable element\r\n * target - children selector\r\n * offset - 0...1 - tells how much target must intersecting with the screen\r\n * action - action to trigger\r\n */\r\nexport class CuiIntersectionAttributes {\r\n    constructor() {\r\n        this.target = \"div\";\r\n        this.action = \"\";\r\n        this.offset = 0;\r\n        this.isRoot = false;\r\n    }\r\n    parse(args) {\r\n        this.target = is(args.target) ? SCOPE_SELECTOR + args.target : SCOPE_SELECTOR + DEFAULT_SELCTOR;\r\n        this.action = getStringOrDefault(args.action, \"\");\r\n        this.offset = getRangeValueOrDefault(parseFloat(args.offset), 0, 1, 0);\r\n        this.isRoot = isStringTrue(args.isRoot);\r\n    }\r\n}\r\nexport class CuiIntersectionComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-intersection`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiIntersectionHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiIntersectionHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiIntersectionHandler\", element, attribute, new CuiIntersectionAttributes(), utils);\r\n        _observer.set(this, void 0);\r\n        _targets.set(this, void 0);\r\n        _actions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _observer, new CuiIntersectionObserver(this.element));\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        __classPrivateFieldSet(this, _actions, []);\r\n    }\r\n    onInit() {\r\n        this.parseArguments();\r\n        __classPrivateFieldGet(this, _observer).setCallback(this.onIntersection.bind(this));\r\n        __classPrivateFieldGet(this, _observer).connect();\r\n        __classPrivateFieldGet(this, _targets).forEach(target => {\r\n            __classPrivateFieldGet(this, _observer).observe(target);\r\n        });\r\n    }\r\n    onUpdate() {\r\n        this.parseArguments();\r\n    }\r\n    onDestroy() {\r\n        __classPrivateFieldGet(this, _observer).disconnect();\r\n    }\r\n    parseArguments() {\r\n        // @ts-ignore prevArgs is correct\r\n        if (!is(this.prevArgs) || (this.prevArgs.target !== this.args.target)) {\r\n            let el = this.args.isRoot ? document.body : this.element;\r\n            __classPrivateFieldSet(this, _targets, [...el.querySelectorAll(this.args.target)]);\r\n        }\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n    }\r\n    onIntersection(entries, observer) {\r\n        if (!is(__classPrivateFieldGet(this, _targets))) {\r\n            return;\r\n        }\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting && entry.intersectionRatio >= this.args.offset) {\r\n                this.addActions(entry.target);\r\n            }\r\n            else {\r\n                this.removeActions(entry.target);\r\n            }\r\n            this.emitIntersection(entry);\r\n        });\r\n    }\r\n    emitIntersection(entry) {\r\n        this.emitEvent(EVENTS.INTERSECTION, {\r\n            entry: entry,\r\n            offset: this.args.offset,\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n    addActions(element) {\r\n        __classPrivateFieldGet(this, _actions).forEach(action => action.add(element));\r\n    }\r\n    removeActions(element) {\r\n        __classPrivateFieldGet(this, _actions).forEach(action => action.remove(element));\r\n    }\r\n}\r\n_observer = new WeakMap(), _targets = new WeakMap(), _actions = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _defTimeout, _prefix_1, _prefix_2, _bodyClass, _scrollY, _windowClickEventId;\r\nimport { CuiInteractableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { AriaAttributes } from \"cui-light-core/dist/esm/utils/aria\";\r\nimport { is, isStringTrue, getStringOrDefault, getIntOrDefault, replacePrefix, getName } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst OFFCANVAS_RIGHT_ANIM_DEFAULT_IN = \".{prefix}-offcanvas-default-right-in\";\r\nconst OFFCANVAS_RIGHT_ANIM_DEFAULT_OUT = \".{prefix}-offcanvas-default-right-out\";\r\nconst OFFCANVAS_LEFT_ANIM_DEFAULT_IN = \".{prefix}-offcanvas-default-left-in\";\r\nconst OFFCANVAS_LEFT_ANIM_DEFAULT_OUT = \".{prefix}-offcanvas-default-left-out\";\r\nconst OFFCANVAS_BODY = \"{prefix}-off-canvas-open\";\r\nconst OFFCANVAS_CONTAINER_CLS = '.{prefix}-off-canvas-container';\r\nexport class CuiOffCanvasArgs {\r\n    constructor(prefix, timeout) {\r\n        _prefix.set(this, void 0);\r\n        _defTimeout.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        this.escClose = false;\r\n        this.position = 'right';\r\n        this.openAct = this.getDefaultOpenClass();\r\n        this.closeAct = this.getDefaultCloseClass();\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.outClose = false;\r\n        this.keyClose = \"\";\r\n    }\r\n    parse(args) {\r\n        if (is(args)) {\r\n            this.escClose = isStringTrue(args.escClose);\r\n            this.outClose = isStringTrue(args.outClose);\r\n            this.position = getStringOrDefault(args.position, 'right');\r\n            this.openAct = getStringOrDefault(args.openAct, this.getDefaultOpenClass());\r\n            this.closeAct = getStringOrDefault(args.closeAct, this.getDefaultCloseClass());\r\n            this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n            this.keyClose = args.keyClose;\r\n        }\r\n    }\r\n    getDefaultOpenClass() {\r\n        return replacePrefix(this.position === 'right' ? OFFCANVAS_RIGHT_ANIM_DEFAULT_IN : OFFCANVAS_LEFT_ANIM_DEFAULT_IN, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n    getDefaultCloseClass() {\r\n        return replacePrefix(this.position === 'right' ? OFFCANVAS_RIGHT_ANIM_DEFAULT_OUT : OFFCANVAS_LEFT_ANIM_DEFAULT_OUT, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap(), _defTimeout = new WeakMap();\r\nexport class CuiOffCanvasComponent {\r\n    constructor(prefix) {\r\n        _prefix_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_1, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix_1)}-off-canvas`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiOffCanvasHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix_1));\r\n    }\r\n}\r\n_prefix_1 = new WeakMap();\r\nexport class CuiOffCanvasHandler extends CuiInteractableHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiOffCanvasHandler\", element, attribute, new CuiOffCanvasArgs(prefix, utils.setup.animationTime), utils);\r\n        _prefix_2.set(this, void 0);\r\n        _bodyClass.set(this, void 0);\r\n        _scrollY.set(this, void 0);\r\n        _windowClickEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix_2, prefix);\r\n        __classPrivateFieldSet(this, _bodyClass, replacePrefix(OFFCANVAS_BODY, prefix));\r\n        __classPrivateFieldSet(this, _windowClickEventId, null);\r\n        __classPrivateFieldSet(this, _scrollY, 0);\r\n    }\r\n    onInit() {\r\n        this.mutate(() => {\r\n            this.setPositionLeft();\r\n            AriaAttributes.setAria(this.element, 'aria-modal', \"\");\r\n        });\r\n    }\r\n    onUpdate() {\r\n        this.setPositionLeft();\r\n    }\r\n    onDestroy() {\r\n    }\r\n    onBeforeOpen() {\r\n        if (this.isAnyActive()) {\r\n            return false;\r\n        }\r\n        __classPrivateFieldSet(this, _scrollY, window.pageYOffset);\r\n        return true;\r\n    }\r\n    onAfterOpen() {\r\n        if (this.args.outClose) {\r\n            __classPrivateFieldSet(this, _windowClickEventId, this.onEvent(EVENTS.WINDOW_CLICK, this.onWindowClick.bind(this)));\r\n        }\r\n        this.helper.setClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        document.body.style.top = `-${scrollY}px`;\r\n    }\r\n    onAfterClose() {\r\n        this.detachEvent(EVENTS.WINDOW_CLICK, __classPrivateFieldGet(this, _windowClickEventId));\r\n        this.helper.removeClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n        document.body.style.top = '';\r\n        window.scrollTo(0, __classPrivateFieldGet(this, _scrollY) * -1);\r\n    }\r\n    onBeforeClose() {\r\n        return true;\r\n    }\r\n    onWindowClick(ev) {\r\n        const container = this.element.querySelector(replacePrefix(OFFCANVAS_CONTAINER_CLS, __classPrivateFieldGet(this, _prefix_2)));\r\n        if (container && !container.contains(ev.target)) {\r\n            this.close();\r\n        }\r\n    }\r\n    isAnyActive() {\r\n        return this.helper.hasClass(__classPrivateFieldGet(this, _bodyClass), document.body);\r\n    }\r\n    setPositionLeft() {\r\n        let cls = getName(__classPrivateFieldGet(this, _prefix_2), 'left');\r\n        if (this.args.position === 'left' && !this.helper.hasClass(cls, this.element)) {\r\n            this.helper.setClass(cls, this.element);\r\n        }\r\n        else if (this.args.position == 'right' && this.helper.hasClass(cls, this.element)) {\r\n            this.helper.removeClass(cls, this.element);\r\n        }\r\n    }\r\n}\r\n_prefix_2 = new WeakMap(), _bodyClass = new WeakMap(), _scrollY = new WeakMap(), _windowClickEventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _box, _element, _element_1;\r\nexport class CuiElementBoxFactory {\r\n    static get(element) {\r\n        if (element instanceof Window) {\r\n            return new WindowElementBox();\r\n        }\r\n        else if (element instanceof HTMLElement) {\r\n            return new HTMLElementBox(element);\r\n        }\r\n        return new ElementBox(element);\r\n    }\r\n}\r\nexport class ElementBox {\r\n    constructor(element) {\r\n        _box.set(this, void 0);\r\n        _element.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element, element);\r\n        __classPrivateFieldSet(this, _box, element.getBoundingClientRect());\r\n    }\r\n    getHeight() {\r\n        return __classPrivateFieldGet(this, _box).height;\r\n    }\r\n    getWidth() {\r\n        return __classPrivateFieldGet(this, _box).width;\r\n    }\r\n    getTop() {\r\n        return __classPrivateFieldGet(this, _box).top;\r\n    }\r\n    getLeft() {\r\n        return __classPrivateFieldGet(this, _box).left;\r\n    }\r\n    getScrollHeight() {\r\n        return __classPrivateFieldGet(this, _element).scrollHeight;\r\n    }\r\n    getScrollWidth() {\r\n        return __classPrivateFieldGet(this, _element).scrollWidth;\r\n    }\r\n    getScrollTop() {\r\n        return __classPrivateFieldGet(this, _element).scrollTop;\r\n    }\r\n    getScrollLeft() {\r\n        return __classPrivateFieldGet(this, _element).scrollLeft;\r\n    }\r\n    queryAll(selector) {\r\n        return [...__classPrivateFieldGet(this, _element).querySelectorAll(selector)];\r\n    }\r\n}\r\n_box = new WeakMap(), _element = new WeakMap();\r\nexport class HTMLElementBox {\r\n    constructor(element) {\r\n        _element_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _element_1, element);\r\n    }\r\n    getHeight() {\r\n        return __classPrivateFieldGet(this, _element_1).offsetHeight;\r\n    }\r\n    getWidth() {\r\n        return __classPrivateFieldGet(this, _element_1).offsetWidth;\r\n    }\r\n    getTop() {\r\n        return __classPrivateFieldGet(this, _element_1).offsetTop;\r\n    }\r\n    getLeft() {\r\n        return __classPrivateFieldGet(this, _element_1).offsetLeft;\r\n    }\r\n    getScrollHeight() {\r\n        return __classPrivateFieldGet(this, _element_1).scrollHeight;\r\n    }\r\n    getScrollWidth() {\r\n        return __classPrivateFieldGet(this, _element_1).scrollWidth;\r\n    }\r\n    getScrollTop() {\r\n        return __classPrivateFieldGet(this, _element_1).scrollTop;\r\n    }\r\n    getScrollLeft() {\r\n        return __classPrivateFieldGet(this, _element_1).scrollLeft;\r\n    }\r\n    queryAll(selector) {\r\n        return [...__classPrivateFieldGet(this, _element_1).querySelectorAll(selector)];\r\n    }\r\n}\r\n_element_1 = new WeakMap();\r\nexport class WindowElementBox {\r\n    getHeight() {\r\n        return window.innerHeight;\r\n    }\r\n    getWidth() {\r\n        return window.innerWidth;\r\n    }\r\n    getTop() {\r\n        return 0;\r\n    }\r\n    getLeft() {\r\n        return 0;\r\n    }\r\n    getScrollHeight() {\r\n        return window.innerHeight;\r\n    }\r\n    getScrollWidth() {\r\n        return window.innerWidth;\r\n    }\r\n    getScrollTop() {\r\n        return window.pageYOffset;\r\n    }\r\n    getScrollLeft() {\r\n        return window.pageXOffset;\r\n    }\r\n    queryAll(selector) {\r\n        return [...document.querySelectorAll(selector)];\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _target, _inProgress, _threshold, _prevX, _prevY, _callback, _isAttached, _box, _task, _listener;\r\nimport { CuiElementBoxFactory } from \"../models/elements\";\r\nimport { getRangeValueOrDefault, is } from \"../utils/functions\";\r\nimport { CuiTaskRunner } from \"../utils/task\";\r\nconst DEFAULT_SCROLL_END_TIMEOUT = 50;\r\nexport class CuiScrollListener {\r\n    constructor(target, threshold) {\r\n        _target.set(this, void 0);\r\n        _inProgress.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        _prevX.set(this, void 0);\r\n        _prevY.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        _isAttached.set(this, void 0);\r\n        _box.set(this, void 0);\r\n        _task.set(this, void 0);\r\n        _listener.set(this, void 0);\r\n        __classPrivateFieldSet(this, _target, target);\r\n        __classPrivateFieldSet(this, _box, CuiElementBoxFactory.get(target));\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _threshold, getRangeValueOrDefault(threshold, 0, 100, 0));\r\n        __classPrivateFieldSet(this, _prevX, __classPrivateFieldSet(this, _prevY, 0));\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(DEFAULT_SCROLL_END_TIMEOUT, false, this.onScrollFinish.bind(this)));\r\n        __classPrivateFieldSet(this, _listener, this.listener.bind(this));\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    attach() {\r\n        __classPrivateFieldGet(this, _target).addEventListener('scroll', __classPrivateFieldGet(this, _listener));\r\n        __classPrivateFieldSet(this, _isAttached, true);\r\n        this.listener(undefined, true, \"init\");\r\n    }\r\n    detach() {\r\n        __classPrivateFieldGet(this, _target).removeEventListener('scroll', __classPrivateFieldGet(this, _listener));\r\n        __classPrivateFieldGet(this, _task).stop();\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n    }\r\n    setTarget(target) {\r\n        if (target !== __classPrivateFieldGet(this, _target)) {\r\n            this.detach();\r\n            __classPrivateFieldSet(this, _target, target);\r\n            this.attach();\r\n        }\r\n    }\r\n    setThreshold(threshold) {\r\n        __classPrivateFieldSet(this, _threshold, getRangeValueOrDefault(threshold, 0, 100, 0));\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _inProgress);\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _isAttached);\r\n    }\r\n    listener(ev, initial, source) {\r\n        if (!is(__classPrivateFieldGet(this, _callback))) {\r\n            return;\r\n        }\r\n        let left = __classPrivateFieldGet(this, _box).getScrollLeft();\r\n        let top = __classPrivateFieldGet(this, _box).getScrollTop();\r\n        __classPrivateFieldSet(this, _prevX, __classPrivateFieldGet(this, _prevX) + left);\r\n        __classPrivateFieldSet(this, _prevY, __classPrivateFieldGet(this, _prevY) + top);\r\n        if (__classPrivateFieldGet(this, _inProgress) || (!this.passedThreshold() && is(ev))) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, true);\r\n        // @ts-ignore - callback already checked\r\n        __classPrivateFieldGet(this, _callback).call(this, {\r\n            base: ev,\r\n            top: top,\r\n            left: left,\r\n            initial: initial !== null && initial !== void 0 ? initial : false,\r\n            scrolling: is(ev),\r\n            source: source !== null && source !== void 0 ? source : \"event\"\r\n        });\r\n        if (is(ev))\r\n            __classPrivateFieldGet(this, _task).start();\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _prevX, 0);\r\n        __classPrivateFieldSet(this, _prevY, 0);\r\n    }\r\n    passedThreshold() {\r\n        return __classPrivateFieldGet(this, _threshold) <= 0 || (__classPrivateFieldGet(this, _prevX) >= __classPrivateFieldGet(this, _threshold) || __classPrivateFieldGet(this, _prevY) >= __classPrivateFieldGet(this, _threshold));\r\n    }\r\n    onScrollFinish() {\r\n        this.listener(undefined, false, \"task\");\r\n    }\r\n}\r\n_target = new WeakMap(), _inProgress = new WeakMap(), _threshold = new WeakMap(), _prevX = new WeakMap(), _prevY = new WeakMap(), _callback = new WeakMap(), _isAttached = new WeakMap(), _box = new WeakMap(), _task = new WeakMap(), _listener = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _pointLeft, _pointTop, _prevDiffY, _prevDiffX, _wasTriggeredX, _wasTriggeredY, _threshold;\r\nexport class CuiOffsetStaticMode {\r\n    matches(top, left, offsetX, offsetY) {\r\n        return (offsetX > 0 && left >= offsetX) ||\r\n            (offsetY > 0 && top >= offsetY);\r\n    }\r\n}\r\n/**\r\n * Dynamically calculates whether to trigger or untrigger an action.\r\n * If current value exceedes offset and threshold action is triggered.\r\n * If action was triggered and current move is lower than threshold action is untriggered\r\n *\r\n * Example: If offsetY is 100, then first after 100 action is set on. It is kept when scrolling down.\r\n * If user decides to scroll up and difference between turning point and current is bigger than threshold then action is set off.\r\n *\r\n * Example usage is with navbar - it shall disappear after offset and return back when user scrolls up.\r\n */\r\nexport class CuiOffsetDynamicMode {\r\n    constructor() {\r\n        _pointLeft.set(this, void 0);\r\n        _pointTop.set(this, void 0);\r\n        _prevDiffY.set(this, void 0);\r\n        _prevDiffX.set(this, void 0);\r\n        _wasTriggeredX.set(this, void 0);\r\n        _wasTriggeredY.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        __classPrivateFieldSet(this, _pointLeft, 0);\r\n        __classPrivateFieldSet(this, _pointTop, 0);\r\n        __classPrivateFieldSet(this, _prevDiffX, 0);\r\n        __classPrivateFieldSet(this, _prevDiffY, 0);\r\n        __classPrivateFieldSet(this, _threshold, 100);\r\n        __classPrivateFieldSet(this, _wasTriggeredX, false);\r\n        __classPrivateFieldSet(this, _wasTriggeredY, false);\r\n    }\r\n    matches(top, left, offsetX, offsetY) {\r\n        return this.fitsOffsetY(top, offsetY) || this.fitsOffsetX(left, offsetX);\r\n    }\r\n    fitsOffsetX(left, offsetX) {\r\n        if (offsetX <= 0)\r\n            return false;\r\n        let diffX = left - __classPrivateFieldGet(this, _pointLeft);\r\n        if (left >= offsetX && diffX > __classPrivateFieldGet(this, _threshold)) {\r\n            __classPrivateFieldSet(this, _wasTriggeredX, true);\r\n        }\r\n        else if (__classPrivateFieldGet(this, _wasTriggeredX) && diffX < -__classPrivateFieldGet(this, _threshold)) {\r\n            __classPrivateFieldSet(this, _wasTriggeredX, false);\r\n        }\r\n        if (diffX < 0 && __classPrivateFieldGet(this, _prevDiffX) < diffX || diffX >= 0 && __classPrivateFieldGet(this, _prevDiffX) > diffX) {\r\n            __classPrivateFieldSet(this, _pointLeft, left);\r\n        }\r\n        __classPrivateFieldSet(this, _prevDiffX, diffX);\r\n        return __classPrivateFieldGet(this, _wasTriggeredX);\r\n    }\r\n    fitsOffsetY(top, offsetY) {\r\n        if (offsetY <= 0) {\r\n            return false;\r\n        }\r\n        let diffY = top - __classPrivateFieldGet(this, _pointTop);\r\n        if (top >= offsetY && diffY > __classPrivateFieldGet(this, _threshold)) {\r\n            __classPrivateFieldSet(this, _wasTriggeredY, true);\r\n        }\r\n        else if (__classPrivateFieldGet(this, _wasTriggeredY) && diffY < -__classPrivateFieldGet(this, _threshold)) {\r\n            __classPrivateFieldSet(this, _wasTriggeredY, false);\r\n        }\r\n        if (diffY < 0 && __classPrivateFieldGet(this, _prevDiffY) < diffY || diffY >= 0 && __classPrivateFieldGet(this, _prevDiffY) > diffY) {\r\n            __classPrivateFieldSet(this, _pointTop, top);\r\n        }\r\n        __classPrivateFieldSet(this, _prevDiffY, diffY);\r\n        return __classPrivateFieldGet(this, _wasTriggeredY);\r\n    }\r\n}\r\n_pointLeft = new WeakMap(), _pointTop = new WeakMap(), _prevDiffY = new WeakMap(), _prevDiffX = new WeakMap(), _wasTriggeredX = new WeakMap(), _wasTriggeredY = new WeakMap(), _threshold = new WeakMap();\r\nexport class CuiOffsetModeFactory {\r\n    static get(mode) {\r\n        if (mode === 'dynamic') {\r\n            return new CuiOffsetDynamicMode();\r\n        }\r\n        return new CuiOffsetStaticMode();\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _listener, _target, _utils, _matched, _action, _prevX, _prevY, _threshold, _root, _modeHandler;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiScrollListener } from \"cui-light-core/dist/esm/listeners/scroll\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { are, getIntOrDefault, getRangeValue, getStringOrDefault, is, isStringTrue } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiOffsetModeFactory } from \"./modes\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiOffsetArgs {\r\n    constructor() {\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n        this.target = \"\";\r\n        this.root = false;\r\n        this.action = \"\";\r\n        this.mode = 'static';\r\n    }\r\n    parse(args) {\r\n        this.target = args.target;\r\n        this.action = args.action;\r\n        this.offsetX = getIntOrDefault(args.offsetX, -1);\r\n        this.offsetY = getIntOrDefault(args.offsetY, -1);\r\n        this.root = isStringTrue(args.root);\r\n        this.mode = getStringOrDefault(args.mode, 'static');\r\n    }\r\n}\r\nexport class CuiOffsetComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-offset`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiOffsetHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiOffsetHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiOffsetHandler\", element, attribute, new CuiOffsetArgs(), utils);\r\n        _listener.set(this, void 0);\r\n        _target.set(this, void 0);\r\n        _utils.set(this, void 0);\r\n        _matched.set(this, void 0);\r\n        _action.set(this, void 0);\r\n        _prevX.set(this, void 0);\r\n        _prevY.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        _root.set(this, void 0);\r\n        _modeHandler.set(this, void 0);\r\n        this.element = element;\r\n        __classPrivateFieldSet(this, _target, this.element);\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n        __classPrivateFieldSet(this, _matched, false);\r\n        __classPrivateFieldSet(this, _action, []);\r\n        __classPrivateFieldSet(this, _prevX, 0);\r\n        __classPrivateFieldSet(this, _prevY, 0);\r\n        __classPrivateFieldSet(this, _threshold, 20);\r\n        __classPrivateFieldSet(this, _root, this.element);\r\n        __classPrivateFieldSet(this, _modeHandler, null);\r\n        __classPrivateFieldSet(this, _listener, undefined);\r\n    }\r\n    onInit() {\r\n        this.parseAttribute();\r\n        __classPrivateFieldSet(this, _listener, new CuiScrollListener(this.args.root ? window : this.element, this.utils.setup.scrollThreshold));\r\n        __classPrivateFieldGet(this, _listener).setCallback(this.onScroll.bind(this));\r\n        __classPrivateFieldGet(this, _listener).attach();\r\n    }\r\n    onUpdate() {\r\n        this.parseAttribute();\r\n    }\r\n    onDestroy() {\r\n        if (__classPrivateFieldGet(this, _listener))\r\n            __classPrivateFieldGet(this, _listener).detach();\r\n    }\r\n    onScroll(ev) {\r\n        this.checkAndPerformActions(ev);\r\n    }\r\n    parseAttribute() {\r\n        __classPrivateFieldSet(this, _root, this.getRoot());\r\n        __classPrivateFieldSet(this, _target, this.getTarget());\r\n        __classPrivateFieldSet(this, _action, CuiActionsListFactory.get(this.args.action));\r\n        __classPrivateFieldSet(this, _modeHandler, CuiOffsetModeFactory.get(this.args.mode));\r\n    }\r\n    checkAndPerformActions(ev) {\r\n        if (!is(__classPrivateFieldGet(this, _modeHandler))) {\r\n            this.logError(\"Cannot perform - mode handler not initialized\", \"checkAndPerformActions\");\r\n        }\r\n        // @ts-ignore modehandler\r\n        let matchesOffset = __classPrivateFieldGet(this, _modeHandler).matches(ev.top, ev.left, this.args.offsetX, this.args.offsetY);\r\n        /**\r\n         * Act and emit event when offset has been reached\r\n         */\r\n        if (matchesOffset !== __classPrivateFieldGet(this, _matched)) {\r\n            this.act(matchesOffset);\r\n            __classPrivateFieldSet(this, _matched, matchesOffset);\r\n            this.callEvent(__classPrivateFieldGet(this, _matched), ev.left, ev.top, ev.scrolling, ev.source, ...this.calcaRatio(ev.left, ev.top));\r\n            return;\r\n        }\r\n        /**\r\n         * Emit event periodically\r\n         */\r\n        if (this.exceededThreshold(ev.left, ev.top)) {\r\n            this.callEvent(__classPrivateFieldGet(this, _matched), ev.left, ev.top, ev.scrolling, ev.source, ...this.calcaRatio(ev.left, ev.top));\r\n            __classPrivateFieldSet(this, _prevX, ev.left);\r\n            __classPrivateFieldSet(this, _prevY, ev.top);\r\n        }\r\n    }\r\n    act(matching) {\r\n        if (!are(__classPrivateFieldGet(this, _action), __classPrivateFieldGet(this, _target))) {\r\n            return;\r\n        }\r\n        this.isLocked = true;\r\n        __classPrivateFieldGet(this, _action).forEach(action => {\r\n            if (matching) {\r\n                action.add(__classPrivateFieldGet(this, _target), __classPrivateFieldGet(this, _utils));\r\n            }\r\n            else {\r\n                action.remove(__classPrivateFieldGet(this, _target), __classPrivateFieldGet(this, _utils));\r\n            }\r\n        });\r\n        this.isLocked = false;\r\n    }\r\n    callEvent(matches, x, y, scrolling, source, ratioX, ratioY) {\r\n        this.emitEvent(EVENTS.OFFSET, {\r\n            matches: __classPrivateFieldGet(this, _matched),\r\n            offsetX: x,\r\n            offsetY: y,\r\n            ratioX: ratioX,\r\n            ratioY: ratioY,\r\n            scrolling: scrolling,\r\n            source: source,\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n    getRoot() {\r\n        return this.args.root ? document.body : this.element;\r\n    }\r\n    exceededThreshold(x, y) {\r\n        return Math.abs(x - __classPrivateFieldGet(this, _prevX)) > __classPrivateFieldGet(this, _threshold) || Math.abs(y - __classPrivateFieldGet(this, _prevY)) > __classPrivateFieldGet(this, _threshold);\r\n    }\r\n    calcaRatio(x, y) {\r\n        let ratY = parseFloat(((__classPrivateFieldGet(this, _root).clientHeight + y) / __classPrivateFieldGet(this, _root).scrollHeight).toFixed(2));\r\n        let ratX = parseFloat(((__classPrivateFieldGet(this, _root).clientWidth + x) / __classPrivateFieldGet(this, _root).scrollWidth).toFixed(2));\r\n        return [getRangeValue(ratX, 0, 1), getRangeValue(ratY, 0, 1)];\r\n    }\r\n    getTarget() {\r\n        let target = this.args.target ? __classPrivateFieldGet(this, _root).querySelector(this.args.target) : null;\r\n        return target !== null && target !== void 0 ? target : this.element;\r\n    }\r\n}\r\n_listener = new WeakMap(), _target = new WeakMap(), _utils = new WeakMap(), _matched = new WeakMap(), _action = new WeakMap(), _prevX = new WeakMap(), _prevY = new WeakMap(), _threshold = new WeakMap(), _root = new WeakMap(), _modeHandler = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defTimeout, _prefix, _eventId;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { getStringOrDefault, getIntOrDefault, is, isString, isStringTrue, are, getFirstMatching } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { CUID_ATTRIBUTE, EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiOpenArgs {\r\n    constructor(timeout) {\r\n        _defTimeout.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        this.target = \"\";\r\n        this.action = \"\";\r\n        this.timeout = 0;\r\n        this.prevent = false;\r\n        this.state = \"\";\r\n    }\r\n    parse(args) {\r\n        if (is(args) && isString(args)) {\r\n            this.target = args;\r\n            this.action = \"\";\r\n            this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n            this.prevent = false;\r\n            this.state = \"\";\r\n            return;\r\n        }\r\n        this.target = getStringOrDefault(args.target, \"\");\r\n        this.action = args.action;\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.prevent = isStringTrue(args.prevent);\r\n        this.state = args.state;\r\n    }\r\n}\r\n_defTimeout = new WeakMap();\r\nexport class CuiOpenComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-open`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiOpenHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiOpenHandler extends CuiHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiOpenHandler\", element, attribute, new CuiOpenArgs(utils.setup.animationTime), utils);\r\n        _eventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _eventId, null);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onInit() {\r\n        this.element.addEventListener('click', this.onClick);\r\n        __classPrivateFieldSet(this, _eventId, this.onEvent(EVENTS.OPEN, this.onOpen.bind(this)));\r\n    }\r\n    onUpdate() {\r\n        //\r\n    }\r\n    onDestroy() {\r\n        this.element.removeEventListener('click', this.onClick);\r\n        this.detachEvent(EVENTS.OPEN, __classPrivateFieldGet(this, _eventId));\r\n    }\r\n    onClick(ev) {\r\n        this.onOpen(ev);\r\n        if (this.args.prevent) {\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n    onOpen(ev) {\r\n        if (this.isLocked) {\r\n            return;\r\n        }\r\n        const target = this.getTarget(this.args.target);\r\n        if (!is(target)) {\r\n            this._log.warning(`Target ${this.args.target} not found`, 'onClick');\r\n            return;\r\n        }\r\n        this.isLocked = true;\r\n        //@ts-ignore - target checked\r\n        this.run(target).then((result) => {\r\n            //@ts-ignore - target checked\r\n            this.activateTarget(ev, target, result);\r\n        }).catch((e) => {\r\n            this._log.exception(e);\r\n        }).finally(() => {\r\n            this.isLocked = false;\r\n        });\r\n    }\r\n    /**\r\n     * Emits open event or performs an opening action\r\n     * @param target target element\r\n     * @returns whether event opened shall be emitted\r\n     */\r\n    run(target) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let cuiId = target.$cuid;\r\n            if (is(cuiId)) {\r\n                this._log.debug(\"Open cUI component\");\r\n                yield this.utils.bus.emit(EVENTS.OPEN, cuiId, this.args.state);\r\n                return false;\r\n            }\r\n            else {\r\n                this._log.debug(\"Open html component\");\r\n                if (are(this.args.timeout, this.args.action)) {\r\n                    this._log.debug(\"Perfrom an action\");\r\n                    let actions = CuiActionsListFactory.get(this.args.action);\r\n                    yield this.actionsHelper.performActions(target, actions, this.args.timeout, () => {\r\n                        this.setActiveClass(target);\r\n                    });\r\n                    return true;\r\n                }\r\n                this.setActiveClassAsync(target);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    setActiveClass(target) {\r\n        if (is(target) && !this.helper.hasClass(this.activeClassName, target)) {\r\n            this.helper.setClass(this.activeClassName, target);\r\n        }\r\n    }\r\n    setActiveClassAsync(target) {\r\n        this.fetch(() => {\r\n            if (is(target) && !this.helper.hasClass(this.activeClassName, target)) {\r\n                this.helper.setClassesAs(target, this.activeClassName);\r\n            }\r\n        });\r\n    }\r\n    activateTarget(ev, target, shouldEmit) {\r\n        if (is(target) && !this.helper.hasClass(this.activeClassName, target)) {\r\n            this.helper.setClassesAs(target, this.activeClassName);\r\n        }\r\n        if (shouldEmit)\r\n            this.emitOpen(ev);\r\n    }\r\n    emitOpen(ev) {\r\n        this.emitEvent(EVENTS.OPENED, {\r\n            event: ev,\r\n            state: this.args.state,\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n    getTarget(target) {\r\n        if (is(target)) {\r\n            //@ts-ignore - target checked\r\n            return document.querySelector(target);\r\n        }\r\n        let parent = this.element.parentElement;\r\n        //@ts-ignore - parent checked\r\n        let result = is(parent) ? parent.querySelectorAll(`[${CUID_ATTRIBUTE}]`) : undefined;\r\n        if (!result || result.length < 2) {\r\n            return undefined;\r\n        }\r\n        return getFirstMatching([...result], (el) => {\r\n            return el !== this.element;\r\n        });\r\n    }\r\n}\r\n_eventId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _eventId, _intersectionObserver, _currentSize, _currentValue, _lastValue, _currentAction, _isIntersecting, _timeoutToken;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { calcWindowSize2, getIntOrDefault, getStringOrDefault, is } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiIntersectionObserver } from \"cui-light-core/dist/esm/observers/intersection\";\r\nimport { CuiActionsFatory } from \"cui-light-core/dist/esm/utils/actions\";\r\nexport class CuiResizeArgs {\r\n    constructor() {\r\n        this.mode = \"simple\";\r\n        this.default = \"\";\r\n        this.small = this.medium = this.large = this.xlarge = undefined;\r\n        this.delay = 0;\r\n    }\r\n    parse(args) {\r\n        var _a, _b, _c, _d;\r\n        this.default = getStringOrDefault(args.default, \"\");\r\n        this.small = (_a = args.small) !== null && _a !== void 0 ? _a : args.s;\r\n        this.medium = (_b = args.medium) !== null && _b !== void 0 ? _b : args.m;\r\n        this.large = (_c = args.large) !== null && _c !== void 0 ? _c : args.l;\r\n        this.xlarge = (_d = args.xlarge) !== null && _d !== void 0 ? _d : args.xl;\r\n        this.mode = args.mode === 'smart' ? \"smart\" : \"simple\";\r\n        this.delay = getIntOrDefault(args.delay, 0);\r\n    }\r\n}\r\nexport class CuiResizeComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-resize`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiResizeHandler(element, utils, this.attribute);\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiResizeHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiResizeHandler\", element, attribute, new CuiResizeArgs(), utils);\r\n        _eventId.set(this, void 0);\r\n        _intersectionObserver.set(this, void 0);\r\n        _currentSize.set(this, void 0);\r\n        _currentValue.set(this, void 0);\r\n        _lastValue.set(this, void 0);\r\n        _currentAction.set(this, void 0);\r\n        _isIntersecting.set(this, void 0);\r\n        _timeoutToken.set(this, void 0);\r\n        __classPrivateFieldSet(this, _eventId, null);\r\n        __classPrivateFieldSet(this, _intersectionObserver, new CuiIntersectionObserver(document.documentElement, [0, 0.1]));\r\n        __classPrivateFieldGet(this, _intersectionObserver).setCallback(this.onIntersection.bind(this));\r\n        __classPrivateFieldSet(this, _lastValue, \"\");\r\n        __classPrivateFieldSet(this, _currentValue, \"\");\r\n        __classPrivateFieldSet(this, _currentSize, \"none\");\r\n        __classPrivateFieldSet(this, _isIntersecting, false);\r\n        __classPrivateFieldSet(this, _timeoutToken, undefined);\r\n        __classPrivateFieldSet(this, _currentAction, undefined);\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _eventId, this.utils.bus.on(EVENTS.RESIZE, this.resize.bind(this)));\r\n        __classPrivateFieldGet(this, _intersectionObserver).connect();\r\n        __classPrivateFieldGet(this, _intersectionObserver).observe(this.element);\r\n        __classPrivateFieldSet(this, _currentSize, calcWindowSize2(window.innerWidth));\r\n        __classPrivateFieldSet(this, _isIntersecting, this.isInViewport(this.element));\r\n        this.setNewValue();\r\n        this.updateElement();\r\n    }\r\n    onUpdate() {\r\n        this.setNewValue();\r\n        this.updateElement();\r\n    }\r\n    onDestroy() {\r\n        if (__classPrivateFieldGet(this, _eventId) !== null) {\r\n            this.utils.bus.detach(EVENTS.RESIZE, __classPrivateFieldGet(this, _eventId));\r\n            __classPrivateFieldSet(this, _eventId, null);\r\n        }\r\n        __classPrivateFieldGet(this, _intersectionObserver).unobserve(this.element);\r\n        __classPrivateFieldGet(this, _intersectionObserver).disconnect();\r\n    }\r\n    resize(data) {\r\n        __classPrivateFieldSet(this, _currentSize, data.current);\r\n        this.setNewValue();\r\n        this.updateElement();\r\n    }\r\n    onIntersection(entries) {\r\n        if (entries.length > 0) {\r\n            __classPrivateFieldSet(this, _isIntersecting, entries[0].isIntersecting);\r\n        }\r\n        this.updateElement();\r\n    }\r\n    setNewValue() {\r\n        let newValue = this.isSmartMode() ? this.getSmartValue(__classPrivateFieldGet(this, _currentSize)) : this.getValue(__classPrivateFieldGet(this, _currentSize), true);\r\n        console.log(\"New value: \" + newValue);\r\n        if (newValue && newValue !== __classPrivateFieldGet(this, _currentValue)) {\r\n            __classPrivateFieldSet(this, _currentValue, newValue);\r\n        }\r\n    }\r\n    getValue(size, replace) {\r\n        let value = undefined;\r\n        switch (size) {\r\n            case \"xlarge\":\r\n                value = this.args.xlarge;\r\n                break;\r\n            case \"large\":\r\n                value = this.args.large;\r\n                break;\r\n            case \"medium\":\r\n                value = this.args.medium;\r\n                break;\r\n            case \"small\":\r\n                value = this.args.small;\r\n                break;\r\n            default:\r\n                value = this.args.default;\r\n        }\r\n        return (replace && !value) ? this.args.default : value;\r\n    }\r\n    getSmartValue(size) {\r\n        var _a, _b, _c, _d;\r\n        let value = this.args.default;\r\n        if (size === 'none') {\r\n            return value;\r\n        }\r\n        value = (_a = this.args.small) !== null && _a !== void 0 ? _a : value;\r\n        if (size === 'small') {\r\n            return value;\r\n        }\r\n        value = (_b = this.args.medium) !== null && _b !== void 0 ? _b : value;\r\n        if (size === 'medium') {\r\n            return value;\r\n        }\r\n        value = (_c = this.args.large) !== null && _c !== void 0 ? _c : value;\r\n        if (size === 'large') {\r\n            return value;\r\n        }\r\n        return (_d = this.args.xlarge) !== null && _d !== void 0 ? _d : value;\r\n    }\r\n    updateElement() {\r\n        if (!__classPrivateFieldGet(this, _isIntersecting) && this.isSmartMode()) {\r\n            this.logInfo(\"Not intersecting\");\r\n            return;\r\n        }\r\n        if (!is(__classPrivateFieldGet(this, _currentValue))) {\r\n            this.logWarning(\"Not eligible to set value: \" + __classPrivateFieldGet(this, _currentValue));\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _lastValue) !== __classPrivateFieldGet(this, _currentValue)) {\r\n            this.run(() => {\r\n                //@ts-ignore already checked\r\n                let newAction = CuiActionsFatory.get(__classPrivateFieldGet(this, _currentValue));\r\n                this.mutate(() => {\r\n                    if (__classPrivateFieldGet(this, _currentAction)) {\r\n                        __classPrivateFieldGet(this, _currentAction).remove(this.element);\r\n                    }\r\n                    newAction.add(this.element);\r\n                    //@ts-ignore already checked\r\n                    __classPrivateFieldSet(this, _lastValue, __classPrivateFieldGet(this, _currentValue));\r\n                    __classPrivateFieldSet(this, _currentAction, newAction);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    isSmartMode() {\r\n        return this.args.mode === 'smart';\r\n    }\r\n    isInViewport(element) {\r\n        const rect = element.getBoundingClientRect();\r\n        return (rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth));\r\n    }\r\n    run(callback) {\r\n        if (__classPrivateFieldGet(this, _timeoutToken)) {\r\n            clearTimeout(__classPrivateFieldGet(this, _timeoutToken));\r\n            __classPrivateFieldSet(this, _timeoutToken, undefined);\r\n        }\r\n        __classPrivateFieldSet(this, _timeoutToken, setTimeout(() => {\r\n            callback();\r\n            __classPrivateFieldSet(this, _timeoutToken, undefined);\r\n        }, this.args.delay));\r\n    }\r\n}\r\n_eventId = new WeakMap(), _intersectionObserver = new WeakMap(), _currentSize = new WeakMap(), _currentValue = new WeakMap(), _lastValue = new WeakMap(), _currentAction = new WeakMap(), _isIntersecting = new WeakMap(), _timeoutToken = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _parent, _target, _onClickBound;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { is, getOffsetTop, getStringOrDefault, are } from \"cui-light-core/dist/esm/utils/functions\";\r\n/**\r\n * Component scrolls to specified target in the document\r\n * Arguments:\r\n * target - selector to target element where page should be scrolled to.\r\n * parent - set parent selector if parent should be different than html parent\r\n * behavior - auto/smooth - choose between step and smooth scrolling\r\n *\r\n */\r\nexport class CuiScrollComponent {\r\n    constructor(prefix) {\r\n        this.attribute = is(prefix) ? prefix + 'scroll' : 'cui-scroll';\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiScrollHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiScrollArgs {\r\n    constructor() {\r\n        this.target = \"\";\r\n        this.parent = \"\";\r\n        this.behavior = 'auto';\r\n    }\r\n    parse(val) {\r\n        this.target = getStringOrDefault(val.target, \"\");\r\n        this.parent = getStringOrDefault(val.parent, \"\");\r\n        this.behavior = is(val.behavior) && val.behavior.toLowerCase() === 'smooth' ? 'smooth' : 'auto';\r\n    }\r\n}\r\nexport class CuiScrollHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiScrollHandler\", element, attribute, new CuiScrollArgs(), utils);\r\n        _parent.set(this, void 0);\r\n        _target.set(this, void 0);\r\n        _onClickBound.set(this, void 0);\r\n        this.element = element;\r\n        __classPrivateFieldSet(this, _parent, null);\r\n        __classPrivateFieldSet(this, _target, null);\r\n        __classPrivateFieldSet(this, _onClickBound, this.onClick.bind(this));\r\n    }\r\n    onInit() {\r\n        this.element.addEventListener('click', __classPrivateFieldGet(this, _onClickBound));\r\n        this.setTargets();\r\n    }\r\n    onUpdate() {\r\n        this.setTargets();\r\n    }\r\n    onDestroy() {\r\n        this.element.removeEventListener('click', __classPrivateFieldGet(this, _onClickBound));\r\n    }\r\n    onClick(ev) {\r\n        if (!are(__classPrivateFieldGet(this, _target), __classPrivateFieldGet(this, _parent))) {\r\n            return;\r\n        }\r\n        //@ts-ignore\r\n        let to = getOffsetTop(__classPrivateFieldGet(this, _target)) - __classPrivateFieldGet(this, _parent).offsetTop;\r\n        //@ts-ignore\r\n        let from = __classPrivateFieldGet(this, _parent).scrollTop;\r\n        let by = to - from;\r\n        //@ts-ignore\r\n        __classPrivateFieldGet(this, _parent).scrollBy({\r\n            top: by,\r\n            behavior: this.args.behavior\r\n        });\r\n        this.emitEvent(EVENTS.ON_SCROLL, {\r\n            to: to,\r\n            by: by,\r\n            //@ts-ignore\r\n            target: __classPrivateFieldGet(this, _target),\r\n            //@ts-ignore\r\n            parent: __classPrivateFieldGet(this, _parent),\r\n            timestamp: Date.now(),\r\n        });\r\n        ev.preventDefault();\r\n    }\r\n    setTargets() {\r\n        __classPrivateFieldSet(this, _target, document.querySelector(this.args.target));\r\n        if (is(__classPrivateFieldGet(this, _target))) {\r\n            __classPrivateFieldSet(this, _parent, is(this.args.parent) ? document.querySelector(this.args.parent) : __classPrivateFieldGet(this, _target).parentElement);\r\n        }\r\n    }\r\n}\r\n_parent = new WeakMap(), _target = new WeakMap(), _onClickBound = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _scrollListener, _callback, _children, _box;\r\nimport { CuiScrollListener } from \"../listeners/scroll\";\r\nimport { CuiElementBoxFactory } from \"../models/elements\";\r\nimport { are, getRangeValue } from \"../utils/functions\";\r\nconst DEFAULT_OPTION_THRESHOLD = 0;\r\nexport class CuiIntersectionListener {\r\n    constructor(element, options) {\r\n        var _a;\r\n        _scrollListener.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        _children.set(this, void 0);\r\n        _box.set(this, void 0);\r\n        __classPrivateFieldSet(this, _box, CuiElementBoxFactory.get(element));\r\n        __classPrivateFieldSet(this, _scrollListener, new CuiScrollListener(element, (_a = options === null || options === void 0 ? void 0 : options.threshold) !== null && _a !== void 0 ? _a : DEFAULT_OPTION_THRESHOLD));\r\n        __classPrivateFieldGet(this, _scrollListener).setCallback(this.onScroll.bind(this));\r\n        __classPrivateFieldSet(this, _children, []);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n    }\r\n    /**\r\n     * Sets child elements - ratio is calcutalated based on them\r\n     * @param children\r\n     */\r\n    setChildren(children) {\r\n        __classPrivateFieldSet(this, _children, children);\r\n    }\r\n    setThreshold(threshold) {\r\n        __classPrivateFieldGet(this, _scrollListener).setThreshold(threshold);\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    setParent(target) {\r\n        __classPrivateFieldSet(this, _box, CuiElementBoxFactory.get(target));\r\n        __classPrivateFieldGet(this, _scrollListener).setTarget(target);\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _scrollListener).isInProgress();\r\n    }\r\n    attach() {\r\n        if (this.isAttached()) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _scrollListener).attach();\r\n    }\r\n    detach() {\r\n        if (!this.isAttached()) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _scrollListener).detach();\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _scrollListener) && __classPrivateFieldGet(this, _scrollListener).isAttached();\r\n    }\r\n    onScroll(ev) {\r\n        if (!are(__classPrivateFieldGet(this, _children), __classPrivateFieldGet(this, _callback))) {\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _callback))\r\n            __classPrivateFieldGet(this, _callback).call(this, this.prepareCallbackResult(ev));\r\n    }\r\n    calcChildVerticalRatio(child, currentTop, currentBottom) {\r\n        let childBottom = child.offsetTop + child.offsetHeight;\r\n        // Simulated top if view top is outside of parent then takes parent top\r\n        let symTop = currentTop > child.offsetTop ? currentTop : child.offsetTop;\r\n        // Simulated bottom if view bottom is outside of parent then takes parent bottom\r\n        let symBottom = currentBottom < childBottom ? currentBottom : childBottom;\r\n        // Calculates amount of pixels that are in view\r\n        let diff = symBottom - symTop;\r\n        // Calculates ratio - how much of a child is in parent view\r\n        let ratio = diff / child.offsetHeight;\r\n        return getRangeValue(ratio, 0, 1);\r\n    }\r\n    calcChildHorizontalRatio(child, currentLeft, currentRight) {\r\n        let childRight = child.offsetLeft + child.offsetWidth;\r\n        // Simulated top if view left is outside of parent then takes parent left\r\n        let symLeft = currentLeft > child.offsetLeft ? currentLeft : child.offsetLeft;\r\n        // Simulated bottom if view right is outside of parent then takes parent right\r\n        let symRight = currentRight < childRight ? currentRight : childRight;\r\n        // Calculates amount of pixels that are in view\r\n        let diff = symRight - symLeft;\r\n        // Calculates ratio - how much of a child is in parent view\r\n        let ratio = diff / child.offsetWidth;\r\n        return getRangeValue(ratio, 0, 1);\r\n    }\r\n    prepareCallbackResult(ev) {\r\n        var _a, _b;\r\n        let parentBottom = ev.top + __classPrivateFieldGet(this, _box).getHeight();\r\n        let parentRight = ev.left + __classPrivateFieldGet(this, _box).getWidth();\r\n        let result = {\r\n            ev: ev.base,\r\n            top: ev.top,\r\n            left: ev.left,\r\n            scrolling: (_a = ev.scrolling) !== null && _a !== void 0 ? _a : false,\r\n            initial: (_b = ev.initial) !== null && _b !== void 0 ? _b : false,\r\n            source: ev.source,\r\n            items: __classPrivateFieldGet(this, _children).map((child, index) => {\r\n                let verticalRatio = this.calcChildVerticalRatio(child, ev.top, parentBottom);\r\n                let horizontalRatio = this.calcChildHorizontalRatio(child, ev.left, parentRight);\r\n                return {\r\n                    verticalRatio: verticalRatio,\r\n                    horizontalRatio: horizontalRatio,\r\n                    element: child\r\n                };\r\n            })\r\n        };\r\n        return result;\r\n    }\r\n}\r\n_scrollListener = new WeakMap(), _callback = new WeakMap(), _children = new WeakMap(), _box = new WeakMap();\r\n","import { are, is } from \"cui-light-core/dist/esm/utils/functions\";\r\nexport class CuiScrollSpyModeHandlerFactory {\r\n    static get(mode) {\r\n        if (mode === \"multi\") {\r\n            return new CuiMultiModeHandler();\r\n        }\r\n        return new CuiSingleModeHandler();\r\n    }\r\n}\r\nclass CuiModeHandlerBase {\r\n    constructor(init) {\r\n        this.previous = init;\r\n    }\r\n    getMatching(ratio, items) {\r\n        return items.reduce((result, item, index) => {\r\n            if (item.verticalRatio > ratio) {\r\n                result.push(index);\r\n            }\r\n            return result;\r\n        }, []);\r\n    }\r\n    addActions(actions, ...elements) {\r\n        this.forEachAction(actions, elements, (action, element) => {\r\n            action.add(element);\r\n        });\r\n    }\r\n    removeActions(actions, ...elements) {\r\n        this.forEachAction(actions, elements, (action, element) => {\r\n            action.remove(element);\r\n        });\r\n    }\r\n    forEachAction(actions, elements, callback) {\r\n        if (!are(actions, elements, callback)) {\r\n            return;\r\n        }\r\n        actions.forEach(action => {\r\n            elements.forEach(element => {\r\n                if (is(element))\r\n                    callback(action, element);\r\n            });\r\n        });\r\n    }\r\n}\r\nexport class CuiSingleModeHandler extends CuiModeHandlerBase {\r\n    constructor() {\r\n        super(-1);\r\n    }\r\n    update(items, ratio, actions, links, linksActions) {\r\n        let matching = this.getMatching(ratio, items);\r\n        let len = matching.length;\r\n        let last = len > 0 ? matching[len - 1] : -1;\r\n        let result = {\r\n            changed: false\r\n        };\r\n        if (!this.matches(last)) {\r\n            if (this.previous > -1)\r\n                this.removeActions(actions, items[this.previous].element);\r\n            if (last > -1) {\r\n                let lastElement = items[last].element;\r\n                result.intersecting = [lastElement];\r\n                this.addActions(actions, lastElement);\r\n            }\r\n            if (are(links, linksActions)) {\r\n                if (this.previous > -1)\r\n                    this.removeActions(linksActions, links[this.previous]);\r\n                if (last > -1)\r\n                    this.addActions(linksActions, links[last]);\r\n            }\r\n            this.previous = last;\r\n            result.changed = true;\r\n            result.intersecting = [];\r\n            return result;\r\n        }\r\n        return result;\r\n    }\r\n    matches(item) {\r\n        return item === this.previous;\r\n    }\r\n}\r\nexport class CuiMultiModeHandler extends CuiModeHandlerBase {\r\n    constructor() {\r\n        super([]);\r\n    }\r\n    update(items, ratio, actions, links, linksActions) {\r\n        let matching = this.getMatching(ratio, items);\r\n        let result = {\r\n            changed: false\r\n        };\r\n        if (!this.matches(matching)) {\r\n            let intersecting = matching.map(idx => { return items[idx].element; });\r\n            this.removeActions(actions, ...this.previous.map(idx => { return items[idx].element; }));\r\n            this.addActions(actions, ...intersecting);\r\n            result.intersecting = intersecting;\r\n            if (are(links, linksActions)) {\r\n                this.removeActions(linksActions, ...this.previous.map(idx => { return links[idx]; }));\r\n                this.addActions(linksActions, ...matching.map(idx => { return links[idx]; }));\r\n            }\r\n            this.previous = matching;\r\n            result.changed = true;\r\n            return result;\r\n        }\r\n        return result;\r\n    }\r\n    matches(item) {\r\n        let len = item.length;\r\n        if (len !== this.previous.length) {\r\n            return false;\r\n        }\r\n        let i = 0;\r\n        for (i = 0; i < len; i++) {\r\n            if (!this.previous.includes(item[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _listener, _links, _actions, _linkActions, _root, _rootBox, _modeHandler;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { getRangeValueOrDefault, getStringOrDefault, isStringTrue, getIntOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS, SCOPE_SELECTOR } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { CuiIntersectionListener } from \"cui-light-core/dist/esm/intersection/intersection\";\r\nimport { CuiElementBoxFactory } from \"cui-light-core/dist/esm/models/elements\";\r\nimport { CuiScrollSpyModeHandlerFactory } from \"./mode\";\r\nconst DEFAULT_SELECTOR = \"> *\";\r\nexport class CuiScrollSpyArgs {\r\n    constructor() {\r\n        this.ratio = 0;\r\n        this.mode = \"single\";\r\n        this.threshold = -1;\r\n        this.selector = \"\";\r\n        this.action = \"\";\r\n        this.isRoot = false;\r\n        this.link = \"\";\r\n        this.linkAction = \"\";\r\n    }\r\n    parse(args) {\r\n        var _a;\r\n        this.selector = `${SCOPE_SELECTOR}${(_a = args.selector) !== null && _a !== void 0 ? _a : DEFAULT_SELECTOR}`;\r\n        this.action = getStringOrDefault(args.action, \"\");\r\n        this.link = getStringOrDefault(args.link, \"\");\r\n        this.linkAction = getStringOrDefault(args.linkAction, \"\");\r\n        this.ratio = getRangeValueOrDefault(parseFloat(args.ratio), 0, 1, 0);\r\n        this.isRoot = isStringTrue(args.isRoot);\r\n        this.mode = (args === null || args === void 0 ? void 0 : args.mode) === 'multi' ? \"multi\" : \"single\";\r\n        this.threshold = getIntOrDefault(args.threshold, -1);\r\n    }\r\n}\r\nexport class CuiScrollspyComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-scrollspy`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiScrollspyHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiScrollspyHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiScrollspyHandler\", element, attribute, new CuiScrollSpyArgs(), utils);\r\n        _listener.set(this, void 0);\r\n        _links.set(this, void 0);\r\n        _actions.set(this, void 0);\r\n        _linkActions.set(this, void 0);\r\n        _root.set(this, void 0);\r\n        _rootBox.set(this, void 0);\r\n        _modeHandler.set(this, void 0);\r\n        this.element = element;\r\n        __classPrivateFieldSet(this, _listener, new CuiIntersectionListener(this.element, { threshold: this.utils.setup.scrollThreshold }));\r\n        __classPrivateFieldSet(this, _links, []);\r\n        __classPrivateFieldSet(this, _actions, []);\r\n        __classPrivateFieldSet(this, _linkActions, []);\r\n        __classPrivateFieldSet(this, _root, undefined);\r\n        __classPrivateFieldSet(this, _rootBox, undefined);\r\n        __classPrivateFieldSet(this, _modeHandler, undefined);\r\n    }\r\n    onInit() {\r\n        this.parseAttribute();\r\n        __classPrivateFieldGet(this, _listener).setCallback(this.onIntersection.bind(this));\r\n        __classPrivateFieldGet(this, _listener).attach();\r\n    }\r\n    onUpdate() {\r\n        this.updateAttributes();\r\n    }\r\n    onDestroy() {\r\n        __classPrivateFieldGet(this, _listener).detach();\r\n    }\r\n    onIntersection(ev) {\r\n        if (!__classPrivateFieldGet(this, _modeHandler)) {\r\n            this.logError(\"Cannot perform - mode handler not initialized\", \"OnIntersection\");\r\n            return;\r\n        }\r\n        let timestamp = Date.now();\r\n        this.mutate(() => {\r\n            //@ts-ignore - modeHandler checked\r\n            let updateResult = __classPrivateFieldGet(this, _modeHandler).update(ev.items, this.args.ratio, __classPrivateFieldGet(this, _actions), __classPrivateFieldGet(this, _links), __classPrivateFieldGet(this, _linkActions));\r\n            if (updateResult.changed) {\r\n                this.emitEvent(EVENTS.TARGET_CHANGE, {\r\n                    intersecting: updateResult.intersecting,\r\n                    timestamp: timestamp\r\n                });\r\n            }\r\n        });\r\n        this.emitEvent(EVENTS.ON_SCROLL, {\r\n            top: ev.top,\r\n            left: ev.left,\r\n            scrolling: ev.scrolling,\r\n            initial: ev.initial,\r\n            source: ev.source,\r\n            timestamp: timestamp,\r\n        });\r\n    }\r\n    parseAttribute() {\r\n        __classPrivateFieldSet(this, _root, this.args.isRoot ? window : this.element);\r\n        __classPrivateFieldSet(this, _rootBox, CuiElementBoxFactory.get(__classPrivateFieldGet(this, _root)));\r\n        let targets = this.args.selector ? __classPrivateFieldGet(this, _rootBox).queryAll(this.args.selector) : [];\r\n        __classPrivateFieldGet(this, _listener).setChildren(targets);\r\n        __classPrivateFieldGet(this, _listener).setThreshold(this.args.threshold);\r\n        __classPrivateFieldSet(this, _links, this.args.link ? [...document.querySelectorAll(this.args.link)] : []);\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n        __classPrivateFieldSet(this, _linkActions, CuiActionsListFactory.get(this.args.linkAction));\r\n        __classPrivateFieldSet(this, _modeHandler, CuiScrollSpyModeHandlerFactory.get(this.args.mode));\r\n    }\r\n    updateAttributes() {\r\n        if (this.prevArgs && this.args.isRoot !== this.prevArgs.isRoot) {\r\n            __classPrivateFieldSet(this, _root, this.args.isRoot ? window : this.element);\r\n            __classPrivateFieldSet(this, _rootBox, CuiElementBoxFactory.get(__classPrivateFieldGet(this, _root)));\r\n            __classPrivateFieldGet(this, _listener).setParent(__classPrivateFieldGet(this, _root));\r\n        }\r\n        if (this.prevArgs && __classPrivateFieldGet(this, _rootBox) && this.args.selector !== this.prevArgs.selector) {\r\n            let targets = this.args.selector ? __classPrivateFieldGet(this, _rootBox).queryAll(this.args.selector) : [];\r\n            __classPrivateFieldGet(this, _listener).setChildren(targets);\r\n        }\r\n        __classPrivateFieldGet(this, _listener).setThreshold(this.args.threshold);\r\n        __classPrivateFieldSet(this, _links, this.args.link ? [...document.querySelectorAll(this.args.link)] : []);\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n        __classPrivateFieldSet(this, _linkActions, CuiActionsListFactory.get(this.args.linkAction));\r\n        __classPrivateFieldSet(this, _modeHandler, CuiScrollSpyModeHandlerFactory.get(this.args.mode));\r\n    }\r\n}\r\n_listener = new WeakMap(), _links = new WeakMap(), _actions = new WeakMap(), _linkActions = new WeakMap(), _root = new WeakMap(), _rootBox = new WeakMap(), _modeHandler = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _elements, _count, _threshold;\r\nimport { is } from \"../../utils/functions\";\r\nexport class CuiSimpleDragOverDetector {\r\n    constructor() {\r\n        _elements.set(this, void 0);\r\n        _count.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        __classPrivateFieldSet(this, _elements, []);\r\n        __classPrivateFieldSet(this, _count, 0);\r\n        __classPrivateFieldSet(this, _threshold, 5);\r\n    }\r\n    setElements(elements) {\r\n        __classPrivateFieldSet(this, _elements, elements);\r\n        __classPrivateFieldSet(this, _count, __classPrivateFieldGet(this, _elements).length);\r\n    }\r\n    setThreshold(value) {\r\n        __classPrivateFieldSet(this, _threshold, value);\r\n    }\r\n    detect(x, y) {\r\n        if (!is(__classPrivateFieldGet(this, _elements))) {\r\n            return [-1, undefined];\r\n        }\r\n        let idx = -1;\r\n        let found = undefined;\r\n        for (let i = 0; i < __classPrivateFieldGet(this, _count); i++) {\r\n            if (this.isInBounds(__classPrivateFieldGet(this, _elements)[i], x, y)) {\r\n                if (i === 0) {\r\n                    idx = i;\r\n                    found = __classPrivateFieldGet(this, _elements)[i];\r\n                    //break;\r\n                }\r\n                else if (i < __classPrivateFieldGet(this, _count) - 1) {\r\n                    idx = i + 1;\r\n                    found = __classPrivateFieldGet(this, _elements)[i + 1];\r\n                    //break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return [idx, found];\r\n    }\r\n    isInBounds(element, x, y) {\r\n        const box = element.getBoundingClientRect();\r\n        if (box.width === 0) {\r\n            console.log(element);\r\n        }\r\n        return x > box.left - __classPrivateFieldGet(this, _threshold) && x < box.left + box.width + __classPrivateFieldGet(this, _threshold) &&\r\n            y > box.top - __classPrivateFieldGet(this, _threshold) && y < box.top + box.height + __classPrivateFieldGet(this, _threshold);\r\n    }\r\n}\r\n_elements = new WeakMap(), _count = new WeakMap(), _threshold = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _root, _moveHandler, _onDragStart, _onDragOver, _onDragEnd, _timeout, _isTracking, _timeoutId;\r\nimport { CuiMoveEventListener } from \"../../listeners/move\";\r\nexport class CuiDragHandler {\r\n    constructor(root) {\r\n        _root.set(this, void 0);\r\n        _moveHandler.set(this, void 0);\r\n        _onDragStart.set(this, void 0);\r\n        _onDragOver.set(this, void 0);\r\n        _onDragEnd.set(this, void 0);\r\n        _timeout.set(this, void 0);\r\n        _isTracking.set(this, void 0);\r\n        _timeoutId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _root, root);\r\n        __classPrivateFieldSet(this, _moveHandler, new CuiMoveEventListener());\r\n        __classPrivateFieldSet(this, _timeout, 150);\r\n        __classPrivateFieldSet(this, _isTracking, false);\r\n        __classPrivateFieldSet(this, _timeoutId, undefined);\r\n        __classPrivateFieldGet(this, _moveHandler).setTarget(__classPrivateFieldGet(this, _root));\r\n        __classPrivateFieldGet(this, _moveHandler).preventDefault(false);\r\n        __classPrivateFieldGet(this, _moveHandler).setCallback(this.onMove.bind(this));\r\n        __classPrivateFieldSet(this, _onDragStart, undefined);\r\n        __classPrivateFieldSet(this, _onDragOver, undefined);\r\n        __classPrivateFieldSet(this, _onDragEnd, undefined);\r\n    }\r\n    setLongPressTimeout(timeout) {\r\n        __classPrivateFieldSet(this, _timeout, timeout);\r\n    }\r\n    onDragStart(callback) {\r\n        __classPrivateFieldSet(this, _onDragStart, callback);\r\n    }\r\n    onDragOver(callback) {\r\n        __classPrivateFieldSet(this, _onDragOver, callback);\r\n    }\r\n    onDragEnd(callback) {\r\n        __classPrivateFieldSet(this, _onDragEnd, callback);\r\n    }\r\n    attach() {\r\n        __classPrivateFieldGet(this, _moveHandler).attach();\r\n    }\r\n    detach() {\r\n        __classPrivateFieldGet(this, _moveHandler).detach();\r\n    }\r\n    onMove(data) {\r\n        switch (data.type) {\r\n            case \"down\":\r\n                if (__classPrivateFieldGet(this, _isTracking)) {\r\n                    return;\r\n                }\r\n                __classPrivateFieldSet(this, _timeoutId, setTimeout(() => {\r\n                    if (__classPrivateFieldGet(this, _onDragStart) && __classPrivateFieldGet(this, _onDragStart).call(this, data)) {\r\n                        __classPrivateFieldSet(this, _isTracking, true);\r\n                    }\r\n                }, __classPrivateFieldGet(this, _timeout)));\r\n                break;\r\n            case \"move\":\r\n                this.cancelTimeout();\r\n                if (!__classPrivateFieldGet(this, _isTracking)) {\r\n                    return;\r\n                }\r\n                if (__classPrivateFieldGet(this, _onDragOver)) {\r\n                    __classPrivateFieldGet(this, _onDragOver).call(this, data);\r\n                }\r\n                break;\r\n            case \"up\":\r\n                this.cancelTimeout();\r\n                if (!__classPrivateFieldGet(this, _isTracking)) {\r\n                    return;\r\n                }\r\n                if (__classPrivateFieldGet(this, _onDragEnd)) {\r\n                    __classPrivateFieldGet(this, _onDragEnd).call(this, data);\r\n                }\r\n                __classPrivateFieldSet(this, _isTracking, false);\r\n                break;\r\n        }\r\n    }\r\n    cancelTimeout() {\r\n        if (__classPrivateFieldGet(this, _timeoutId)) {\r\n            clearTimeout(__classPrivateFieldGet(this, _timeoutId));\r\n            __classPrivateFieldSet(this, _timeoutId, undefined);\r\n        }\r\n    }\r\n}\r\n_root = new WeakMap(), _moveHandler = new WeakMap(), _onDragStart = new WeakMap(), _onDragOver = new WeakMap(), _onDragEnd = new WeakMap(), _timeout = new WeakMap(), _isTracking = new WeakMap(), _timeoutId = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _dragHandler, _triggers, _targets, _currentTarget, _currentIdx, _preview, _movingCls, _detector, _currentBefore, _animation, _previewCls;\r\nimport { ElementBuilder } from \"cui-light-core/dist/esm/builders/element\";\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiSimpleDragOverDetector } from \"cui-light-core/dist/esm/handlers/drag/detectors\";\r\nimport { CuiDragHandler } from \"cui-light-core/dist/esm/handlers/drag/drag\";\r\nimport { CuiSwipeAnimationEngine } from \"cui-light-core/dist/esm/animation/engine\";\r\nimport { getIntOrDefault, replacePrefix, is, are } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { SCOPE_SELECTOR, EVENTS, CLASSES } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst SORTABLE_IS_MOVING = \"{prefix}-moving\";\r\nconst DEFAULT_SELECTOR = \" > *\";\r\nconst SORTABLE_PREVIEW_CLS = \"{prefix}-sortable-preview\";\r\nexport class CuiSortableArgs {\r\n    constructor() {\r\n        this.target = SCOPE_SELECTOR + DEFAULT_SELECTOR;\r\n        ;\r\n        this.trigger = SCOPE_SELECTOR + DEFAULT_SELECTOR;\r\n        this.timeout = 150;\r\n        this.threshold = 5;\r\n    }\r\n    parse(val) {\r\n        this.target = val.target ? SCOPE_SELECTOR + \" \" + val.target : SCOPE_SELECTOR + DEFAULT_SELECTOR;\r\n        this.trigger = val.trigger ? SCOPE_SELECTOR + \" \" + val.trigger : SCOPE_SELECTOR + DEFAULT_SELECTOR;\r\n        this.timeout = getIntOrDefault(val.timeout, 150);\r\n        this.threshold = getIntOrDefault(val.threshold, 5);\r\n    }\r\n}\r\nexport class CuiSortableComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : \"cui\");\r\n        this.attribute = __classPrivateFieldGet(this, _prefix) + \"-sortable\";\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, sutils) {\r\n        return new CuiSortableHandler(element, this.attribute, sutils, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiSortableHandler extends CuiHandler {\r\n    constructor(element, attribute, utils, prefix) {\r\n        super(\"CuiSortableHandler\", element, attribute, new CuiSortableArgs(), utils);\r\n        _dragHandler.set(this, void 0);\r\n        _triggers.set(this, void 0);\r\n        _targets.set(this, void 0);\r\n        _currentTarget.set(this, void 0);\r\n        _currentIdx.set(this, void 0);\r\n        _preview.set(this, void 0);\r\n        _movingCls.set(this, void 0);\r\n        _detector.set(this, void 0);\r\n        _currentBefore.set(this, void 0);\r\n        _animation.set(this, void 0);\r\n        _previewCls.set(this, void 0);\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        __classPrivateFieldSet(this, _triggers, []);\r\n        __classPrivateFieldSet(this, _currentIdx, -1);\r\n        __classPrivateFieldSet(this, _currentTarget, null);\r\n        __classPrivateFieldSet(this, _currentBefore, null);\r\n        __classPrivateFieldSet(this, _preview, null);\r\n        __classPrivateFieldSet(this, _dragHandler, new CuiDragHandler(element));\r\n        __classPrivateFieldGet(this, _dragHandler).onDragStart(this.onDragStart.bind(this));\r\n        __classPrivateFieldGet(this, _dragHandler).onDragOver(this.onDragOver.bind(this));\r\n        __classPrivateFieldGet(this, _dragHandler).onDragEnd(this.onDragEnd.bind(this));\r\n        __classPrivateFieldSet(this, _movingCls, replacePrefix(SORTABLE_IS_MOVING, prefix));\r\n        __classPrivateFieldSet(this, _previewCls, replacePrefix(SORTABLE_PREVIEW_CLS, prefix));\r\n        __classPrivateFieldSet(this, _detector, new CuiSimpleDragOverDetector());\r\n        __classPrivateFieldSet(this, _animation, new CuiSwipeAnimationEngine());\r\n        __classPrivateFieldGet(this, _animation).setOnFinish(() => {\r\n            let item = __classPrivateFieldGet(this, _currentTarget);\r\n            let idx = __classPrivateFieldGet(this, _currentIdx);\r\n            this.stopMovementPrep();\r\n            this.utils.bus.emit(EVENTS.MOVE_LOCK, null, false);\r\n            this.emitEvent(EVENTS.SORTED, {\r\n                item: item,\r\n                index: idx,\r\n                timestamp: new Date()\r\n            });\r\n        });\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldGet(this, _dragHandler).attach();\r\n        this.getTargetsAndTrggers();\r\n        __classPrivateFieldGet(this, _detector).setThreshold(this.args.threshold);\r\n    }\r\n    onUpdate() {\r\n        if (this.prevArgs && (this.args.target !== this.prevArgs.target ||\r\n            this.args.trigger !== this.prevArgs.trigger)) {\r\n            this.getTargetsAndTrggers();\r\n        }\r\n        __classPrivateFieldGet(this, _dragHandler).setLongPressTimeout(this.args.timeout);\r\n    }\r\n    onDestroy() {\r\n        __classPrivateFieldGet(this, _dragHandler).detach();\r\n    }\r\n    /**\r\n     * queries targets and triggers from the element\r\n     * If exception - lists are cleared\r\n     */\r\n    getTargetsAndTrggers() {\r\n        try {\r\n            __classPrivateFieldSet(this, _targets, [...this.element.querySelectorAll(this.args.target)]);\r\n            __classPrivateFieldSet(this, _triggers, [...this.element.querySelectorAll(this.args.trigger)]);\r\n            if (__classPrivateFieldGet(this, _triggers).length !== __classPrivateFieldGet(this, _targets).length) {\r\n                throw new Error(`Triggers (count ${__classPrivateFieldGet(this, _triggers).length}) and targets (count ${__classPrivateFieldGet(this, _targets).length}) selector are not correct`);\r\n            }\r\n            __classPrivateFieldGet(this, _detector).setElements(__classPrivateFieldGet(this, _targets));\r\n        }\r\n        catch (e) {\r\n            this._log.error(\"Incorrect trigger or target selector\");\r\n            this._log.exception(e, \"getTargetsAndTrggers\");\r\n            __classPrivateFieldSet(this, _targets, []);\r\n            __classPrivateFieldSet(this, _triggers, []);\r\n        }\r\n    }\r\n    onDragStart(data) {\r\n        __classPrivateFieldSet(this, _currentIdx, this.getPressedElementIdx(data.target));\r\n        __classPrivateFieldSet(this, _currentTarget, __classPrivateFieldGet(this, _currentIdx) > -1 ? __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)] : null);\r\n        if (!is(__classPrivateFieldGet(this, _currentTarget))) {\r\n            return false;\r\n        }\r\n        this.utils.bus.emit(EVENTS.MOVE_LOCK, null, true);\r\n        this.startMovementPrep(data);\r\n        this.emitEvent(EVENTS.SORT_START, {\r\n            item: __classPrivateFieldGet(this, _currentTarget),\r\n            index: __classPrivateFieldGet(this, _currentIdx),\r\n            timestamp: new Date()\r\n        });\r\n        return true;\r\n    }\r\n    onDragOver(data) {\r\n        this.move(data);\r\n        data.event.preventDefault();\r\n    }\r\n    onDragEnd(data) {\r\n        if (!is(__classPrivateFieldGet(this, _preview))) {\r\n            return;\r\n        }\r\n        //@ts-ignore preview\r\n        __classPrivateFieldGet(this, _animation).setElement(__classPrivateFieldGet(this, _preview));\r\n        __classPrivateFieldGet(this, _animation).setProps(this.getFinishAnimation());\r\n        __classPrivateFieldGet(this, _animation).finish(0, 100, false);\r\n    }\r\n    getPressedElementIdx(target) {\r\n        return __classPrivateFieldGet(this, _triggers).findIndex((trigger) => {\r\n            return trigger.contains(target);\r\n        });\r\n    }\r\n    startMovementPrep(data) {\r\n        this.mutate(() => {\r\n            this.createPreview();\r\n            if (is(__classPrivateFieldGet(this, _currentTarget)))\r\n                //@ts-ignore currentTarget\r\n                this.helper.setClass(__classPrivateFieldGet(this, _movingCls), __classPrivateFieldGet(this, _currentTarget));\r\n            this.helper.setClass(\"cui-locked\", this.element);\r\n            this.helper.setClass(CLASSES.swipingOn, document.body);\r\n            this.setPreviewPosition(data);\r\n            this.setCurrentPosition(data);\r\n        });\r\n    }\r\n    stopMovementPrep() {\r\n        this.mutate(() => {\r\n            if (is(__classPrivateFieldGet(this, _currentTarget)))\r\n                //@ts-ignore currentTarget\r\n                this.helper.removeClass(__classPrivateFieldGet(this, _movingCls), __classPrivateFieldGet(this, _currentTarget));\r\n            this.helper.removeClass(CLASSES.swipingOn, document.body);\r\n            this.helper.removeClass(\"cui-locked\", this.element);\r\n            this.removePreview();\r\n            __classPrivateFieldSet(this, _currentTarget, null);\r\n            __classPrivateFieldSet(this, _currentBefore, null);\r\n            this.getTargetsAndTrggers();\r\n        });\r\n    }\r\n    move(data) {\r\n        this.mutate(() => {\r\n            this.setPreviewPosition(data);\r\n            this.setCurrentPosition(data);\r\n        });\r\n    }\r\n    createPreview() {\r\n        if (!is(__classPrivateFieldGet(this, _currentTarget))) {\r\n            this.logError(\"Cannot create preview - current target does not exist\", \"createPreview\");\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _preview, new ElementBuilder(\"div\").setClasses(__classPrivateFieldGet(this, _previewCls)).build());\r\n        //@ts-ignore currentTarget\r\n        __classPrivateFieldGet(this, _preview).style.width = `${__classPrivateFieldGet(this, _currentTarget).offsetWidth}px`;\r\n        //@ts-ignore currentTarget\r\n        __classPrivateFieldGet(this, _preview).style.height = `${__classPrivateFieldGet(this, _currentTarget).offsetHeight}px`;\r\n        document.body.appendChild(__classPrivateFieldGet(this, _preview));\r\n    }\r\n    removePreview() {\r\n        if (is(__classPrivateFieldGet(this, _preview))) {\r\n            //@ts-ignore currentTarget\r\n            __classPrivateFieldGet(this, _preview).remove();\r\n            __classPrivateFieldSet(this, _preview, null);\r\n        }\r\n    }\r\n    setPreviewPosition(data) {\r\n        if (!is(__classPrivateFieldGet(this, _preview))) {\r\n            return;\r\n        }\r\n        //@ts-ignore preview\r\n        __classPrivateFieldGet(this, _preview).style.top = `${data.y}px`;\r\n        //@ts-ignore preview\r\n        __classPrivateFieldGet(this, _preview).style.left = `${data.x}px`;\r\n    }\r\n    setCurrentPosition(data) {\r\n        if (!__classPrivateFieldGet(this, _currentTarget)) {\r\n            return;\r\n        }\r\n        let [idx, detected] = __classPrivateFieldGet(this, _detector).detect(data.x, data.y);\r\n        if ((idx !== __classPrivateFieldGet(this, _currentIdx)) && detected && __classPrivateFieldGet(this, _currentBefore) !== detected) {\r\n            let el = detected;\r\n            this.insertElement(__classPrivateFieldGet(this, _currentTarget), el);\r\n            __classPrivateFieldSet(this, _currentBefore, el);\r\n            this.getTargetsAndTrggers();\r\n            __classPrivateFieldSet(this, _currentIdx, idx);\r\n        }\r\n    }\r\n    insertElement(source, destination) {\r\n        if (is(destination)) {\r\n            this.element.insertBefore(source, destination);\r\n        }\r\n        else {\r\n            this.element.appendChild(source);\r\n        }\r\n    }\r\n    getFinishAnimation() {\r\n        if (!are(__classPrivateFieldGet(this, _currentTarget), __classPrivateFieldGet(this, _preview))) {\r\n            return {\r\n                opacity: {\r\n                    from: 1,\r\n                    to: 0,\r\n                }\r\n            };\r\n        }\r\n        //@ts-ignore currentTarget\r\n        const box = __classPrivateFieldGet(this, _currentTarget).getBoundingClientRect();\r\n        return {\r\n            opacity: {\r\n                from: 1,\r\n                to: 0,\r\n            },\r\n            top: {\r\n                //@ts-ignore preview\r\n                from: __classPrivateFieldGet(this, _preview).offsetTop,\r\n                //@ts-ignore preview\r\n                to: box.top > 0 ? box.top : __classPrivateFieldGet(this, _preview).offsetTop,\r\n                unit: \"px\"\r\n            },\r\n            left: {\r\n                //@ts-ignore preview\r\n                from: __classPrivateFieldGet(this, _preview).offsetLeft,\r\n                //@ts-ignore preview\r\n                to: box.left > 0 ? box.left : __classPrivateFieldGet(this, _preview).offsetLeft,\r\n                unit: \"px\"\r\n            }\r\n        };\r\n    }\r\n}\r\n_dragHandler = new WeakMap(), _triggers = new WeakMap(), _targets = new WeakMap(), _currentTarget = new WeakMap(), _currentIdx = new WeakMap(), _preview = new WeakMap(), _movingCls = new WeakMap(), _detector = new WeakMap(), _currentBefore = new WeakMap(), _animation = new WeakMap(), _previewCls = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _pauseEventId, _animationPauseClass;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { EVENTS, ICONS } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { is, isString, getStringOrDefault, getIntOrDefault, replacePrefix } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { IconBuilder } from \"cui-light-core/dist/esm/builders/icon\";\r\nexport class CuiSpinnerArgs {\r\n    constructor() {\r\n        this.spinner = \"circle\";\r\n        this.scale = 1;\r\n    }\r\n    parse(args) {\r\n        if (isString(args)) {\r\n            this.spinner = getStringOrDefault(args, \"circle\");\r\n        }\r\n        else {\r\n            this.spinner = getStringOrDefault(args.spinner, \"circle\");\r\n            this.scale = getIntOrDefault(args.scale, 1);\r\n        }\r\n    }\r\n}\r\nexport class CuiSpinnerComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-spinner`;\r\n        ICONS['spinner_circle'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 7.800378,1.7908996 A 8.4986862,8.4986862 0 0 1 18.2091,7.8003784 8.4986862,8.4986862 0 0 1 12.199621,18.209101 8.4986862,8.4986862 0 0 1 1.7908995,12.199622 8.4986862,8.4986862 0 0 1 7.800378,1.7908996 Z\\\"></path></svg>\";\r\n        ICONS['spinner_circle_double'] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" width=\\\"20\\\" height=\\\"20\\\"><path d=\\\"M 10,1.5000006 A 8.4999997,8.4999997 0 0 1 18.5,10 8.4999997,8.4999997 0 0 1 10,18.499999 8.4999997,8.4999997 0 0 1 1.5000005,10 8.4999997,8.4999997 0 0 1 10,1.5000006 Z\\\"></path><path d=\\\"M 10,3.4999997 A 6.5000002,6.5000002 0 0 1 16.5,10 6.5000002,6.5000002 0 0 1 10,16.5 6.5000002,6.5000002 0 0 1 3.5,9.9999993 6.5000002,6.5000002 0 0 1 10,3.4999997 Z\\\"></path></svg>\";\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiSpinnerHandler(element, utils, this.attribute, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiSpinnerHandler extends CuiHandler {\r\n    constructor(element, utils, attribute, prefix) {\r\n        super(\"CuiSpinnerHandler\", element, attribute, new CuiSpinnerArgs(), utils);\r\n        _pauseEventId.set(this, void 0);\r\n        _animationPauseClass.set(this, void 0);\r\n        __classPrivateFieldSet(this, _pauseEventId, null);\r\n        __classPrivateFieldSet(this, _animationPauseClass, replacePrefix(\"{prefix}-animation-pause\", prefix));\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _pauseEventId, this.onEvent(EVENTS.PAUSE, this.onPause.bind(this)));\r\n        this.add();\r\n    }\r\n    onUpdate() {\r\n        if (this.prevArgs && this.args.spinner !== this.prevArgs.spinner) {\r\n            this.add();\r\n        }\r\n    }\r\n    onDestroy() {\r\n        this.removeIfAnyExisists();\r\n        this.detachEvent(EVENTS.PAUSE, __classPrivateFieldGet(this, _pauseEventId));\r\n    }\r\n    addSpinner(iconElement, name) {\r\n        this.element.appendChild(iconElement);\r\n        this.element.classList.add(`animation-spinner-${name}`);\r\n    }\r\n    add() {\r\n        const svgIcon = is(this.args.spinner) ? ICONS[`spinner_${this.args.spinner}`] : null;\r\n        if (!is(svgIcon)) {\r\n            this._log.warning(\"Incorrect spinner name: \" + this.args.spinner);\r\n            return;\r\n        }\r\n        this.removeIfAnyExisists();\r\n        const iconElement = new IconBuilder(svgIcon).setScale(this.args.scale).build();\r\n        this.mutate(this.addSpinner, iconElement, this.args.spinner);\r\n    }\r\n    removeIfAnyExisists() {\r\n        let existing = this.element.querySelector(\"svg\");\r\n        if (existing) {\r\n            existing.remove();\r\n        }\r\n    }\r\n    onPause(flag) {\r\n        this.fetch(() => {\r\n            if (flag && !this.helper.hasClass(__classPrivateFieldGet(this, _animationPauseClass), this.element)) {\r\n                this.helper.setClassesAs(this.element, __classPrivateFieldGet(this, _animationPauseClass));\r\n            }\r\n            else {\r\n                this.helper.removeClassesAs(this.element, __classPrivateFieldGet(this, _animationPauseClass));\r\n            }\r\n        });\r\n        this.emitEvent(EVENTS.PAUSED, flag);\r\n    }\r\n}\r\n_pauseEventId = new WeakMap(), _animationPauseClass = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _defTimeout, _targets, _currentIdx, _links, _task, _switchEventId, _isTracking, _startX, _swipeRatio, _nextIdx, _nextElement, _ratioThreshold, _currSlider, _nextSlider, _animationDef, _targetsCount, _moveEventId;\r\nimport { CuiMutableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiTaskRunner } from \"cui-light-core/dist/esm/utils/task\";\r\nimport { CuiSwipeAnimationEngine } from \"cui-light-core/dist/esm/animation/engine\";\r\nimport { SWIPE_ANIMATIONS_DEFINITIONS } from \"cui-light-core/dist/esm/animation/definitions\";\r\nimport { getStringOrDefault, getIntOrDefault, boolStringOrDefault, calculateNextIndex, is, getChildrenHeight, isInRange } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { SCOPE_SELECTOR, EVENTS, CLASSES } from \"cui-light-core/dist/esm/utils/statics\";\r\n/**\r\n *\r\n *   targets: string - slider elements\r\n *   timeout: number - animation timeout\r\n *   links: string; - link to switcher (indicator, tab, etc)\r\n *   autoTimeout: number - if defined, slider will switch item automatically\r\n *   height: 'auto' | string - element height\r\n *   animation: string - animation name\r\n *   loop: boolean - allows to slide elements in loop\r\n */\r\nconst SWITCH_DEFAULT_TARGETS = \"> li\";\r\nexport class CuiSliderArgs {\r\n    constructor(prefix, timeout) {\r\n        _prefix.set(this, void 0);\r\n        _defTimeout.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        this.targets = SWITCH_DEFAULT_TARGETS;\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.links = \"\";\r\n        this.autoTimeout = -1;\r\n        this.height = \"\";\r\n        this.animation = \"\";\r\n        this.loop = false;\r\n    }\r\n    parse(args) {\r\n        this.targets = SCOPE_SELECTOR + getStringOrDefault(args.targets, SWITCH_DEFAULT_TARGETS);\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.links = args.links;\r\n        this.autoTimeout = getIntOrDefault(args.autoTimeout, -1);\r\n        this.height = getStringOrDefault(args.height, 'auto');\r\n        this.animation = getStringOrDefault(args.animation, 'slide');\r\n        this.loop = boolStringOrDefault(args.loop, false);\r\n    }\r\n}\r\n_prefix = new WeakMap(), _defTimeout = new WeakMap();\r\nexport class CuiSliderComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-slider`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiSliderHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiSliderHandler extends CuiMutableHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiSliderHandler\", element, attribute, new CuiSliderArgs(utils.setup.prefix, utils.setup.animationTime), utils);\r\n        _targets.set(this, void 0);\r\n        _currentIdx.set(this, void 0);\r\n        _links.set(this, void 0);\r\n        _task.set(this, void 0);\r\n        _switchEventId.set(this, void 0);\r\n        //  #moveListener: CuiMoveEventListener;\r\n        _isTracking.set(this, void 0);\r\n        _startX.set(this, void 0);\r\n        _swipeRatio.set(this, void 0);\r\n        _nextIdx.set(this, void 0);\r\n        _nextElement.set(this, void 0);\r\n        _ratioThreshold.set(this, void 0);\r\n        _currSlider.set(this, void 0);\r\n        _nextSlider.set(this, void 0);\r\n        _animationDef.set(this, void 0);\r\n        _targetsCount.set(this, void 0);\r\n        _moveEventId.set(this, void 0);\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        __classPrivateFieldSet(this, _currentIdx, -1);\r\n        __classPrivateFieldSet(this, _nextIdx, -1);\r\n        __classPrivateFieldSet(this, _links, []);\r\n        __classPrivateFieldSet(this, _switchEventId, null);\r\n        __classPrivateFieldSet(this, _moveEventId, null);\r\n        __classPrivateFieldSet(this, _isTracking, false);\r\n        __classPrivateFieldSet(this, _startX, -1);\r\n        __classPrivateFieldSet(this, _swipeRatio, 0);\r\n        __classPrivateFieldSet(this, _nextElement, null);\r\n        __classPrivateFieldSet(this, _ratioThreshold, 0.4);\r\n        __classPrivateFieldSet(this, _currSlider, new CuiSwipeAnimationEngine());\r\n        __classPrivateFieldSet(this, _nextSlider, new CuiSwipeAnimationEngine());\r\n        __classPrivateFieldGet(this, _currSlider).setOnFinish(this.onAnimationFinish.bind(this));\r\n        __classPrivateFieldSet(this, _targetsCount, 0);\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(this.args.autoTimeout, true, this.switch.bind(this, 'next')));\r\n        __classPrivateFieldSet(this, _animationDef, SWIPE_ANIMATIONS_DEFINITIONS[this.args.animation]);\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _switchEventId, this.onEvent(EVENTS.SWITCH, this.onPushSwitch.bind(this)));\r\n        __classPrivateFieldSet(this, _moveEventId, this.onEvent(EVENTS.GLOBAL_MOVE, this.onMove.bind(this)));\r\n        this.getTargets();\r\n        this.getLinks();\r\n        this.getActiveIndex();\r\n        this.setLinkActive(-1, __classPrivateFieldGet(this, _currentIdx));\r\n        this.mutate(() => {\r\n            this.helper.setStyle(this.element, 'height', this.getElementHeight(__classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)]));\r\n        });\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(this.args.autoTimeout, true, this.switch.bind(this, 'next')));\r\n        __classPrivateFieldSet(this, _animationDef, SWIPE_ANIMATIONS_DEFINITIONS[this.args.animation]);\r\n        this.startTask();\r\n    }\r\n    onUpdate() {\r\n        this.mutate(() => {\r\n            this.helper.setStyle(this.element, 'height', this.getElementHeight(__classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)]));\r\n        });\r\n        __classPrivateFieldSet(this, _animationDef, SWIPE_ANIMATIONS_DEFINITIONS[this.args.animation]);\r\n        this.startTask();\r\n    }\r\n    onDestroy() {\r\n        __classPrivateFieldGet(this, _task).stop();\r\n        this.detachEvent(EVENTS.SWITCH, __classPrivateFieldGet(this, _switchEventId));\r\n        this.detachEvent(EVENTS.GLOBAL_MOVE, __classPrivateFieldGet(this, _moveEventId));\r\n    }\r\n    onMutation(record) {\r\n    }\r\n    /**\r\n     * Move listener callback\r\n     * @param data move listener data\r\n     */\r\n    onMove(data) {\r\n        if (this.isLocked || !__classPrivateFieldGet(this, _animationDef)) {\r\n            return;\r\n        }\r\n        let current = __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)];\r\n        switch (data.type) {\r\n            case \"down\":\r\n                if (__classPrivateFieldGet(this, _isTracking) || !current.contains(data.target)) {\r\n                    return;\r\n                }\r\n                __classPrivateFieldSet(this, _isTracking, true);\r\n                __classPrivateFieldSet(this, _startX, data.x);\r\n                __classPrivateFieldGet(this, _currSlider).setElement(current);\r\n                this.helper.setClassesAs(document.body, CLASSES.swipingOn);\r\n                if (data.event.cancelable)\r\n                    data.event.preventDefault();\r\n                break;\r\n            case \"up\":\r\n                if (!__classPrivateFieldGet(this, _isTracking)) {\r\n                    break;\r\n                }\r\n                // Lock component until animation is finished\r\n                this.isLocked = true;\r\n                let absRatio = Math.abs(__classPrivateFieldGet(this, _swipeRatio));\r\n                let timeout = absRatio * this.args.timeout;\r\n                let back = absRatio <= __classPrivateFieldGet(this, _ratioThreshold);\r\n                __classPrivateFieldGet(this, _currSlider).finish(absRatio, timeout, back);\r\n                __classPrivateFieldGet(this, _nextSlider).finish(absRatio, timeout, back);\r\n                this.helper.removeClassesAs(document.body, CLASSES.swipingOn);\r\n                __classPrivateFieldSet(this, _isTracking, false);\r\n                break;\r\n            case \"move\":\r\n                if (!__classPrivateFieldGet(this, _isTracking)) {\r\n                    break;\r\n                }\r\n                let newRatio = (data.x - __classPrivateFieldGet(this, _startX)) / current.offsetWidth;\r\n                if (Math.abs(newRatio - __classPrivateFieldGet(this, _swipeRatio)) < 0.02) {\r\n                    break;\r\n                }\r\n                let nextIdx = calculateNextIndex(__classPrivateFieldGet(this, _swipeRatio) > 0 ? \"next\" : \"prev\", __classPrivateFieldGet(this, _currentIdx), __classPrivateFieldGet(this, _targetsCount));\r\n                __classPrivateFieldSet(this, _swipeRatio, this.adjustMoveRatio(newRatio));\r\n                if (nextIdx !== __classPrivateFieldGet(this, _nextIdx)) {\r\n                    __classPrivateFieldGet(this, _nextElement) && this.helper.removeClass(CLASSES.animProgress, __classPrivateFieldGet(this, _nextElement));\r\n                    __classPrivateFieldSet(this, _nextElement, __classPrivateFieldGet(this, _targets)[nextIdx]);\r\n                    __classPrivateFieldSet(this, _nextIdx, nextIdx);\r\n                    __classPrivateFieldGet(this, _nextSlider).setElement(__classPrivateFieldGet(this, _nextElement));\r\n                    __classPrivateFieldGet(this, _nextSlider).setProps(__classPrivateFieldGet(this, _swipeRatio) > 0 ? __classPrivateFieldGet(this, _animationDef).previous.right : __classPrivateFieldGet(this, _animationDef).previous.left);\r\n                    __classPrivateFieldGet(this, _currSlider).setProps(__classPrivateFieldGet(this, _swipeRatio) > 0 ? __classPrivateFieldGet(this, _animationDef).current.right : __classPrivateFieldGet(this, _animationDef).current.left);\r\n                    this.mutate(() => {\r\n                        __classPrivateFieldGet(this, _nextElement) && this.helper.setClass(CLASSES.animProgress, __classPrivateFieldGet(this, _nextElement));\r\n                    });\r\n                }\r\n                this.mutate(() => {\r\n                    __classPrivateFieldGet(this, _currSlider).update(Math.abs(__classPrivateFieldGet(this, _swipeRatio)));\r\n                    __classPrivateFieldGet(this, _nextSlider).update(Math.abs(__classPrivateFieldGet(this, _swipeRatio)));\r\n                });\r\n                if (data.event.cancelable)\r\n                    data.event.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    adjustMoveRatio(ratio) {\r\n        if (this.args.loop) {\r\n            return ratio;\r\n        }\r\n        if (__classPrivateFieldGet(this, _currentIdx) === __classPrivateFieldGet(this, _targetsCount) - 1 && ratio > 0) {\r\n            return 0;\r\n        }\r\n        if (__classPrivateFieldGet(this, _currentIdx) === 0 && ratio < 0) {\r\n            return 0;\r\n        }\r\n        return ratio;\r\n    }\r\n    /**\r\n     * Api method to switch childrens\r\n     * @param index - index to switch to\r\n     */\r\n    switch(index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isLocked) {\r\n                return false;\r\n            }\r\n            this.onPushSwitch(index);\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param element element this animation was perfromed on\r\n     * @param reverted - flag inidicating whether animation was performed to the end or reverted back to start\r\n     * @param errorOccured - tells whether animation was finished with error\r\n     */\r\n    onAnimationFinish(element, reverted, errorOccured) {\r\n        this.isLocked = false;\r\n        // If not go back or from push then switch, else was go back\r\n        let next = __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _nextIdx)];\r\n        let current = __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)];\r\n        if (!reverted) {\r\n            if (__classPrivateFieldGet(this, _nextIdx) > -1) {\r\n                this.mutate(() => {\r\n                    this.helper.removeClass(CLASSES.animProgress, next);\r\n                    this.helper.setClass(this.activeClassName, next);\r\n                    this.helper.removeClass(this.activeClassName, current);\r\n                    this.helper.removeAttribute(\"style\", current);\r\n                    this.helper.removeAttribute(\"style\", next);\r\n                    this.setLinkActive(__classPrivateFieldGet(this, _currentIdx), __classPrivateFieldGet(this, _nextIdx));\r\n                    this.emitEvent(EVENTS.SWITCHED, {\r\n                        timestamp: Date.now(),\r\n                        index: __classPrivateFieldGet(this, _nextIdx)\r\n                    });\r\n                    __classPrivateFieldSet(this, _currentIdx, __classPrivateFieldGet(this, _nextIdx));\r\n                    __classPrivateFieldSet(this, _nextIdx, -1);\r\n                    __classPrivateFieldSet(this, _nextElement, null);\r\n                    __classPrivateFieldSet(this, _startX, -1);\r\n                    __classPrivateFieldSet(this, _swipeRatio, 0);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (is(__classPrivateFieldGet(this, _nextElement))) {\r\n                //@ts-ignore\r\n                this.helper.removeClass(CLASSES.animProgress, __classPrivateFieldGet(this, _nextElement));\r\n                //@ts-ignore\r\n                this.helper.removeAttribute(\"style\", __classPrivateFieldGet(this, _nextElement));\r\n            }\r\n            this.helper.removeAttribute(\"style\", current);\r\n            __classPrivateFieldSet(this, _nextIdx, -1);\r\n            __classPrivateFieldSet(this, _nextElement, null);\r\n            __classPrivateFieldSet(this, _startX, -1);\r\n            __classPrivateFieldSet(this, _swipeRatio, 0);\r\n        }\r\n        this.startTask();\r\n    }\r\n    onPushSwitch(index) {\r\n        if (!is(index) ||\r\n            this.isLocked ||\r\n            !__classPrivateFieldGet(this, _animationDef) ||\r\n            (!this.args.loop && __classPrivateFieldGet(this, _currentIdx) === 0 && index === 'prev') ||\r\n            (!this.args.loop && __classPrivateFieldGet(this, _currentIdx) === __classPrivateFieldGet(this, _targetsCount) - 1 && index === 'next')) {\r\n            return;\r\n        }\r\n        this.isLocked = true;\r\n        let nextIdx = calculateNextIndex(index, __classPrivateFieldGet(this, _currentIdx), __classPrivateFieldGet(this, _targetsCount));\r\n        if (nextIdx == __classPrivateFieldGet(this, _currentIdx) || nextIdx < 0 || nextIdx >= __classPrivateFieldGet(this, _targets).length) {\r\n            this._log.warning(`Index ${index} is not within the suitable range`);\r\n            return false;\r\n        }\r\n        __classPrivateFieldSet(this, _nextIdx, nextIdx);\r\n        let current = __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)];\r\n        let next = __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _nextIdx)];\r\n        __classPrivateFieldGet(this, _currSlider).setElement(current);\r\n        __classPrivateFieldGet(this, _nextSlider).setElement(next);\r\n        __classPrivateFieldGet(this, _currSlider).setProps(index === 'prev' ? __classPrivateFieldGet(this, _animationDef).current.left : __classPrivateFieldGet(this, _animationDef).current.right);\r\n        __classPrivateFieldGet(this, _nextSlider).setProps(index === 'prev' ? __classPrivateFieldGet(this, _animationDef).previous.left : __classPrivateFieldGet(this, _animationDef).previous.right);\r\n        this.mutate(() => {\r\n            __classPrivateFieldGet(this, _currSlider).finish(0, this.args.timeout, false);\r\n            __classPrivateFieldGet(this, _nextSlider).finish(0, this.args.timeout, false);\r\n            this.helper.setClass(CLASSES.animProgress, next);\r\n        });\r\n    }\r\n    getActiveIndex() {\r\n        __classPrivateFieldSet(this, _currentIdx, is(__classPrivateFieldGet(this, _targets)) ? __classPrivateFieldGet(this, _targets).findIndex(target => this.helper.hasClass(this.activeClassName, target)) : -1);\r\n    }\r\n    getElementHeight(current) {\r\n        if (!is(this.args.height) || this.args.height === 'auto') {\r\n            return getChildrenHeight(current) + \"px\";\r\n        }\r\n        else {\r\n            return this.args.height;\r\n        }\r\n    }\r\n    /**\r\n     * Queries targets\r\n     */\r\n    getTargets() {\r\n        let t = this.element.querySelectorAll(this.args.targets);\r\n        __classPrivateFieldSet(this, _targets, t.length > 0 ? [...t] : []);\r\n        __classPrivateFieldSet(this, _targetsCount, __classPrivateFieldGet(this, _targets).length);\r\n    }\r\n    /**\r\n     * Get linked switcher elements\r\n     */\r\n    getLinks() {\r\n        __classPrivateFieldSet(this, _links, is(this.args.links) ? [...document.querySelectorAll(this.args.links)] : []);\r\n    }\r\n    /**\r\n     * Set active class on linked switcher if set\r\n     * @param current - current index (to remove active from)\r\n     * @param next - next index (to set action on)\r\n     */\r\n    setLinkActive(current, next) {\r\n        if (!is(__classPrivateFieldGet(this, _links))) {\r\n            return;\r\n        }\r\n        this.mutate(() => {\r\n            if (isInRange(current, 0, __classPrivateFieldGet(this, _links).length - 1)) {\r\n                this.helper.removeClass(this.activeClassName, __classPrivateFieldGet(this, _links)[current]);\r\n            }\r\n            if (isInRange(next, 0, __classPrivateFieldGet(this, _links).length - 1)) {\r\n                this.helper.setClass(this.activeClassName, __classPrivateFieldGet(this, _links)[next]);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Runs task if arguments setup allows for it - auto flag must be set to true\r\n     */\r\n    startTask() {\r\n        __classPrivateFieldGet(this, _task).stop();\r\n        if (this.args.autoTimeout) {\r\n            __classPrivateFieldGet(this, _task).start();\r\n        }\r\n    }\r\n}\r\n_targets = new WeakMap(), _currentIdx = new WeakMap(), _links = new WeakMap(), _task = new WeakMap(), _switchEventId = new WeakMap(), _isTracking = new WeakMap(), _startX = new WeakMap(), _swipeRatio = new WeakMap(), _nextIdx = new WeakMap(), _nextElement = new WeakMap(), _ratioThreshold = new WeakMap(), _currSlider = new WeakMap(), _nextSlider = new WeakMap(), _animationDef = new WeakMap(), _targetsCount = new WeakMap(), _moveEventId = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _prefix, _defTimeout, _targets, _currentIdx, _links, _switches, _task, _switchEventId, _actionsIn, _actionsOut;\r\nimport { CuiMutableHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiTaskRunner } from \"cui-light-core/dist/esm/utils/task\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { is, getStringOrDefault, replacePrefix, getIntOrDefault, isStringTrue, calculateNextIndex, getChildrenHeight, isInRange } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { SCOPE_SELECTOR, EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst SWITCH_DEFAULT_ACTION_IN = \".{prefix}-switch-animation-default-in\";\r\nconst SWITCH_DEFAULT_ACTION_OUT = \".{prefix}-switch-animation-default-out\";\r\nconst SWITCH_DEFAULT_TARGETS = \" > *\";\r\nexport class CuiSwitchArgs {\r\n    constructor(prefix, timeout) {\r\n        _prefix.set(this, void 0);\r\n        _defTimeout.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix);\r\n        __classPrivateFieldSet(this, _defTimeout, timeout !== null && timeout !== void 0 ? timeout : 300);\r\n        this.targets = \"\";\r\n        this.in = \"\";\r\n        this.out = \"\";\r\n        this.timeout = __classPrivateFieldGet(this, _defTimeout);\r\n        this.links = \"\";\r\n        this.switch = \"\";\r\n        this.autoTimeout = -1;\r\n        this.height = \"\";\r\n        this.loop = false;\r\n    }\r\n    parse(args) {\r\n        this.targets = is(args.targets) ? SCOPE_SELECTOR + args.targets : SCOPE_SELECTOR + SWITCH_DEFAULT_TARGETS;\r\n        this.in = getStringOrDefault(args.in, replacePrefix(SWITCH_DEFAULT_ACTION_IN, __classPrivateFieldGet(this, _prefix)));\r\n        this.out = getStringOrDefault(args.out, replacePrefix(SWITCH_DEFAULT_ACTION_OUT, __classPrivateFieldGet(this, _prefix)));\r\n        this.timeout = getIntOrDefault(args.timeout, __classPrivateFieldGet(this, _defTimeout));\r\n        this.links = getStringOrDefault(args.links, \"\");\r\n        this.switch = getStringOrDefault(args.switch, \"\");\r\n        this.autoTimeout = getIntOrDefault(args.autoTimeout, -1);\r\n        this.height = getStringOrDefault(args.height, 'auto');\r\n        this.loop = isStringTrue(args.loop);\r\n    }\r\n}\r\n_prefix = new WeakMap(), _defTimeout = new WeakMap();\r\nexport class CuiSwitchComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-switch`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiSwitchHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiSwitchHandler extends CuiMutableHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiSwitchHandler\", element, attribute, new CuiSwitchArgs(utils.setup.prefix, utils.setup.animationTime), utils);\r\n        _targets.set(this, void 0);\r\n        _currentIdx.set(this, void 0);\r\n        _links.set(this, void 0);\r\n        _switches.set(this, void 0);\r\n        _task.set(this, void 0);\r\n        _switchEventId.set(this, void 0);\r\n        _actionsIn.set(this, void 0);\r\n        _actionsOut.set(this, void 0);\r\n        __classPrivateFieldSet(this, _targets, []);\r\n        __classPrivateFieldSet(this, _currentIdx, -1);\r\n        __classPrivateFieldSet(this, _links, []);\r\n        __classPrivateFieldSet(this, _switches, []);\r\n        __classPrivateFieldSet(this, _switchEventId, null);\r\n        __classPrivateFieldSet(this, _actionsIn, __classPrivateFieldSet(this, _actionsOut, []));\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(this.args.autoTimeout, true, this.switch.bind(this, 'next')));\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _switchEventId, this.onEvent(EVENTS.SWITCH, this.onPushSwitch.bind(this)));\r\n        this.parseArguments();\r\n        this.getTargets();\r\n        this.getActiveIndex();\r\n        this.getSwitches();\r\n        this.setSwitchesActive(__classPrivateFieldGet(this, _currentIdx));\r\n        this.setLinkActive(-1, __classPrivateFieldGet(this, _currentIdx));\r\n        this.mutate(() => {\r\n            this.helper.setStyle(this.element, 'height', this.getElementHeight(__classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)]));\r\n        });\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(this.args.autoTimeout, true, this.switch.bind(this, 'next')));\r\n        this.startTask();\r\n    }\r\n    onUpdate() {\r\n        this.parseArguments();\r\n        this.getTargets();\r\n        this.getSwitches();\r\n        this.setSwitchesActive(__classPrivateFieldGet(this, _currentIdx));\r\n        this.mutate(() => {\r\n            this.helper.setStyle(this.element, 'height', this.getElementHeight(__classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)]));\r\n        });\r\n        this.startTask();\r\n    }\r\n    onDestroy() {\r\n        __classPrivateFieldGet(this, _task).stop();\r\n        this.detachEvent(EVENTS.SWITCH, __classPrivateFieldGet(this, _switchEventId));\r\n    }\r\n    onMutation(record) {\r\n        this.getTargets();\r\n        this.mutate(() => {\r\n            this.helper.setStyle(this.element, 'height', this.getElementHeight(__classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)]));\r\n        });\r\n    }\r\n    switch(index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isLocked) {\r\n                return false;\r\n            }\r\n            this.getSwitches();\r\n            this.getActiveIndex();\r\n            let nextIdx = calculateNextIndex(index, __classPrivateFieldGet(this, _currentIdx), __classPrivateFieldGet(this, _targets).length);\r\n            if (!this.args.loop && ((index === \"next\" && nextIdx === 0) || (index === 'prev' && __classPrivateFieldGet(this, _currentIdx) === 0))) {\r\n                this.logInfo(\"Switch blocked by loop settings\", \"switch\");\r\n                return false;\r\n            }\r\n            if (nextIdx == __classPrivateFieldGet(this, _currentIdx) || nextIdx < 0 || nextIdx >= __classPrivateFieldGet(this, _targets).length) {\r\n                this.logWarning(`Index ${index} is not within the suitable range`, \"switch\");\r\n                return false;\r\n            }\r\n            this.isLocked = true;\r\n            this.setSwitchesActive(nextIdx);\r\n            let nextItem = __classPrivateFieldGet(this, _targets)[nextIdx];\r\n            yield this.actionsHelper.performSwitchAction(nextItem, __classPrivateFieldGet(this, _currentIdx) > -1 ? __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)] : null, __classPrivateFieldGet(this, _actionsIn), __classPrivateFieldGet(this, _actionsOut), () => {\r\n                // Set next element active\r\n                nextItem.classList.add(this.activeClassName);\r\n                // Remove active from current element (if current exists)\r\n                if (__classPrivateFieldGet(this, _currentIdx) > -1)\r\n                    __classPrivateFieldGet(this, _targets)[__classPrivateFieldGet(this, _currentIdx)].classList.remove(this.activeClassName);\r\n                // Update linked items\r\n                this.setLinkActive(__classPrivateFieldGet(this, _currentIdx), nextIdx);\r\n                // Update element height - it must be done a parent get height based on current child\r\n                this.helper.setStyle(this.element, 'height', this.getElementHeight(nextItem));\r\n                this.startTask();\r\n                this.isLocked = false;\r\n            }, this.args.timeout);\r\n            this.emitEvent(EVENTS.SWITCHED, {\r\n                timestamp: Date.now(),\r\n                index: nextIdx\r\n            });\r\n            return true;\r\n        });\r\n    }\r\n    onPushSwitch(index) {\r\n        this.switch(index);\r\n    }\r\n    getActiveIndex() {\r\n        __classPrivateFieldSet(this, _currentIdx, is(__classPrivateFieldGet(this, _targets)) ? __classPrivateFieldGet(this, _targets).findIndex(target => this.helper.hasClass(this.activeClassName, target)) : -1);\r\n    }\r\n    getElementHeight(current) {\r\n        if (!is(this.args.height) || this.args.height === 'auto') {\r\n            return getChildrenHeight(current) + \"px\";\r\n        }\r\n        else {\r\n            return this.args.height;\r\n        }\r\n    }\r\n    /**\r\n     * Gets attributes value and prepares properties\r\n     */\r\n    parseArguments() {\r\n        __classPrivateFieldSet(this, _actionsIn, CuiActionsListFactory.get(this.args.in));\r\n        __classPrivateFieldSet(this, _actionsOut, CuiActionsListFactory.get(this.args.out));\r\n        __classPrivateFieldSet(this, _links, is(this.args.links) ? [...document.querySelectorAll(this.args.links)] : []);\r\n    }\r\n    /**\r\n     * Query target elements\r\n     */\r\n    getTargets() {\r\n        console.log(this.args.targets);\r\n        let t = this.element.querySelectorAll(this.args.targets);\r\n        __classPrivateFieldSet(this, _targets, t.length > 0 ? [...t] : []);\r\n    }\r\n    getSwitches() {\r\n        let switches = is(this.args.switch) ? document.querySelectorAll(this.args.switch) : null;\r\n        __classPrivateFieldSet(this, _switches, []);\r\n        if (switches) {\r\n            switches.forEach(sw => {\r\n                __classPrivateFieldGet(this, _switches).push(sw);\r\n            });\r\n        }\r\n    }\r\n    setLinkActive(current, next) {\r\n        if (!is(__classPrivateFieldGet(this, _links))) {\r\n            return;\r\n        }\r\n        if (isInRange(current, 0, __classPrivateFieldGet(this, _links).length - 1)) {\r\n            this.helper.removeClass(this.activeClassName, __classPrivateFieldGet(this, _links)[current]);\r\n        }\r\n        if (isInRange(next, 0, __classPrivateFieldGet(this, _links).length - 1)) {\r\n            this.helper.setClass(this.activeClassName, __classPrivateFieldGet(this, _links)[next]);\r\n        }\r\n    }\r\n    /**\r\n     * Sets propers active state on attached switches\r\n     * @param index\r\n     */\r\n    setSwitchesActive(index) {\r\n        __classPrivateFieldGet(this, _switches).forEach(sw => {\r\n            this.emitLinkSwitch(sw.$cuid, index);\r\n        });\r\n    }\r\n    /**\r\n     * Emits push event to attached switch to set proper index\r\n     * @param id - cuid of element\r\n     * @param index - index to be set on element\r\n     */\r\n    emitLinkSwitch(id, index) {\r\n        if (is(id))\r\n            this.utils.bus.emit(EVENTS.SWITCH, id, index);\r\n    }\r\n    /**\r\n     * Runs task if arguments setup allows for it - auto flag must be set to true\r\n     */\r\n    startTask() {\r\n        __classPrivateFieldGet(this, _task).stop();\r\n        if (this.args.autoTimeout) {\r\n            __classPrivateFieldGet(this, _task).start();\r\n        }\r\n    }\r\n}\r\n_targets = new WeakMap(), _currentIdx = new WeakMap(), _links = new WeakMap(), _switches = new WeakMap(), _task = new WeakMap(), _switchEventId = new WeakMap(), _actionsIn = new WeakMap(), _actionsOut = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _targetId, _isList, _listeners;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { is } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst SWITCHER_LIST_ITEM_SELECTOR = \"li > a\";\r\nexport class CuiSwitcherArgs {\r\n    constructor() {\r\n        this.index = \"\";\r\n        this.target = \"\";\r\n    }\r\n    parse(args) {\r\n        if (!is(args)) {\r\n            return;\r\n        }\r\n        this.target = args.target;\r\n        this.index = args.index;\r\n    }\r\n}\r\nexport class CuiSwitcherComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : 'cui'}-switcher`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiSwitcherHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiSwitcherHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiSwitcherHandler\", element, attribute, new CuiSwitcherArgs(), utils);\r\n        _targetId.set(this, void 0);\r\n        _isList.set(this, void 0);\r\n        _listeners.set(this, void 0);\r\n        __classPrivateFieldSet(this, _targetId, null);\r\n        __classPrivateFieldSet(this, _isList, element.tagName === 'UL');\r\n        this.onClickEvent = this.onClickEvent.bind(this);\r\n        __classPrivateFieldSet(this, _listeners, []);\r\n    }\r\n    onInit() {\r\n        this.setEvents();\r\n        this.getTarget();\r\n    }\r\n    onUpdate() {\r\n        this.getTarget();\r\n    }\r\n    onDestroy() {\r\n        this.removeEvents();\r\n    }\r\n    getTarget() {\r\n        if (!is(this.args.target)) {\r\n            __classPrivateFieldSet(this, _targetId, null);\r\n        }\r\n        let target = document.querySelector(this.args.target);\r\n        if (is(target)) {\r\n            __classPrivateFieldSet(this, _targetId, target.$cuid);\r\n        }\r\n    }\r\n    setEvents() {\r\n        if (__classPrivateFieldGet(this, _isList)) {\r\n            let elements = this.element.querySelectorAll(SWITCHER_LIST_ITEM_SELECTOR);\r\n            elements.forEach((el, index) => {\r\n                let list = this.onListItemClick.bind(this, index);\r\n                __classPrivateFieldGet(this, _listeners).push(list);\r\n                //@ts-ignore\r\n                el.addEventListener('click', list);\r\n            });\r\n        }\r\n        else {\r\n            this.element.addEventListener('click', this.onClickEvent);\r\n        }\r\n    }\r\n    removeEvents() {\r\n        if (__classPrivateFieldGet(this, _isList)) {\r\n            let elements = this.element.querySelectorAll(SWITCHER_LIST_ITEM_SELECTOR);\r\n            elements.forEach((el, index) => {\r\n                if (__classPrivateFieldGet(this, _listeners).length > index)\r\n                    //@ts-ignore\r\n                    el.removeEventListener('click', __classPrivateFieldGet(this, _listeners)[index]);\r\n            });\r\n            __classPrivateFieldSet(this, _listeners, []);\r\n        }\r\n        else {\r\n            this.element.removeEventListener('click', this.onClickEvent);\r\n        }\r\n    }\r\n    onClickEvent(ev) {\r\n        this.getTarget();\r\n        if (!is(this.args.index)) {\r\n            return;\r\n        }\r\n        this.onClick(this.args.index.trim());\r\n    }\r\n    onListItemClick(index, ev) {\r\n        this.getTarget();\r\n        this.onClick(index);\r\n    }\r\n    onClick(index) {\r\n        if (!is(__classPrivateFieldGet(this, _targetId))) {\r\n            return;\r\n        }\r\n        //@ts-ignore  targetId checked already\r\n        this.utils.bus.emit(EVENTS.SWITCH, __classPrivateFieldGet(this, _targetId), index);\r\n    }\r\n}\r\n_targetId = new WeakMap(), _isList = new WeakMap(), _listeners = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _target, _utils, _toggleEventId, _actions;\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { is, isString, getStringOrDefault } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiToggleArgs {\r\n    constructor() {\r\n        this.action = \"\";\r\n        this.target = \"\";\r\n    }\r\n    parse(args) {\r\n        if (is(args) && isString(args)) {\r\n            this.action = args;\r\n        }\r\n        else {\r\n            this.target = getStringOrDefault(args.target, \"\");\r\n            this.action = args.action;\r\n        }\r\n    }\r\n}\r\nexport class CuiToggleComponent {\r\n    constructor(prefix) {\r\n        this.attribute = `${prefix !== null && prefix !== void 0 ? prefix : \"cui\"}-toggle`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, utils) {\r\n        return new CuiToggleHandler(element, utils, this.attribute);\r\n    }\r\n}\r\nexport class CuiToggleHandler extends CuiHandler {\r\n    constructor(element, utils, attribute) {\r\n        super(\"CuiToggleHandler\", element, attribute, new CuiToggleArgs(), utils);\r\n        _target.set(this, void 0);\r\n        _utils.set(this, void 0);\r\n        _toggleEventId.set(this, void 0);\r\n        _actions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _target, this.element);\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n        __classPrivateFieldSet(this, _toggleEventId, null);\r\n        __classPrivateFieldSet(this, _actions, []);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldSet(this, _target, this.getTarget());\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n        this.element.addEventListener('click', this.onClick);\r\n        __classPrivateFieldSet(this, _toggleEventId, this.onEvent(EVENTS.TOGGLE, this.toggle.bind(this)));\r\n    }\r\n    onUpdate() {\r\n        __classPrivateFieldSet(this, _target, this.getTarget());\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n    }\r\n    onDestroy() {\r\n        this.element.removeEventListener('click', this.onClick);\r\n        this.detachEvent(EVENTS.TOGGLE, __classPrivateFieldGet(this, _toggleEventId));\r\n    }\r\n    toggle() {\r\n        if (!__classPrivateFieldGet(this, _target)) {\r\n            this.logError(\"Target in not provided\", \"toggle\");\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _actions).forEach(action => action.toggle(__classPrivateFieldGet(this, _target), __classPrivateFieldGet(this, _utils)));\r\n        this.emitEvent(EVENTS.TOGGLED, {\r\n            action: this.args.action,\r\n            target: __classPrivateFieldGet(this, _target),\r\n            timestamp: Date.now()\r\n        });\r\n    }\r\n    onClick(ev) {\r\n        this.toggle();\r\n        ev.preventDefault();\r\n    }\r\n    getTarget() {\r\n        var _a;\r\n        if (!this.args.target) {\r\n            return this.element;\r\n        }\r\n        return (_a = document.querySelector(this.args.target)) !== null && _a !== void 0 ? _a : this.element;\r\n    }\r\n}\r\n_target = new WeakMap(), _utils = new WeakMap(), _toggleEventId = new WeakMap(), _actions = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _defAct, _prefix, _hoverListener, _tooltip, _margin, _positionCalculator, _tooltipDataCls, _actions, _task;\r\nimport { ElementBuilder } from \"cui-light-core/dist/esm/builders/element\";\r\nimport { CuiHandler } from \"cui-light-core/dist/esm/handlers/base\";\r\nimport { CuiHoverListener } from \"cui-light-core/dist/esm/listeners/hover\";\r\nimport { CuiBasePositionCalculator } from \"cui-light-core/dist/esm/position/calculator\";\r\nimport { CuiTaskRunner } from \"cui-light-core/dist/esm/utils/task\";\r\nimport { CuiActionsListFactory } from \"cui-light-core/dist/esm/utils/actions\";\r\nimport { replacePrefix, isString, getStringOrDefault, getIntOrDefault, is } from \"cui-light-core/dist/esm/utils/functions\";\r\nconst TOOLTIP_ACTION = \".{prefix}-animation-tooltip-in\";\r\nconst TOOLTIP_DATA = \"{prefix}-tooltip-data\";\r\nexport class CuiTooltipArgs {\r\n    constructor(prefix) {\r\n        _defAct.set(this, void 0);\r\n        __classPrivateFieldSet(this, _defAct, replacePrefix(TOOLTIP_ACTION, prefix));\r\n        this.content = \"\";\r\n        this.width = 150;\r\n        this.margin = 8;\r\n        this.timeout = 2000;\r\n        this.pos = \"\";\r\n        this.action = __classPrivateFieldGet(this, _defAct);\r\n    }\r\n    parse(val) {\r\n        if (isString(val)) {\r\n            this.content = getStringOrDefault(val, \"\");\r\n            return;\r\n        }\r\n        this.content = getStringOrDefault(val.content, \"\");\r\n        this.width = getIntOrDefault(val.width, 150);\r\n        this.margin = getIntOrDefault(val.margin, 8);\r\n        this.pos = getStringOrDefault(val.pos, \"\");\r\n        this.action = getStringOrDefault(val.action, __classPrivateFieldGet(this, _defAct));\r\n        this.timeout = getIntOrDefault(val.timeout, 2000);\r\n    }\r\n}\r\n_defAct = new WeakMap();\r\nexport class CuiTooltipComponent {\r\n    constructor(prefix) {\r\n        _prefix.set(this, void 0);\r\n        __classPrivateFieldSet(this, _prefix, prefix !== null && prefix !== void 0 ? prefix : 'cui');\r\n        this.attribute = `${__classPrivateFieldGet(this, _prefix)}-tooltip`;\r\n    }\r\n    getStyle() {\r\n        return null;\r\n    }\r\n    get(element, sutils) {\r\n        return new CuiTooltipHandler(element, this.attribute, sutils, __classPrivateFieldGet(this, _prefix));\r\n    }\r\n}\r\n_prefix = new WeakMap();\r\nexport class CuiTooltipHandler extends CuiHandler {\r\n    constructor(element, attribute, utils, prefix) {\r\n        super(\"CuiTooltipHandler\", element, attribute, new CuiTooltipArgs(prefix), utils);\r\n        _hoverListener.set(this, void 0);\r\n        _tooltip.set(this, void 0);\r\n        _margin.set(this, void 0);\r\n        _positionCalculator.set(this, void 0);\r\n        _tooltipDataCls.set(this, void 0);\r\n        _actions.set(this, void 0);\r\n        _task.set(this, void 0);\r\n        __classPrivateFieldSet(this, _tooltip, undefined);\r\n        __classPrivateFieldSet(this, _actions, []);\r\n        __classPrivateFieldSet(this, _task, undefined);\r\n        __classPrivateFieldSet(this, _tooltipDataCls, replacePrefix(TOOLTIP_DATA, prefix));\r\n        __classPrivateFieldSet(this, _hoverListener, new CuiHoverListener(element));\r\n        __classPrivateFieldGet(this, _hoverListener).setCallback(this.onHover.bind(this));\r\n        __classPrivateFieldSet(this, _margin, 8);\r\n        __classPrivateFieldSet(this, _positionCalculator, new CuiBasePositionCalculator());\r\n        __classPrivateFieldGet(this, _positionCalculator).setPreferred(\"top-center\");\r\n    }\r\n    onInit() {\r\n        __classPrivateFieldGet(this, _hoverListener).attach();\r\n        this.getDataFromArgs();\r\n        __classPrivateFieldSet(this, _task, new CuiTaskRunner(this.args.timeout, false, this.removeTooltip.bind(this)));\r\n    }\r\n    onUpdate() {\r\n        this.getDataFromArgs();\r\n        if (__classPrivateFieldGet(this, _task))\r\n            __classPrivateFieldGet(this, _task).setTimeout(this.args.timeout);\r\n    }\r\n    onDestroy() {\r\n        this.removeTooltip();\r\n        __classPrivateFieldGet(this, _hoverListener).detach();\r\n    }\r\n    onHover(ev) {\r\n        if (ev.isHovering) {\r\n            this.createTooltip();\r\n        }\r\n        else {\r\n            this.removeTooltip();\r\n        }\r\n    }\r\n    createTooltip() {\r\n        if (is(__classPrivateFieldGet(this, _tooltip)) || !is(this.args.content)) {\r\n            return;\r\n        }\r\n        const box = this.element.getBoundingClientRect();\r\n        __classPrivateFieldSet(this, _tooltip, new ElementBuilder(\"div\").setClasses(__classPrivateFieldGet(this, _tooltipDataCls)).build());\r\n        __classPrivateFieldGet(this, _tooltip).textContent = this.args.content;\r\n        __classPrivateFieldGet(this, _tooltip).style.maxWidth = `${this.args.width}px`;\r\n        document.body.appendChild(__classPrivateFieldGet(this, _tooltip));\r\n        this.mutate(() => {\r\n            if (!__classPrivateFieldGet(this, _tooltip)) {\r\n                return;\r\n            }\r\n            const toolbox = __classPrivateFieldGet(this, _tooltip).getBoundingClientRect();\r\n            __classPrivateFieldGet(this, _positionCalculator).setMargin(__classPrivateFieldGet(this, _margin));\r\n            try {\r\n                let [x, y] = __classPrivateFieldGet(this, _positionCalculator).calculate(box, toolbox);\r\n                __classPrivateFieldGet(this, _tooltip).style.top = `${y}px`;\r\n                __classPrivateFieldGet(this, _tooltip).style.left = `${x}px`;\r\n                this.toggleActions();\r\n                if (__classPrivateFieldGet(this, _task))\r\n                    __classPrivateFieldGet(this, _task).start();\r\n            }\r\n            catch (e) {\r\n                this.logError(e.message, \"createTooltip\", e);\r\n            }\r\n        });\r\n    }\r\n    removeTooltip() {\r\n        if (!is(__classPrivateFieldGet(this, _tooltip))) {\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _task))\r\n            __classPrivateFieldGet(this, _task).stop();\r\n        this.mutate(() => {\r\n            //@ts-ignore already checked\r\n            __classPrivateFieldGet(this, _tooltip).remove();\r\n            __classPrivateFieldSet(this, _tooltip, undefined);\r\n        });\r\n    }\r\n    getDataFromArgs() {\r\n        __classPrivateFieldGet(this, _positionCalculator).setMargin(this.args.margin);\r\n        __classPrivateFieldGet(this, _positionCalculator).setStatic(this.args.pos);\r\n        __classPrivateFieldSet(this, _actions, CuiActionsListFactory.get(this.args.action));\r\n    }\r\n    toggleActions() {\r\n        if (!__classPrivateFieldGet(this, _tooltip)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _actions).forEach(action => {\r\n            // @ts-ignore\r\n            action.toggle(__classPrivateFieldGet(this, _tooltip));\r\n        });\r\n    }\r\n}\r\n_hoverListener = new WeakMap(), _tooltip = new WeakMap(), _margin = new WeakMap(), _positionCalculator = new WeakMap(), _tooltipDataCls = new WeakMap(), _actions = new WeakMap(), _task = new WeakMap();\r\n","import { CuiAccordionComponent } from \"./accordion/accordion\";\r\nimport { CuiBanerComponent } from \"./banner/banner\";\r\nimport { CuiCircleComponent } from \"./circle/circle\";\r\nimport { CuiCloseComponent } from \"./close/close\";\r\nimport { CuiCoverComponent } from \"./cover/cover\";\r\nimport { CuiDialogComponent } from \"./dialog/dialog\";\r\nimport { CuiDropComponenet } from \"./drop/drop\";\r\nimport { CuiFloatComponent } from \"./float/float\";\r\nimport { CuiIconComponent } from \"./icon/icon\";\r\nimport { CuiIntersectionComponent } from \"./intersection/intersection\";\r\nimport { CuiOffCanvasComponent } from \"./offcanvas/offcanvas\";\r\nimport { CuiOffsetComponent } from \"./offset/offset\";\r\nimport { CuiOpenComponent } from \"./open/open\";\r\nimport { CuiResizeComponent } from \"./resize/resize\";\r\nimport { CuiScrollComponent } from \"./scroll/scroll\";\r\nimport { CuiScrollspyComponent } from \"./scrollspy/scrollspy\";\r\nimport { CuiSortableComponent } from \"./sortable/sortable\";\r\nimport { CuiSpinnerComponent } from \"./spinner/spinner\";\r\nimport { CuiSliderComponent } from \"./switch/slider\";\r\nimport { CuiSwitchComponent } from \"./switch/switch\";\r\nimport { CuiSwitcherComponent } from \"./switch/switcher\";\r\nimport { CuiToggleComponent } from \"./toggle/toggle\";\r\nimport { CuiTooltipComponent } from \"./tooltip/tooltip\";\r\n/**\r\n * Function that initializes and returns all components available in package\r\n * @param attributes - object holding data needed for components initialization\r\n */\r\nexport function GetComponents(attributes) {\r\n    let prefix = attributes === null || attributes === void 0 ? void 0 : attributes.prefix;\r\n    return [\r\n        new CuiIconComponent(prefix),\r\n        new CuiTooltipComponent(prefix),\r\n        new CuiCircleComponent(prefix),\r\n        new CuiSpinnerComponent(prefix),\r\n        new CuiScrollComponent(prefix),\r\n        new CuiScrollspyComponent(prefix),\r\n        new CuiIntersectionComponent(prefix),\r\n        new CuiOpenComponent(prefix),\r\n        new CuiCloseComponent(prefix),\r\n        new CuiToggleComponent(prefix),\r\n        new CuiDialogComponent(prefix),\r\n        new CuiOffCanvasComponent(prefix),\r\n        new CuiAccordionComponent(prefix),\r\n        new CuiDropComponenet(prefix),\r\n        new CuiOffsetComponent(prefix),\r\n        new CuiSwitchComponent(prefix),\r\n        new CuiSwitcherComponent(prefix),\r\n        new CuiFloatComponent(prefix),\r\n        new CuiSliderComponent(prefix),\r\n        new CuiBanerComponent(prefix),\r\n        new CuiCoverComponent(prefix),\r\n        new CuiSortableComponent(prefix),\r\n        new CuiResizeComponent(prefix),\r\n    ];\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _bus, _boundClick;\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiWindowClickPlugin {\r\n    constructor() {\r\n        this.name = 'click-plugin';\r\n        _bus.set(this, void 0);\r\n        _boundClick.set(this, void 0);\r\n        this.description = \"CuiWindowClickPlugin\";\r\n        __classPrivateFieldSet(this, _bus, undefined);\r\n        __classPrivateFieldSet(this, _boundClick, this.onWindowClick.bind(this));\r\n    }\r\n    init(utils) {\r\n        __classPrivateFieldSet(this, _bus, utils.bus);\r\n        window.addEventListener('click', __classPrivateFieldGet(this, _boundClick));\r\n    }\r\n    destroy() {\r\n        window.removeEventListener('click', __classPrivateFieldGet(this, _boundClick));\r\n    }\r\n    onWindowClick(ev) {\r\n        if (__classPrivateFieldGet(this, _bus))\r\n            __classPrivateFieldGet(this, _bus).emit(EVENTS.WINDOW_CLICK, null, ev);\r\n    }\r\n}\r\n_bus = new WeakMap(), _boundClick = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _callback, _keys, _inProgress, _singleEmit, _isAttached, _onKeyDownBound, _onKeyUpBound;\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiKeyPressListener {\r\n    constructor(singleEmit, keys) {\r\n        _callback.set(this, void 0);\r\n        _keys.set(this, void 0);\r\n        _inProgress.set(this, void 0);\r\n        _singleEmit.set(this, void 0);\r\n        _isAttached.set(this, void 0);\r\n        _onKeyDownBound.set(this, void 0);\r\n        _onKeyUpBound.set(this, void 0);\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _singleEmit, true);\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n        __classPrivateFieldSet(this, _keys, keys !== null && keys !== void 0 ? keys : []);\r\n        __classPrivateFieldSet(this, _onKeyDownBound, this.onKeyDown.bind(this));\r\n        __classPrivateFieldSet(this, _onKeyUpBound, this.onKeyUp.bind(this));\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _inProgress);\r\n    }\r\n    attach() {\r\n        document.addEventListener('keydown', __classPrivateFieldGet(this, _onKeyDownBound));\r\n        if (__classPrivateFieldGet(this, _singleEmit)) {\r\n            document.addEventListener('keyup', __classPrivateFieldGet(this, _onKeyUpBound));\r\n        }\r\n        __classPrivateFieldSet(this, _isAttached, true);\r\n    }\r\n    detach() {\r\n        document.removeEventListener('keydown', __classPrivateFieldGet(this, _onKeyDownBound));\r\n        if (__classPrivateFieldGet(this, _singleEmit)) {\r\n            document.addEventListener('keyup', __classPrivateFieldGet(this, _onKeyUpBound));\r\n        }\r\n        __classPrivateFieldSet(this, _isAttached, false);\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _isAttached);\r\n    }\r\n    onKeyDown(ev) {\r\n        if (__classPrivateFieldGet(this, _inProgress)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, true);\r\n        try {\r\n            if ((!is(__classPrivateFieldGet(this, _keys)) || __classPrivateFieldGet(this, _keys).includes(ev.code)) && __classPrivateFieldGet(this, _callback)) {\r\n                __classPrivateFieldGet(this, _callback).call(this, ev);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        finally {\r\n            if (!__classPrivateFieldGet(this, _singleEmit))\r\n                __classPrivateFieldSet(this, _inProgress, false);\r\n        }\r\n    }\r\n    onKeyUp(ev) {\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n    }\r\n}\r\n_callback = new WeakMap(), _keys = new WeakMap(), _inProgress = new WeakMap(), _singleEmit = new WeakMap(), _isAttached = new WeakMap(), _onKeyDownBound = new WeakMap(), _onKeyUpBound = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _listener, _bus;\r\nimport { CuiKeyPressListener } from \"cui-light-core/dist/esm/listeners/keys\";\r\nimport { EVENTS } from \"cui-light-core/dist/esm/utils/statics\";\r\nexport class CuiKeysObserver {\r\n    constructor(bus) {\r\n        _listener.set(this, void 0);\r\n        _bus.set(this, void 0);\r\n        __classPrivateFieldSet(this, _bus, bus);\r\n        __classPrivateFieldSet(this, _listener, new CuiKeyPressListener(true));\r\n        __classPrivateFieldGet(this, _listener).setCallback(this.onKeyDown.bind(this));\r\n    }\r\n    connect() {\r\n        __classPrivateFieldGet(this, _listener).attach();\r\n    }\r\n    disconnect() {\r\n        __classPrivateFieldGet(this, _listener).detach();\r\n    }\r\n    onKeyDown(ev) {\r\n        __classPrivateFieldGet(this, _bus).emit(EVENTS.KEYDOWN, null, {\r\n            timestamp: Date.now(),\r\n            event: ev\r\n        });\r\n    }\r\n}\r\n_listener = new WeakMap(), _bus = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _keysObserver;\r\nimport { CuiKeysObserver } from \"./observer\";\r\nexport class CuiKeysObserverPlugin {\r\n    constructor(keySetup) {\r\n        this.name = 'keys-observer';\r\n        _keysObserver.set(this, void 0);\r\n        this.description = \"CuiKeysObserverPlugin\";\r\n        this.setup = keySetup;\r\n        __classPrivateFieldSet(this, _keysObserver, undefined);\r\n    }\r\n    init(utils) {\r\n        __classPrivateFieldSet(this, _keysObserver, new CuiKeysObserver(utils.bus));\r\n        __classPrivateFieldGet(this, _keysObserver).connect();\r\n    }\r\n    destroy() {\r\n        if (__classPrivateFieldGet(this, _keysObserver))\r\n            __classPrivateFieldGet(this, _keysObserver).disconnect();\r\n    }\r\n}\r\n_keysObserver = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _mediaQuery, _callback, _isInitialized, _inProgress, _onEventBound;\r\nexport class CuiMediaQueryListener {\r\n    constructor(mediaQuery) {\r\n        _mediaQuery.set(this, void 0);\r\n        _callback.set(this, void 0);\r\n        _isInitialized.set(this, void 0);\r\n        _inProgress.set(this, void 0);\r\n        _onEventBound.set(this, void 0);\r\n        __classPrivateFieldSet(this, _mediaQuery, mediaQuery);\r\n        __classPrivateFieldSet(this, _isInitialized, false);\r\n        __classPrivateFieldSet(this, _callback, undefined);\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _onEventBound, this.event.bind(this));\r\n    }\r\n    setCallback(callback) {\r\n        __classPrivateFieldSet(this, _callback, callback);\r\n    }\r\n    isInProgress() {\r\n        return __classPrivateFieldGet(this, _inProgress);\r\n    }\r\n    attach() {\r\n        if (!window.matchMedia || __classPrivateFieldGet(this, _isInitialized) || !__classPrivateFieldGet(this, _mediaQuery)) {\r\n            return;\r\n        }\r\n        window.matchMedia(__classPrivateFieldGet(this, _mediaQuery))\r\n            .addEventListener('change', __classPrivateFieldGet(this, _onEventBound));\r\n        __classPrivateFieldSet(this, _isInitialized, true);\r\n    }\r\n    detach() {\r\n        if (__classPrivateFieldGet(this, _isInitialized)) {\r\n            window.matchMedia(__classPrivateFieldGet(this, _mediaQuery)).removeEventListener('change', __classPrivateFieldGet(this, _onEventBound));\r\n            __classPrivateFieldSet(this, _isInitialized, false);\r\n        }\r\n    }\r\n    isAttached() {\r\n        return __classPrivateFieldGet(this, _isInitialized);\r\n    }\r\n    event(ev) {\r\n        if (__classPrivateFieldGet(this, _inProgress) || !__classPrivateFieldGet(this, _callback)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, true);\r\n        try {\r\n            __classPrivateFieldGet(this, _callback).call(this, ev);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        finally {\r\n            __classPrivateFieldSet(this, _inProgress, false);\r\n        }\r\n    }\r\n}\r\n_mediaQuery = new WeakMap(), _callback = new WeakMap(), _isInitialized = new WeakMap(), _inProgress = new WeakMap(), _onEventBound = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _listener, _utils;\r\nimport { getSystemLightMode } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiMediaQueryListener } from \"cui-light-core/dist/esm/listeners/media\";\r\nexport class CuiAutoLightModePlugin {\r\n    constructor(autoLightInit) {\r\n        this.description = 'Dark vs Light mode auto switcher';\r\n        this.name = 'auto-light';\r\n        _listener.set(this, void 0);\r\n        _utils.set(this, void 0);\r\n        this.description = \"CuiAutoLightModePlugin\";\r\n        this.setup = autoLightInit;\r\n        __classPrivateFieldSet(this, _utils, undefined);\r\n        __classPrivateFieldSet(this, _listener, undefined);\r\n    }\r\n    init(utils) {\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n        if (this.setup.autoLight && getSystemLightMode() === 'dark') {\r\n            __classPrivateFieldGet(this, _utils).setLightMode('dark');\r\n        }\r\n        __classPrivateFieldSet(this, _listener, new CuiMediaQueryListener('(prefers-color-scheme: dark)'));\r\n        __classPrivateFieldGet(this, _listener).setCallback(this.onChange.bind(this));\r\n        __classPrivateFieldGet(this, _listener).attach();\r\n    }\r\n    destroy() {\r\n        if (__classPrivateFieldGet(this, _listener))\r\n            __classPrivateFieldGet(this, _listener).detach();\r\n    }\r\n    onChange(ev) {\r\n        var _a;\r\n        if (!__classPrivateFieldGet(this, _utils)) {\r\n            return;\r\n        }\r\n        let autoLightSetup = __classPrivateFieldGet(this, _utils).setup.plugins[this.description];\r\n        let autoLight = (_a = autoLightSetup === null || autoLightSetup === void 0 ? void 0 : autoLightSetup.autoLight) !== null && _a !== void 0 ? _a : false;\r\n        if (autoLight) {\r\n            if (ev.matches) {\r\n                __classPrivateFieldGet(this, _utils).setLightMode('dark');\r\n            }\r\n            else {\r\n                __classPrivateFieldGet(this, _utils).setLightMode('light');\r\n            }\r\n        }\r\n    }\r\n}\r\n_listener = new WeakMap(), _utils = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _listener, _utils;\r\nimport { getSystemPrintMode } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiMediaQueryListener } from \"cui-light-core/dist/esm/listeners/media\";\r\nexport class CuiAutoPrintModePlugin {\r\n    constructor(autoPrintInit) {\r\n        this.description = 'Auto print mode';\r\n        this.name = 'auto-print';\r\n        _listener.set(this, void 0);\r\n        _utils.set(this, void 0);\r\n        this.description = \"CuiAutoPrintModePlugin\";\r\n        this.setup = autoPrintInit;\r\n        __classPrivateFieldSet(this, _listener, undefined);\r\n        __classPrivateFieldSet(this, _utils, undefined);\r\n    }\r\n    init(utils) {\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n        if (this.setup.autoPrint && getSystemPrintMode()) {\r\n            __classPrivateFieldGet(this, _utils).setPrintMode(true);\r\n        }\r\n        __classPrivateFieldSet(this, _listener, new CuiMediaQueryListener('print'));\r\n        __classPrivateFieldGet(this, _listener).setCallback(this.onChange.bind(this));\r\n        __classPrivateFieldGet(this, _listener).attach();\r\n    }\r\n    destroy() {\r\n        if (__classPrivateFieldGet(this, _listener))\r\n            __classPrivateFieldGet(this, _listener).detach();\r\n    }\r\n    onChange(ev) {\r\n        var _a, _b;\r\n        if (!__classPrivateFieldGet(this, _utils)) {\r\n            return;\r\n        }\r\n        this.setup = __classPrivateFieldGet(this, _utils).setup.plugins[this.description];\r\n        let autoPrint = (_b = (_a = this.setup) === null || _a === void 0 ? void 0 : _a.autoPrint) !== null && _b !== void 0 ? _b : false;\r\n        if (autoPrint) {\r\n            if (ev.matches) {\r\n                __classPrivateFieldGet(this, _utils).setPrintMode(true);\r\n            }\r\n            else {\r\n                __classPrivateFieldGet(this, _utils).setPrintMode(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n_listener = new WeakMap(), _utils = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _red, _green, _blue, _alpha, _colorStr, _colorStr_1;\r\nimport { getRangeValue, is, isInRange, } from \"../utils/functions\";\r\nimport { CuiColorError } from \"./errors\";\r\nexport class CuiColor {\r\n    constructor(red, green, blue, alpha) {\r\n        _red.set(this, void 0);\r\n        _green.set(this, void 0);\r\n        _blue.set(this, void 0);\r\n        _alpha.set(this, void 0);\r\n        __classPrivateFieldSet(this, _red, 0);\r\n        __classPrivateFieldSet(this, _blue, 0);\r\n        __classPrivateFieldSet(this, _green, 0);\r\n        __classPrivateFieldSet(this, _alpha, 0);\r\n        this.set(red, green, blue, alpha);\r\n    }\r\n    static create(colorStr) {\r\n        if (!is(colorStr)) {\r\n            throw new CuiColorError(`Given color value is not in a valid format`);\r\n        }\r\n        let parser;\r\n        if (colorStr.startsWith(\"#\")) {\r\n            parser = new HexColorParser(colorStr);\r\n        }\r\n        else if (colorStr.startsWith(\"rgb\")) {\r\n            parser = new RgbColorParser(colorStr);\r\n        }\r\n        else {\r\n            throw new CuiColorError(\"Unknown color string format\");\r\n        }\r\n        let res = parser.parse();\r\n        if (!res) {\r\n            throw new CuiColorError(\"Color was not parsed\");\r\n        }\r\n        return res;\r\n    }\r\n    set(red, green, blue, alpha) {\r\n        __classPrivateFieldSet(this, _alpha, getRangeValue(alpha !== null && alpha !== void 0 ? alpha : 1, 0, 1));\r\n        __classPrivateFieldSet(this, _blue, getRangeValue(blue, 0, 255));\r\n        __classPrivateFieldSet(this, _red, getRangeValue(red, 0, 255));\r\n        __classPrivateFieldSet(this, _green, getRangeValue(green, 0, 255));\r\n    }\r\n    setRed(red) {\r\n        __classPrivateFieldSet(this, _red, getRangeValue(red, 0, 255));\r\n    }\r\n    setGreen(green) {\r\n        __classPrivateFieldSet(this, _green, getRangeValue(green, 0, 255));\r\n    }\r\n    setBlue(blue) {\r\n        __classPrivateFieldSet(this, _blue, getRangeValue(blue, 0, 255));\r\n    }\r\n    opacity(val) {\r\n        __classPrivateFieldSet(this, _alpha, getRangeValue(val, 0, 1));\r\n        return this;\r\n    }\r\n    lighten(amount) {\r\n        this.shade(amount);\r\n        return this;\r\n    }\r\n    darken(amount) {\r\n        this.shade(-amount);\r\n        return this;\r\n    }\r\n    invert() {\r\n        __classPrivateFieldSet(this, _blue, 255 - __classPrivateFieldGet(this, _blue));\r\n        __classPrivateFieldSet(this, _red, 255 - __classPrivateFieldGet(this, _red));\r\n        __classPrivateFieldSet(this, _green, 255 - __classPrivateFieldGet(this, _green));\r\n        return this;\r\n    }\r\n    getColorValue(type) {\r\n        const t = type ? type.toLowerCase() : '#';\r\n        switch (type) {\r\n            case 'red':\r\n                return __classPrivateFieldGet(this, _red);\r\n            case 'green':\r\n                return __classPrivateFieldGet(this, _green);\r\n            case 'blue':\r\n                return __classPrivateFieldGet(this, _blue);\r\n            case 'alpha':\r\n                return __classPrivateFieldGet(this, _alpha);\r\n        }\r\n        return -1;\r\n    }\r\n    toCssString() {\r\n        return `rgba(${__classPrivateFieldGet(this, _red)}, ${__classPrivateFieldGet(this, _green)}, ${__classPrivateFieldGet(this, _blue)}, ${__classPrivateFieldGet(this, _alpha)})`;\r\n    }\r\n    shade(percent, self = true) {\r\n        __classPrivateFieldSet(this, _red, this.shadeSingle(__classPrivateFieldGet(this, _red), percent, self));\r\n        __classPrivateFieldSet(this, _green, this.shadeSingle(__classPrivateFieldGet(this, _green), percent, self));\r\n        __classPrivateFieldSet(this, _blue, this.shadeSingle(__classPrivateFieldGet(this, _blue), percent, self));\r\n    }\r\n    shadeSingle(val, percent, self = true) {\r\n        let rel = self ? val : 255;\r\n        let prop = (rel * percent) / 100;\r\n        let newVal = val + Math.round(prop);\r\n        return getRangeValue(newVal, 0, 255);\r\n    }\r\n    clone() {\r\n        return new CuiColor(__classPrivateFieldGet(this, _red), __classPrivateFieldGet(this, _green), __classPrivateFieldGet(this, _blue), __classPrivateFieldGet(this, _alpha));\r\n    }\r\n}\r\n_red = new WeakMap(), _green = new WeakMap(), _blue = new WeakMap(), _alpha = new WeakMap();\r\nexport class HexColorParser {\r\n    constructor(colorStr) {\r\n        _colorStr.set(this, void 0);\r\n        __classPrivateFieldSet(this, _colorStr, colorStr);\r\n    }\r\n    trim() {\r\n        __classPrivateFieldSet(this, _colorStr, __classPrivateFieldGet(this, _colorStr) ? __classPrivateFieldGet(this, _colorStr).trim() : \"\");\r\n        return;\r\n    }\r\n    isValid() {\r\n        return is(__classPrivateFieldGet(this, _colorStr)) && __classPrivateFieldGet(this, _colorStr).startsWith(\"#\");\r\n    }\r\n    parse() {\r\n        let red = 0;\r\n        let blue = 0;\r\n        let green = 0;\r\n        let alpha = 1;\r\n        let length = __classPrivateFieldGet(this, _colorStr).length;\r\n        if (__classPrivateFieldGet(this, _colorStr).length === 4) {\r\n            red = parseInt(__classPrivateFieldGet(this, _colorStr)[1] + __classPrivateFieldGet(this, _colorStr)[1], 16);\r\n            green = parseInt(__classPrivateFieldGet(this, _colorStr)[2] + __classPrivateFieldGet(this, _colorStr)[2], 16);\r\n            blue = parseInt(__classPrivateFieldGet(this, _colorStr)[3] + __classPrivateFieldGet(this, _colorStr)[3], 16);\r\n        }\r\n        else {\r\n            red = parseInt(__classPrivateFieldGet(this, _colorStr)[1] + __classPrivateFieldGet(this, _colorStr)[2], 16);\r\n            green = parseInt(__classPrivateFieldGet(this, _colorStr)[3] + __classPrivateFieldGet(this, _colorStr)[4], 16);\r\n            blue = parseInt(__classPrivateFieldGet(this, _colorStr)[5] + __classPrivateFieldGet(this, _colorStr)[6], 16);\r\n            if (length > 7) {\r\n                let alphaHex = parseInt(__classPrivateFieldGet(this, _colorStr)[7] + __classPrivateFieldGet(this, _colorStr)[8], 16);\r\n                alpha = parseFloat((alphaHex / 255).toFixed(2));\r\n            }\r\n        }\r\n        return new CuiColor(red, green, blue, alpha);\r\n    }\r\n}\r\n_colorStr = new WeakMap();\r\nexport class RgbColorParser {\r\n    constructor(colorStr) {\r\n        _colorStr_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _colorStr_1, colorStr);\r\n    }\r\n    trim() {\r\n        __classPrivateFieldSet(this, _colorStr_1, is(__classPrivateFieldGet(this, _colorStr_1)) ? __classPrivateFieldGet(this, _colorStr_1).trim() : \"\");\r\n    }\r\n    isValid() {\r\n        return is(__classPrivateFieldGet(this, _colorStr_1)) && __classPrivateFieldGet(this, _colorStr_1).startsWith(\"rgb\");\r\n    }\r\n    parse() {\r\n        let len = __classPrivateFieldGet(this, _colorStr_1).length;\r\n        let str = __classPrivateFieldGet(this, _colorStr_1).startsWith(\"rgba\") ? __classPrivateFieldGet(this, _colorStr_1).substring(5, len - 1) : __classPrivateFieldGet(this, _colorStr_1).substring(4, len - 1);\r\n        let split = str.split(\",\");\r\n        if (!isInRange(split.length, 3, 4)) {\r\n            return undefined;\r\n        }\r\n        let red = parseInt(split[0]);\r\n        let green = parseInt(split[1]);\r\n        let blue = parseInt(split[2]);\r\n        let alpha = split.length === 4 ? parseFloat(split[3]) : 1;\r\n        return new CuiColor(red, green, blue, alpha);\r\n    }\r\n}\r\n_colorStr_1 = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _set, _setter, _setter_1, _set_1;\r\nimport { CSS_VARIABLES } from \"cui-light-core/dist/esm/utils/statics\";\r\nconst baseColorSets = {\r\n    \"light\": {\r\n        background: CSS_VARIABLES.colorLightBackground,\r\n        base: CSS_VARIABLES.colorLightBase,\r\n        active: CSS_VARIABLES.colorLightActive,\r\n        muted: CSS_VARIABLES.colorLightMuted,\r\n    },\r\n    \"dark\": {\r\n        background: CSS_VARIABLES.colorDarkBackground,\r\n        base: CSS_VARIABLES.colorDarkBase,\r\n        active: CSS_VARIABLES.colorDarkActive,\r\n        muted: CSS_VARIABLES.colorDarkMuted,\r\n    }\r\n};\r\nconst themeColors = {\r\n    'accent': {\r\n        base: CSS_VARIABLES.colorAccent,\r\n        muted: CSS_VARIABLES.colorAccentMuted,\r\n        active: CSS_VARIABLES.colorAccentActive,\r\n        shade: CSS_VARIABLES.colorAccentShade,\r\n        shadeDark: CSS_VARIABLES.colorAccentShadeDark\r\n    },\r\n    'secondary': {\r\n        base: CSS_VARIABLES.colorSecondary,\r\n        muted: CSS_VARIABLES.colorSecondaryMuted,\r\n        active: CSS_VARIABLES.colorSecondaryActive,\r\n        shade: CSS_VARIABLES.colorSecondaryShade,\r\n        shadeDark: CSS_VARIABLES.colorSecondaryShadeDark\r\n    },\r\n    'error': {\r\n        base: CSS_VARIABLES.colorError,\r\n        muted: CSS_VARIABLES.colorErrorMuted,\r\n        active: CSS_VARIABLES.colorErrorActive,\r\n        shade: CSS_VARIABLES.colorErrorShade,\r\n        shadeDark: CSS_VARIABLES.colorErrorShadeDark\r\n    },\r\n    'warning': {\r\n        base: CSS_VARIABLES.colorWarning,\r\n        muted: CSS_VARIABLES.colorWarningMuted,\r\n        active: CSS_VARIABLES.colorWarningActive,\r\n        shade: CSS_VARIABLES.colorWarningShade,\r\n        shadeDark: CSS_VARIABLES.colorWarningShadeDark\r\n    },\r\n    'success': {\r\n        base: CSS_VARIABLES.colorSuccess,\r\n        muted: CSS_VARIABLES.colorSuccessMuted,\r\n        active: CSS_VARIABLES.colorSuccessActive,\r\n        shade: CSS_VARIABLES.colorSuccessShade,\r\n        shadeDark: CSS_VARIABLES.colorSuccessShadeDark\r\n    }\r\n};\r\nexport class CuiBaseColorsSetter {\r\n    constructor(colorSet, setter) {\r\n        _set.set(this, void 0);\r\n        _setter.set(this, void 0);\r\n        __classPrivateFieldSet(this, _set, baseColorSets[colorSet]);\r\n        __classPrivateFieldSet(this, _setter, setter);\r\n    }\r\n    setBackgroundColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set).background, color);\r\n    }\r\n    setBaseColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set).base, color);\r\n    }\r\n    setActiveColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set).active, color);\r\n    }\r\n    setMutedColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set).muted, color);\r\n    }\r\n    setBaseColors(colors) {\r\n        if (!__classPrivateFieldGet(this, _set)) {\r\n            return;\r\n        }\r\n        let set = {};\r\n        set[__classPrivateFieldGet(this, _set).background] = colors.background ? colors.background.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set).active] = colors.active ? colors.active.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set).muted] = colors.muted ? colors.muted.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set).base] = colors.base ? colors.base.toCssString() : \"\";\r\n        __classPrivateFieldGet(this, _setter).setProperties(set);\r\n    }\r\n    setColor(color, value) {\r\n        __classPrivateFieldGet(this, _setter).setProperty(color, value.toCssString());\r\n    }\r\n}\r\n_set = new WeakMap(), _setter = new WeakMap();\r\nexport class CuiThemeColorsSetter {\r\n    constructor(set, setter) {\r\n        _setter_1.set(this, void 0);\r\n        _set_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _setter_1, setter);\r\n        __classPrivateFieldSet(this, _set_1, themeColors[set]);\r\n    }\r\n    setBaseColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set_1).base, color);\r\n    }\r\n    setMutedColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set_1).muted, color);\r\n    }\r\n    setActiveColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set_1).active, color);\r\n    }\r\n    setShadeColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set_1).shade, color);\r\n    }\r\n    setShadeDarkColor(color) {\r\n        this.setColor(__classPrivateFieldGet(this, _set_1).shadeDark, color);\r\n    }\r\n    setColors(colors) {\r\n        if (!__classPrivateFieldGet(this, _set_1)) {\r\n            return;\r\n        }\r\n        let set = {};\r\n        set[__classPrivateFieldGet(this, _set_1).shade] = colors.shade ? colors.shade.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set_1).shadeDark] = colors.shadeDark ? colors.shadeDark.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set_1).active] = colors.active ? colors.active.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set_1).muted] = colors.muted ? colors.muted.toCssString() : \"\";\r\n        set[__classPrivateFieldGet(this, _set_1).base] = colors.base ? colors.base.toCssString() : \"\";\r\n        __classPrivateFieldGet(this, _setter_1).setProperties(set);\r\n    }\r\n    setAutoColors(base) {\r\n        let set = {};\r\n        set[__classPrivateFieldGet(this, _set_1).base] = base.toCssString();\r\n        set[__classPrivateFieldGet(this, _set_1).shade] = base.lighten(30).toCssString();\r\n        set[__classPrivateFieldGet(this, _set_1).shadeDark] = base.darken(30).toCssString();\r\n        set[__classPrivateFieldGet(this, _set_1).active] = base.darken(10).toCssString();\r\n        set[__classPrivateFieldGet(this, _set_1).muted] = base.lighten(10).toCssString();\r\n        __classPrivateFieldGet(this, _setter_1).setProperties(set);\r\n    }\r\n    setColor(color, value) {\r\n        __classPrivateFieldGet(this, _setter_1).setProperty(color, value.toCssString());\r\n    }\r\n}\r\n_setter_1 = new WeakMap(), _set_1 = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _utils;\r\nimport { are, is } from \"cui-light-core/dist/esm/utils/functions\";\r\nexport class PropertySetter {\r\n    constructor(utils) {\r\n        _utils.set(this, void 0);\r\n        __classPrivateFieldSet(this, _utils, utils);\r\n    }\r\n    setProperty(property, value) {\r\n        if (!are(property, value)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _utils).interactions.mutate(() => {\r\n            __classPrivateFieldGet(this, _utils).setProperty(property, value);\r\n        }, null);\r\n    }\r\n    setProperties(set) {\r\n        if (!is(set)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _utils).interactions.mutate(() => {\r\n            for (let property in set) {\r\n                if (is(set[property]))\r\n                    __classPrivateFieldGet(this, _utils).setProperty(property, set[property]);\r\n            }\r\n        }, null);\r\n    }\r\n}\r\n_utils = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _setter;\r\nimport { is } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CSS_VARIABLES } from \"cui-light-core/dist/esm/utils/statics\";\r\nimport { CuiBaseColorsSetter, CuiThemeColorsSetter } from \"./colors\";\r\nimport { PropertySetter } from \"./setter\";\r\nexport class CuiPropertiesHandler {\r\n    constructor(utils) {\r\n        _setter.set(this, void 0);\r\n        __classPrivateFieldSet(this, _setter, new PropertySetter(utils));\r\n    }\r\n    /**\r\n     * Sets main font size\r\n     * @param {number} value numeric value\r\n     * @param {string} unit optional - size unit, px if not provided\r\n     */\r\n    setBaseFontSize(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.fontSize, value, unit);\r\n    }\r\n    /**\r\n     * Sets base animation time\r\n     * @param {number} value - time value\r\n     * @param {string} unit  - optional - ms is passed when no provided\r\n     */\r\n    setAnimationTime(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.animationTime, value, unit !== null && unit !== void 0 ? unit : 'ms');\r\n    }\r\n    /**\r\n    * Sets long animation time\r\n    * @param {number} value - time value\r\n    * @param {string} unit  - optional - ms is passed when no provided\r\n    */\r\n    setAnimationTimeLong(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.setAnimationTimeLong, value, unit !== null && unit !== void 0 ? unit : 'ms');\r\n    }\r\n    /**\r\n    * Sets short animation time\r\n    * @param {number} value - time value\r\n    * @param {string} unit  - optional - ms is passed when no provided\r\n    */\r\n    setAnimationTimeShort(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.setAnimationTimeShort, value, unit !== null && unit !== void 0 ? unit : 'ms');\r\n    }\r\n    /**\r\n    * Sets main line size\r\n    * @param {number} value numeric value\r\n    * @param {string} unit optional - size unit, px if not provided\r\n    */\r\n    setBaseLineHeight(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.lineHeight, value, unit);\r\n    }\r\n    /**\r\n     * Sets base margin value\r\n     * @param {number} value - margin value\r\n     * @param {string} unit - optional - margin unit (px default)\r\n     */\r\n    setBaseMargin(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.margin, value, unit);\r\n    }\r\n    /**\r\n    * Sets base padding value\r\n    * @param {number} value - padding value\r\n    * @param {string} unit - optional - padding unit (px default)\r\n    */\r\n    setBasePadding(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.padding, value, unit);\r\n    }\r\n    /**\r\n    * Sets base border radius\r\n    * @param {number} value - border value\r\n    * @param {string} unit - optional - border unit (px default)\r\n    */\r\n    setBaseBorderRadius(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.borderRadius, value, unit);\r\n    }\r\n    /**\r\n   * Sets component space\r\n   * @param {number} value - space value\r\n   * @param {string} unit - optional - space unit (px default)\r\n   */\r\n    setComponentSpace(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.componentSpace, value, unit);\r\n    }\r\n    /**\r\n     * Sets new accordion chevron icon\r\n     * @param value A SVG formatted to be replaced default value\r\n     */\r\n    setAccordionIcon(value) {\r\n        if (!is(value)) {\r\n            return;\r\n        }\r\n        this.setCSSVariable(CSS_VARIABLES.accordionIcon, value);\r\n    }\r\n    /**\r\n    * Sets a scrollbar width\r\n    * @param value A SVG formatted to be replaced default value\r\n    */\r\n    setScrollbarWidth(value, unit) {\r\n        this.setBaseUnitValue(CSS_VARIABLES.scrollbarWidth, value, unit);\r\n    }\r\n    /**\r\n     * Sets app viewport light background color\r\n     * @param color color to be set\r\n     */\r\n    setAppBackgroundColor(color) {\r\n        if (!is(color)) {\r\n            return;\r\n        }\r\n        this.setCSSVariable(CSS_VARIABLES.colorLightAppBackground, color.toCssString());\r\n    }\r\n    /**\r\n    * Sets app viewport dark background color\r\n    * @param color color to be set\r\n    */\r\n    setDarkAppBackgroundColor(color) {\r\n        if (!is(color)) {\r\n            return;\r\n        }\r\n        this.setCSSVariable(CSS_VARIABLES.colorDarkAppBackground, color.toCssString());\r\n    }\r\n    getBaseColorsSetter() {\r\n        return new CuiBaseColorsSetter(\"light\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getDarkBaseColorsSetter() {\r\n        return new CuiBaseColorsSetter(\"dark\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getAccentThemeColorsSetter() {\r\n        return new CuiThemeColorsSetter(\"accent\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getSecondaryThemeColorsSetter() {\r\n        return new CuiThemeColorsSetter(\"secondary\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getErrorThemeColorsSetter() {\r\n        return new CuiThemeColorsSetter(\"error\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getWarningThemeColorsSetter() {\r\n        return new CuiThemeColorsSetter(\"warning\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    getSuccessThemeColorsSetter() {\r\n        return new CuiThemeColorsSetter(\"success\", __classPrivateFieldGet(this, _setter));\r\n    }\r\n    /**\r\n     * Sets property in interactive way\r\n     * @param {string} name property name - value of {prefix} is replaced by current prefix\r\n     * @param {string} value - property value\r\n     */\r\n    setCSSVariable(name, value) {\r\n        __classPrivateFieldGet(this, _setter).setProperty(name, value);\r\n    }\r\n    /**\r\n     * Sets unit type CSS variable property\r\n     * @param name Variable name\r\n     * @param value numeric value\r\n     * @param unit unit - optional - px is default value\r\n     */\r\n    setBaseUnitValue(name, value, unit) {\r\n        if (!is(value)) {\r\n            return;\r\n        }\r\n        let strVal = `${value}${unit !== null && unit !== void 0 ? unit : \"px\"}`;\r\n        this.setCSSVariable(name, strVal);\r\n    }\r\n}\r\n_setter = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _log;\r\nimport { CuiColor } from \"cui-light-core/dist/esm/models/colors\";\r\nimport { CuiLoggerFactory } from \"cui-light-core/dist/esm/factories/logger\";\r\nimport { is } from \"cui-light-core/dist/esm/utils/functions\";\r\nimport { CuiPropertiesHandler } from \"./handler\";\r\nexport class CuiCSSVariablesPlugin {\r\n    constructor(keySetup) {\r\n        this.name = 'css-variables-plugin';\r\n        _log.set(this, void 0);\r\n        this.description = \"CuiCSSVariablesPlugin\";\r\n        this.setup = keySetup;\r\n        __classPrivateFieldSet(this, _log, CuiLoggerFactory.get(\"CuiCSSVariablesPlugin\"));\r\n        this.handler = undefined;\r\n    }\r\n    init(utils) {\r\n        this.handler = new CuiPropertiesHandler(utils);\r\n        utils.bus.on(\"csschange\", this.onCssChange.bind(this));\r\n    }\r\n    destroy() {\r\n    }\r\n    onCssChange(event) {\r\n        if (!this.handler) {\r\n            return;\r\n        }\r\n        let setter = null;\r\n        let accentSetter = null;\r\n        switch (event.method) {\r\n            case \"baseFontSize\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setBaseFontSize(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"baseLineHeight\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setBaseLineHeight(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"animationTime\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setAnimationTime(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"animationTimeLong\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setAnimationTimeLong(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"animationTimeShort\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setAnimationTimeShort(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"margin\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setBaseMargin(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"padding\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setBasePadding(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"borderRadius\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setBaseBorderRadius(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"componentSpace\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setComponentSpace(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"scrollbarWidth\":\r\n                if (!this.isArgNumber(event.arg))\r\n                    return;\r\n                this.handler.setScrollbarWidth(event.arg.value, event.arg.unit);\r\n                break;\r\n            case \"accordionIcon\":\r\n                if (!is(event.arg))\r\n                    return;\r\n                this.handler.setAccordionIcon(event.arg);\r\n                break;\r\n            case \"appLightBackground\":\r\n                if (!is(event.arg))\r\n                    return;\r\n                this.handler.setAppBackgroundColor(CuiColor.create(event.arg));\r\n                break;\r\n            case \"appDarkBackground\":\r\n                if (!is(event.arg))\r\n                    return;\r\n                this.handler.setDarkAppBackgroundColor(CuiColor.create(event.arg));\r\n                break;\r\n            case \"appDarkBackground\":\r\n                if (!is(event.arg))\r\n                    return;\r\n                this.handler.setDarkAppBackgroundColor(CuiColor.create(event.arg));\r\n                break;\r\n            case \"mainColorBackground\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                setter = this.getBaseColorSetter(event.arg.palette);\r\n                if (setter)\r\n                    setter.setBackgroundColor(CuiColor.create(event.arg.color));\r\n                break;\r\n            case \"mainColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                setter = this.getBaseColorSetter(event.arg.palette);\r\n                if (setter)\r\n                    setter.setBaseColor(CuiColor.create(event.arg.color));\r\n                break;\r\n            case \"mainColorMuted\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                setter = this.getBaseColorSetter(event.arg.palette);\r\n                if (setter)\r\n                    setter.setMutedColor(CuiColor.create(event.arg.color));\r\n                break;\r\n            case \"mainColorActive\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                setter = this.getBaseColorSetter(event.arg.palette);\r\n                if (setter)\r\n                    setter.setActiveColor(CuiColor.create(event.arg.color));\r\n                break;\r\n            case \"themeAutoColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setAutoColors(CuiColor.create(event.arg.color));\r\n            case \"themeBaseColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setAutoColors(CuiColor.create(event.arg.color));\r\n            case \"themeMutedColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setMutedColor(CuiColor.create(event.arg.color));\r\n            case \"themeActiveColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setActiveColor(CuiColor.create(event.arg.color));\r\n            case \"themeShadeColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setShadeColor(CuiColor.create(event.arg.color));\r\n            case \"themeShadeDarkColor\":\r\n                if (!this.isArgColor(event.arg))\r\n                    return;\r\n                accentSetter = this.getAccentColorSetter(event.arg.palette);\r\n                if (accentSetter)\r\n                    accentSetter.setShadeDarkColor(CuiColor.create(event.arg.color));\r\n            default:\r\n                __classPrivateFieldGet(this, _log).warning(\"Unknown event method\", \"onCssChange\");\r\n        }\r\n    }\r\n    isArgNumber(arg) {\r\n        return is(arg) && is(arg.value);\r\n    }\r\n    isArgColor(arg) {\r\n        return is(arg) && is(arg.palette) && is(arg.color);\r\n    }\r\n    getBaseColorSetter(pallete) {\r\n        if (!this.handler) {\r\n            return undefined;\r\n        }\r\n        let prerp = pallete.trim().toLowerCase();\r\n        switch (prerp) {\r\n            case \"light\":\r\n                return this.handler.getBaseColorsSetter();\r\n            case \"dark\":\r\n                return this.handler.getDarkBaseColorsSetter();\r\n        }\r\n    }\r\n    getAccentColorSetter(pallete) {\r\n        if (!this.handler) {\r\n            return undefined;\r\n        }\r\n        let prerp = pallete.trim().toLowerCase();\r\n        switch (prerp) {\r\n            case \"accent\":\r\n                return this.handler.getAccentThemeColorsSetter();\r\n            case \"secondary\":\r\n                return this.handler.getSecondaryThemeColorsSetter();\r\n            case \"error\":\r\n                return this.handler.getErrorThemeColorsSetter();\r\n            case \"warning\":\r\n                return this.handler.getWarningThemeColorsSetter();\r\n            case \"success\":\r\n                return this.handler.getSuccessThemeColorsSetter();\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n}\r\n_log = new WeakMap();\r\n","import { CuiWindowClickPlugin } from \"./click/click\";\r\nimport { CuiKeysObserverPlugin } from \"./keys/keys\";\r\nimport { CuiAutoLightModePlugin } from \"./light/light\";\r\nimport { CuiAutoPrintModePlugin } from \"./print/print\";\r\nimport { CuiCSSVariablesPlugin } from \"./properties/properties\";\r\nexport function GetPlugins(init) {\r\n    let light = init ? init.autoLight : true;\r\n    let print = init ? init.autoPrint : true;\r\n    return [\r\n        new CuiAutoLightModePlugin({ autoLight: light }),\r\n        new CuiAutoPrintModePlugin({ autoPrint: print }),\r\n        new CuiKeysObserverPlugin({}),\r\n        new CuiWindowClickPlugin(),\r\n        new CuiCSSVariablesPlugin({})\r\n    ];\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _writes, _reads, _raf, _isScheduled, _limit, _reportCallback;\r\nexport class FastDom {\r\n    constructor() {\r\n        _writes.set(this, void 0);\r\n        _reads.set(this, void 0);\r\n        _raf.set(this, void 0);\r\n        _isScheduled.set(this, false);\r\n        _limit.set(this, void 0);\r\n        _reportCallback.set(this, void 0);\r\n        __classPrivateFieldSet(this, _raf, window.requestAnimationFrame.bind(window));\r\n        __classPrivateFieldSet(this, _writes, []);\r\n        __classPrivateFieldSet(this, _reads, []);\r\n        __classPrivateFieldSet(this, _limit, 5);\r\n        __classPrivateFieldSet(this, _reportCallback, undefined);\r\n    }\r\n    onError(callback) {\r\n        __classPrivateFieldSet(this, _reportCallback, callback);\r\n    }\r\n    mutate(callback, ctx, ...args) {\r\n        __classPrivateFieldGet(this, _reads).push(this.createTask(callback, ctx, ...args));\r\n        this.schedule();\r\n    }\r\n    fetch(callback, ctx, ...args) {\r\n        __classPrivateFieldGet(this, _writes).push(this.createTask(callback, ctx, ...args));\r\n        this.schedule();\r\n    }\r\n    createTask(callback, ctx, ...args) {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n    run(tasks) {\r\n        let task = null;\r\n        while (task = tasks.shift()) {\r\n            task();\r\n        }\r\n    }\r\n    schedule(recursion) {\r\n        if (!__classPrivateFieldGet(this, _isScheduled)) {\r\n            __classPrivateFieldSet(this, _isScheduled, true);\r\n            if (recursion && recursion >= __classPrivateFieldGet(this, _limit)) {\r\n                throw new Error(\"Fast Dom limit reached\");\r\n            }\r\n            else {\r\n                __classPrivateFieldGet(this, _raf).call(this, this.flush.bind(this, recursion));\r\n            }\r\n        }\r\n    }\r\n    flush(recursion) {\r\n        let rec = recursion !== null && recursion !== void 0 ? recursion : 0;\r\n        let error = null;\r\n        let writes = __classPrivateFieldGet(this, _writes);\r\n        let reads = __classPrivateFieldGet(this, _reads);\r\n        try {\r\n            this.run(reads);\r\n            this.run(writes);\r\n        }\r\n        catch (e) {\r\n            if (__classPrivateFieldGet(this, _reportCallback)) {\r\n                __classPrivateFieldGet(this, _reportCallback).call(this, e);\r\n            }\r\n            else {\r\n                console.error(`An error has been captured in interactions: ${e.message}`);\r\n                //console.error(e)\r\n            }\r\n            error = e;\r\n        }\r\n        __classPrivateFieldSet(this, _isScheduled, false);\r\n        if (error || __classPrivateFieldGet(this, _writes).length || __classPrivateFieldGet(this, _reads).length) {\r\n            this.schedule(rec + 1);\r\n        }\r\n    }\r\n}\r\n_writes = new WeakMap(), _reads = new WeakMap(), _raf = new WeakMap(), _isScheduled = new WeakMap(), _limit = new WeakMap(), _reportCallback = new WeakMap();\r\nexport class SyncInteractions {\r\n    constructor() {\r\n        this.isRunning = false;\r\n        this.tasks = [];\r\n        this.raf = window.requestAnimationFrame.bind(window);\r\n    }\r\n    mutate(callback, ctx, ...args) {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args));\r\n        this.schedule();\r\n    }\r\n    fetch(callback, ctx, ...args) {\r\n        this.tasks.push(this.createTask(callback, ctx, ...args));\r\n        this.schedule();\r\n    }\r\n    schedule() {\r\n        if (!this.isRunning) {\r\n            this.isRunning = true;\r\n            this.raf(this.flush.bind(this));\r\n        }\r\n    }\r\n    flush() {\r\n        let task = null;\r\n        while (task = this.tasks.shift()) {\r\n            try {\r\n                task();\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.isRunning = false;\r\n    }\r\n    createTask(callback, ctx, ...args) {\r\n        return ctx || args ? callback.bind(ctx, ...args) : callback;\r\n    }\r\n}\r\n","import { FastDom, SyncInteractions } from \"../utils/interactions\";\r\nexport class CuiInteractionsFactory {\r\n    /**\r\n     * Gets new instance of component focused logger\r\n     * @param type - Interactions type\r\n     */\r\n    static get(type, errorReport) {\r\n        const interactionType = type;\r\n        switch (interactionType) {\r\n            case 'async':\r\n                const fastDom = new FastDom();\r\n                if (errorReport)\r\n                    fastDom.onError(errorReport);\r\n                return fastDom;\r\n            default:\r\n                return new SyncInteractions();\r\n        }\r\n    }\r\n}\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _keys, _values;\r\nimport { ItemNotFoundError, ArgumentError } from \"../models/errors\";\r\nimport { is } from \"./functions\";\r\nexport class CuiDictionary {\r\n    constructor(init) {\r\n        _keys.set(this, void 0);\r\n        _values.set(this, void 0);\r\n        __classPrivateFieldSet(this, _keys, []);\r\n        __classPrivateFieldSet(this, _values, []);\r\n        if (init) {\r\n            init.forEach(x => {\r\n                if (!is(x.key)) {\r\n                    __classPrivateFieldSet(this, _keys, []);\r\n                    __classPrivateFieldSet(this, _values, []);\r\n                    throw new ArgumentError(\"Key is empty\");\r\n                }\r\n                this.add(x.key, x.value);\r\n            });\r\n        }\r\n    }\r\n    add(key, value) {\r\n        this.throwOnEmptyKey(key);\r\n        if (this.containsKey(key))\r\n            throw new Error(\"Key already exists\");\r\n        __classPrivateFieldGet(this, _keys).push(key);\r\n        __classPrivateFieldGet(this, _values).push(value);\r\n    }\r\n    remove(key) {\r\n        if (!is(key)) {\r\n            return;\r\n        }\r\n        let index = __classPrivateFieldGet(this, _keys).indexOf(key);\r\n        if (index >= 0) {\r\n            __classPrivateFieldGet(this, _keys).splice(index, 1);\r\n            __classPrivateFieldGet(this, _values).splice(index, 1);\r\n        }\r\n    }\r\n    get(key) {\r\n        this.throwOnEmptyKey(key);\r\n        let index = this.indexOf(key);\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        return __classPrivateFieldGet(this, _values)[index];\r\n    }\r\n    containsKey(key) {\r\n        return is(key) && this.indexOf(key) >= 0;\r\n    }\r\n    keys() {\r\n        return __classPrivateFieldGet(this, _keys);\r\n    }\r\n    values() {\r\n        return __classPrivateFieldGet(this, _values);\r\n    }\r\n    indexOf(key) {\r\n        return is(key) ? __classPrivateFieldGet(this, _keys).indexOf(key) : -1;\r\n    }\r\n    update(key, value) {\r\n        this.throwOnEmptyKey(key);\r\n        let index = this.indexOf(key);\r\n        if (index < 0) {\r\n            throw new ItemNotFoundError(`Item with key [${key}] not found`);\r\n        }\r\n        __classPrivateFieldGet(this, _values)[index] = value;\r\n    }\r\n    clear() {\r\n        __classPrivateFieldSet(this, _values, []);\r\n        __classPrivateFieldSet(this, _keys, []);\r\n    }\r\n    throwOnEmptyKey(key) {\r\n        if (!is(key)) {\r\n            throw new ArgumentError(\"Key is empty\");\r\n        }\r\n    }\r\n}\r\n_keys = new WeakMap(), _values = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _cache, _maxSize;\r\nimport { CuiDictionary } from \"../utils/dictionary\";\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiCacheManager {\r\n    constructor(maxSize) {\r\n        _cache.set(this, void 0);\r\n        _maxSize.set(this, void 0);\r\n        __classPrivateFieldSet(this, _cache, new CuiDictionary());\r\n        __classPrivateFieldSet(this, _maxSize, maxSize !== null && maxSize !== void 0 ? maxSize : 500);\r\n    }\r\n    put(key, element) {\r\n        if (!is(key))\r\n            return;\r\n        if (this.has(key)) {\r\n            __classPrivateFieldGet(this, _cache).update(key, element);\r\n            return;\r\n        }\r\n        this.clean();\r\n        __classPrivateFieldGet(this, _cache).add(key, element);\r\n    }\r\n    get(key) {\r\n        if (!this.has(key))\r\n            return undefined;\r\n        let item = __classPrivateFieldGet(this, _cache).get(key);\r\n        if (item && item.refresh()) {\r\n            return item;\r\n        }\r\n        __classPrivateFieldGet(this, _cache).remove(key);\r\n        return undefined;\r\n    }\r\n    has(key) {\r\n        return is(key) ? __classPrivateFieldGet(this, _cache).containsKey(key) : false;\r\n    }\r\n    remove(key) {\r\n        if (!is(key))\r\n            return false;\r\n        if (this.has(key)) {\r\n            __classPrivateFieldGet(this, _cache).remove(key);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clear() {\r\n        __classPrivateFieldGet(this, _cache).clear();\r\n    }\r\n    clean() {\r\n        if (__classPrivateFieldGet(this, _cache).keys().length >= __classPrivateFieldGet(this, _maxSize)) {\r\n            __classPrivateFieldGet(this, _cache).remove(__classPrivateFieldGet(this, _cache).keys()[0]);\r\n        }\r\n    }\r\n}\r\n_cache = new WeakMap(), _maxSize = new WeakMap();\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _log, _executor, _executor_1;\r\nimport { is } from \"../utils/functions\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\nclass EmitHandlerBase {\r\n    constructor() {\r\n        this.queue = [];\r\n        this.isBusy = false;\r\n    }\r\n    idMatches(emitId, handleId) {\r\n        return !is(emitId) || (is(emitId) && emitId == handleId);\r\n    }\r\n}\r\nexport class SimpleEventEmitHandler extends EmitHandlerBase {\r\n    constructor(executor) {\r\n        super();\r\n        _log.set(this, void 0);\r\n        _executor.set(this, void 0);\r\n        __classPrivateFieldSet(this, _executor, executor);\r\n        __classPrivateFieldSet(this, _log, CuiLoggerFactory.get(\"SimpleEventEmitHandler\"));\r\n    }\r\n    handle(events, cuid, args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!is(events)) {\r\n                __classPrivateFieldGet(this, _log).warning(\"No events provided\");\r\n                return;\r\n            }\r\n            this.queue.push({\r\n                events: events,\r\n                cuid: cuid,\r\n                args: args\r\n            });\r\n            if (!this.isBusy) {\r\n                if (!this.isBusy) {\r\n                    this.isBusy = true;\r\n                    this.perform();\r\n                    if (this.queue.length > 0) {\r\n                        yield this.perform();\r\n                    }\r\n                    this.isBusy = false;\r\n                }\r\n            }\r\n            return;\r\n        });\r\n    }\r\n    perform() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let task = this.queue.shift();\r\n            if (!task) {\r\n                return;\r\n            }\r\n            for (let id in task.events) {\r\n                let event = task.events[id];\r\n                try {\r\n                    if (this.idMatches(task.cuid, event.$cuid))\r\n                        yield __classPrivateFieldGet(this, _executor).execute(event.callback, task.args);\r\n                }\r\n                catch (e) {\r\n                    __classPrivateFieldGet(this, _log).error(e);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n_log = new WeakMap(), _executor = new WeakMap();\r\nexport class TaskedEventEmitHandler extends EmitHandlerBase {\r\n    constructor(executor) {\r\n        super();\r\n        _executor_1.set(this, void 0);\r\n        __classPrivateFieldSet(this, _executor_1, executor);\r\n    }\r\n    handle(events, cuid, args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!is(events)) {\r\n                return;\r\n            }\r\n            this.queue.push({\r\n                events: events,\r\n                cuid: cuid,\r\n                args: args\r\n            });\r\n            if (!this.isBusy) {\r\n                this.isBusy = true;\r\n                this.perform();\r\n                if (this.queue.length > 0) {\r\n                    this.perform();\r\n                }\r\n                this.isBusy = false;\r\n            }\r\n            return;\r\n        });\r\n    }\r\n    perform() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let task = this.queue.shift();\r\n            let promises = [];\r\n            if (!task) {\r\n                return Promise.all(promises);\r\n            }\r\n            for (let id in task.events) {\r\n                let event = task.events[id];\r\n                if (this.idMatches(task.cuid, event.$cuid))\r\n                    promises.push(__classPrivateFieldGet(this, _executor_1).execute(event.callback, task.args));\r\n            }\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n}\r\n_executor_1 = new WeakMap();\r\nexport class CuiEventEmitHandlerFactory {\r\n    static get(name, executor) {\r\n        switch (name) {\r\n            case \"tasked\":\r\n                return new TaskedEventEmitHandler(executor);\r\n            default:\r\n                return new SimpleEventEmitHandler(executor);\r\n        }\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport class CuiCallbackExecutor {\r\n    execute(callback, args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            args = args !== null && args !== void 0 ? args : [];\r\n            callback(...args);\r\n            return;\r\n        });\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _events, _log, _eventHandler, _name, _events_1, _log_1, _buses, _last, _isOn, _statistics;\r\nimport { is, are, generateRandomString, enumerateObject } from \"../utils/functions\";\r\nimport { ArgumentError } from \"../models/errors\";\r\nimport { CuiLoggerFactory } from \"../factories/logger\";\r\nimport { CuiEventEmitHandlerFactory, TaskedEventEmitHandler } from \"./handlers\";\r\nimport { CuiCallbackExecutor } from \"./executors\";\r\nexport class CuiEventBus {\r\n    constructor(emitHandler, name) {\r\n        _events.set(this, void 0);\r\n        _log.set(this, void 0);\r\n        _eventHandler.set(this, void 0);\r\n        _name.set(this, void 0);\r\n        __classPrivateFieldSet(this, _events, {});\r\n        __classPrivateFieldSet(this, _eventHandler, emitHandler);\r\n        __classPrivateFieldSet(this, _name, name !== null && name !== void 0 ? name : \"CuiEventBus\");\r\n        __classPrivateFieldSet(this, _log, CuiLoggerFactory.get(__classPrivateFieldGet(this, _name)));\r\n    }\r\n    /**\r\n     * Attaches event to event bus\r\n     *\r\n     * @param {string} name - Event name\r\n     * @param {any} callback - callback function\r\n     * @param {CuiContext} ctx - callback context with id\r\n     * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n     */\r\n    on(name, callback, cui) {\r\n        if (!are(name, callback)) {\r\n            throw new ArgumentError(\"Missing argument\");\r\n        }\r\n        // When context is not provided (e.g. anonymous function) then generate random\r\n        let id = __classPrivateFieldGet(this, _name) + \"-\" + generateRandomString();\r\n        if (!__classPrivateFieldGet(this, _events)[name]) {\r\n            __classPrivateFieldGet(this, _events)[name] = {};\r\n        }\r\n        if (this.isAttached(__classPrivateFieldGet(this, _events)[name], id, cui)) {\r\n            return null;\r\n        }\r\n        __classPrivateFieldGet(this, _log).debug(`Attaching new event: [${name}] for: [${id}]`);\r\n        __classPrivateFieldGet(this, _events)[name][id] = { callback: callback, $cuid: this.getCuid(cui) };\r\n        return id;\r\n    }\r\n    /**\r\n    * Detaches specific event from event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    detach(name, id) {\r\n        if (!are(name, id)) {\r\n            throw new ArgumentError(\"Missing argument\");\r\n        }\r\n        let ev = __classPrivateFieldGet(this, _events)[name];\r\n        __classPrivateFieldGet(this, _log).debug(`Detaching item: [${id}] from [${name}]`);\r\n        if (this.isAttached(ev, id)) {\r\n            delete ev[id];\r\n        }\r\n    }\r\n    /**\r\n    * Detaches all callbacks from event\r\n    *\r\n    * @param {string} name - Event name\r\n    */\r\n    detachAll(name) {\r\n        if (is(name) && __classPrivateFieldGet(this, _events)[name]) {\r\n            delete __classPrivateFieldGet(this, _events)[name];\r\n        }\r\n        else {\r\n            __classPrivateFieldGet(this, _log).error(`Event name is missing or incorrect`, \"detachAll\");\r\n        }\r\n    }\r\n    /**\r\n    * Emits event call to event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {string} cuid - id of component which emits the event\r\n    * @param {any[]} args  - event arguments\r\n    */\r\n    emit(event, cuid, ...args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!is(event)) {\r\n                throw new ArgumentError(\"Event name is incorrect\");\r\n            }\r\n            let callbacks = __classPrivateFieldGet(this, _events)[event];\r\n            if (is(callbacks)) {\r\n                __classPrivateFieldGet(this, _log).debug(`Emit: [${event}]`);\r\n                yield __classPrivateFieldGet(this, _eventHandler).handle(__classPrivateFieldGet(this, _events)[event], cuid, args);\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n    * Checks whether given context is already attached to specific event\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    isSubscribing(name, id, cui) {\r\n        let ev = __classPrivateFieldGet(this, _events)[name];\r\n        return this.isAttached(ev, id, cui);\r\n    }\r\n    /**\r\n     * Detaches callbacks by component cuid - this is used to clean up attachments on component deletion\r\n     * @param {string} event - event name\r\n     * @param {string} cuid - cuid of the component\r\n     */\r\n    detachByCuid(event, cuid) {\r\n        if (!are(event, cuid)) {\r\n            return;\r\n        }\r\n        let ev = __classPrivateFieldGet(this, _events)[event];\r\n        if (!is(ev)) {\r\n            return;\r\n        }\r\n        enumerateObject(Object.assign({}, ev), (evId, evValue) => {\r\n            if (evValue.$cuid === cuid) {\r\n                delete ev[evId];\r\n            }\r\n        });\r\n    }\r\n    isAttached(ev, id, cui) {\r\n        if (is(cui)) {\r\n            // @ts-ignore\r\n            return is(ev) && is(id) && is(ev[id]) && ev[id].$cuid == cui.$cuid;\r\n        }\r\n        return is(ev) && is(id) && is(ev[id]);\r\n    }\r\n    getCuid(cui) {\r\n        // @ts-ignore\r\n        return is(cui) ? cui.$cuid : null;\r\n    }\r\n}\r\n_events = new WeakMap(), _log = new WeakMap(), _eventHandler = new WeakMap(), _name = new WeakMap();\r\nexport class CuiEventExtBus {\r\n    constructor(setup) {\r\n        _events_1.set(this, void 0);\r\n        _log_1.set(this, void 0);\r\n        _buses.set(this, void 0);\r\n        _last.set(this, void 0);\r\n        __classPrivateFieldSet(this, _log_1, CuiLoggerFactory.get(\"CuiEventBus\"));\r\n        __classPrivateFieldSet(this, _buses, []);\r\n        __classPrivateFieldSet(this, _events_1, {});\r\n        __classPrivateFieldSet(this, _last, 0);\r\n        if (is(setup)) {\r\n            __classPrivateFieldGet(this, _log_1).debug(\"Initiating buses\");\r\n            let sorted = setup.length === 1 ? setup : setup.sort((first, second) => {\r\n                return first.priority - second.priority;\r\n            });\r\n            sorted.forEach((item, index) => {\r\n                __classPrivateFieldGet(this, _buses).push(this.initBusInstance(item.name, item.handler));\r\n                __classPrivateFieldSet(this, _events_1, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _events_1)), this.mapEvents(item.eventsDef, index)));\r\n                __classPrivateFieldGet(this, _log_1).debug(`Bus ${item.name} has been initialized with number: ${index}`);\r\n            });\r\n            __classPrivateFieldGet(this, _buses).push(this.initBusInstance(\"DefaultEventBus\", 'tasked'));\r\n            __classPrivateFieldSet(this, _last, __classPrivateFieldGet(this, _buses).length - 1);\r\n            __classPrivateFieldGet(this, _log_1).debug(`Bus initialization finished`);\r\n        }\r\n    }\r\n    /**\r\n     * Attaches event to event bus\r\n     *\r\n     * @param {string} name - Event name\r\n     * @param {any} callback - callback function\r\n     * @param {CuiContext} ctx - callback context with id\r\n     * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n     */\r\n    on(name, callback, cui) {\r\n        if (!are(name, callback)) {\r\n            throw new ArgumentError(\"Missing argument\");\r\n        }\r\n        return this.get(name).on(name, callback, cui);\r\n    }\r\n    /**\r\n    * Detaches specific event from event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    detach(name, id, cui) {\r\n        if (!are(name, id)) {\r\n            throw new ArgumentError(\"Missing argument\");\r\n        }\r\n        this.get(name).detach(name, id, cui);\r\n    }\r\n    /**\r\n    * Detaches all callbacks from event\r\n    *\r\n    * @param {string} name - Event name\r\n    */\r\n    detachAll(name) {\r\n        this.get(name).detachAll(name);\r\n    }\r\n    /**\r\n    * Emits event call to event bus\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {string} cuid - id of component which emits the event\r\n    * @param {any[]} args  - event arguments\r\n    */\r\n    emit(event, cuid, ...args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!is(event)) {\r\n                throw new ArgumentError(\"Event name is incorrect\");\r\n            }\r\n            return this.get(event).emit(event, cuid, ...args);\r\n        });\r\n    }\r\n    /**\r\n    * Checks whether given context is already attached to specific event\r\n    *\r\n    * @param {string} name - Event name\r\n    * @param {CuiContext} ctx - callback context with id\r\n    * @param {CuiElement} cui - optional - cui element which event shall be attached to\r\n    */\r\n    isSubscribing(name, id, cui) {\r\n        return this.get(name).isSubscribing(name, id, cui);\r\n    }\r\n    /**\r\n    * Detaches callbacks by component cuid - this is used to clean up attachments on component deletion\r\n    * @param {string} event - event name\r\n    * @param {string} cuid - cuid of the component\r\n    */\r\n    detachByCuid(event, cuid) {\r\n        if (!are(event, cuid)) {\r\n            return;\r\n        }\r\n        this.get(event).detachByCuid(event, cuid);\r\n    }\r\n    /**\r\n     * Creates and initializes event bus instance\r\n     * @param busName Event bus name for logger\r\n     * @param handlerName handler name to create proper handler instance\r\n     */\r\n    initBusInstance(busName, handlerName) {\r\n        if (!are(busName, handlerName)) {\r\n            throw new ArgumentError(\"Bus name or handler name is incorrect\");\r\n        }\r\n        let executor = new CuiCallbackExecutor();\r\n        let handler = CuiEventEmitHandlerFactory.get(handlerName, executor);\r\n        return new CuiEventBus(handler, busName);\r\n    }\r\n    /**\r\n     * Creates mapping object from events array\r\n     * @param events events array\r\n     * @param index queue number\r\n     */\r\n    mapEvents(events, index) {\r\n        return events.reduce((result, current) => {\r\n            if (!result[current]) {\r\n                return Object.assign(Object.assign({}, result), { [current]: index });\r\n            }\r\n            return result;\r\n        }, {});\r\n    }\r\n    /**\r\n     * Retrives porper event bus based on event name\r\n     * @param event\r\n     */\r\n    get(event) {\r\n        let idx = __classPrivateFieldGet(this, _events_1)[event];\r\n        return __classPrivateFieldGet(this, _buses)[idx !== null && idx !== void 0 ? idx : __classPrivateFieldGet(this, _last)];\r\n    }\r\n}\r\n_events_1 = new WeakMap(), _log_1 = new WeakMap(), _buses = new WeakMap(), _last = new WeakMap();\r\nexport class CuiEventBusFactory {\r\n    static get(setup) {\r\n        //@ts-ignore - setup is underfined check is perfromed\r\n        return is(setup) ? new CuiEventExtBus(setup) : new CuiEventBus(new TaskedEventEmitHandler(new CuiCallbackExecutor));\r\n    }\r\n}\r\nexport class CuiBusExtStatisticsHandler {\r\n    constructor(gather, queueCount) {\r\n        _isOn.set(this, void 0);\r\n        _statistics.set(this, void 0);\r\n        __classPrivateFieldSet(this, _isOn, gather);\r\n        __classPrivateFieldSet(this, _statistics, {\r\n            queueCount: queueCount,\r\n            events: {}\r\n        });\r\n    }\r\n    addEvent(event, queueNumber, emitCount) {\r\n        __classPrivateFieldGet(this, _statistics).events[event] = {\r\n            name: event,\r\n            queueNumber: queueNumber,\r\n            emits: emitCount !== null && emitCount !== void 0 ? emitCount : 0\r\n        };\r\n    }\r\n    addQueue() {\r\n        __classPrivateFieldGet(this, _statistics).queueCount += 1;\r\n    }\r\n    addEmit(event, queueNumber) {\r\n        if (!__classPrivateFieldGet(this, _isOn)) {\r\n            return;\r\n        }\r\n        if (__classPrivateFieldGet(this, _statistics).events[event]) {\r\n            __classPrivateFieldGet(this, _statistics).events[event].emits += 1;\r\n        }\r\n        else {\r\n            this.addEvent(event, queueNumber !== null && queueNumber !== void 0 ? queueNumber : -1, 1);\r\n        }\r\n    }\r\n    getStatistics() {\r\n        return __classPrivateFieldGet(this, _statistics);\r\n    }\r\n}\r\n_isOn = new WeakMap(), _statistics = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar _interactions;\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiDocumentStyleAppender {\r\n    constructor(interactions) {\r\n        _interactions.set(this, void 0);\r\n        __classPrivateFieldSet(this, _interactions, interactions);\r\n    }\r\n    append(style) {\r\n        if (is(style)) {\r\n            const head = document.head || document.getElementsByTagName('head')[0];\r\n            const node = document.createElement('style');\r\n            const text = document.createTextNode(style);\r\n            node.type = 'text/css';\r\n            node.appendChild(text);\r\n            head.appendChild(node);\r\n        }\r\n        return true;\r\n    }\r\n}\r\n_interactions = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _root, _interactions, _LIGHTEN_FACTOR, _DARKEN_FACTOR;\r\nimport { is, getRangeValue, are } from \"../utils/functions\";\r\nimport { CSS_APP_BACKGROUND_COLORS, CSS_COMPONENT_BACKGROUND_COLORS, CSS_COMPONENT_BORDER_COLORS, CSS_THEMES } from \"../utils/statics\";\r\nexport class CuiInstanceColorHandler {\r\n    constructor(interactions) {\r\n        _root.set(this, void 0);\r\n        _interactions.set(this, void 0);\r\n        _LIGHTEN_FACTOR.set(this, 15);\r\n        _DARKEN_FACTOR.set(this, 15);\r\n        __classPrivateFieldSet(this, _root, document.documentElement);\r\n        __classPrivateFieldSet(this, _interactions, interactions);\r\n    }\r\n    setAppBackground(light, dark) {\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_APP_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n    setComponentBackground(light, dark) {\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BACKGROUND_COLORS.dark, dark.toCssString());\r\n    }\r\n    setBordersColors(light, dark) {\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.light, light.toCssString());\r\n        this.setPropertyIn(CSS_COMPONENT_BORDER_COLORS.dark, dark.toCssString());\r\n    }\r\n    setColor(type, set) {\r\n        var _a, _b;\r\n        const colors = CSS_THEMES[type];\r\n        const baseColor = set.base;\r\n        if (!is(colors) || !is(baseColor)) {\r\n            return;\r\n        }\r\n        const mutedColor = (_a = set.muted) !== null && _a !== void 0 ? _a : baseColor.clone().lighten(__classPrivateFieldGet(this, _LIGHTEN_FACTOR));\r\n        const activeColor = (_b = set.active) !== null && _b !== void 0 ? _b : baseColor.clone().darken(__classPrivateFieldGet(this, _DARKEN_FACTOR));\r\n        __classPrivateFieldGet(this, _interactions).mutate(() => {\r\n            this.setProperty(colors.base, baseColor.toCssString());\r\n            this.setProperty(colors.active, activeColor.toCssString());\r\n            this.setProperty(colors.muted, mutedColor.toCssString());\r\n        }, this);\r\n    }\r\n    setLightenFactor(factor) {\r\n        __classPrivateFieldSet(this, _LIGHTEN_FACTOR, getRangeValue(factor, 0, 100));\r\n    }\r\n    setDarkenFactor(factor) {\r\n        __classPrivateFieldSet(this, _DARKEN_FACTOR, getRangeValue(factor, 0, 100));\r\n    }\r\n    setProperty(propertyName, value) {\r\n        __classPrivateFieldGet(this, _root).style.setProperty(propertyName, value);\r\n    }\r\n    setPropertyIn(propertyName, value) {\r\n        if (!are(value, propertyName)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldGet(this, _interactions).mutate(this.setProperty, this, propertyName, value);\r\n    }\r\n}\r\n_root = new WeakMap(), _interactions = new WeakMap(), _LIGHTEN_FACTOR = new WeakMap(), _DARKEN_FACTOR = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _items, _promises, _prevYValue, _inProgress, _previousSize, _threshold, _bus, _listenerBoundCall;\r\nimport { calcWindowSize, calcWindowSize2 } from \"../utils/functions\";\r\nimport { EVENTS } from \"../utils/statics\";\r\nexport class CuiResizeObserver {\r\n    constructor(bus, threshold) {\r\n        _items.set(this, void 0);\r\n        _promises.set(this, void 0);\r\n        _prevYValue.set(this, void 0);\r\n        _inProgress.set(this, void 0);\r\n        _previousSize.set(this, void 0);\r\n        _threshold.set(this, void 0);\r\n        _bus.set(this, void 0);\r\n        _listenerBoundCall.set(this, void 0);\r\n        __classPrivateFieldSet(this, _items, []);\r\n        __classPrivateFieldSet(this, _promises, []);\r\n        __classPrivateFieldSet(this, _prevYValue, window.innerWidth);\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n        __classPrivateFieldSet(this, _previousSize, calcWindowSize(window.innerWidth));\r\n        __classPrivateFieldSet(this, _threshold, threshold !== null && threshold !== void 0 ? threshold : 0);\r\n        __classPrivateFieldSet(this, _bus, bus);\r\n        __classPrivateFieldSet(this, _listenerBoundCall, this.listener.bind(this));\r\n    }\r\n    observe(target) {\r\n        let idx = __classPrivateFieldGet(this, _items).findIndex(x => x === target);\r\n        if (idx < 0) {\r\n            __classPrivateFieldGet(this, _items).push(target);\r\n        }\r\n    }\r\n    unobserve(target) {\r\n        let idx = __classPrivateFieldGet(this, _items).findIndex(x => x === target);\r\n        if (idx >= 0) {\r\n            __classPrivateFieldGet(this, _items).splice(idx, 1);\r\n        }\r\n    }\r\n    connect() {\r\n        window.addEventListener('resize', __classPrivateFieldGet(this, _listenerBoundCall));\r\n    }\r\n    disconnect() {\r\n        window.removeEventListener('resize', __classPrivateFieldGet(this, _listenerBoundCall));\r\n    }\r\n    pushUpdateToItems(resizeData) {\r\n        if (__classPrivateFieldGet(this, _items).length < 1) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _promises, []);\r\n        __classPrivateFieldGet(this, _items).forEach(x => {\r\n            __classPrivateFieldGet(this, _promises).push(x.resize(resizeData));\r\n        });\r\n        Promise.all(__classPrivateFieldGet(this, _promises));\r\n        __classPrivateFieldSet(this, _promises, []);\r\n    }\r\n    listener(ev) {\r\n        if (__classPrivateFieldGet(this, _inProgress)) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, true);\r\n        const diff = window.innerWidth - __classPrivateFieldGet(this, _prevYValue);\r\n        if (Math.abs(diff) >= __classPrivateFieldGet(this, _threshold)) {\r\n            const currentSize = calcWindowSize2(window.innerWidth);\r\n            if (currentSize !== __classPrivateFieldGet(this, _previousSize)) {\r\n                const resizeData = {\r\n                    current: currentSize,\r\n                    previous: __classPrivateFieldGet(this, _previousSize),\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                    timestamp: Date.now()\r\n                };\r\n                __classPrivateFieldGet(this, _bus).emit(EVENTS.RESIZE, \"\", resizeData);\r\n                this.pushUpdateToItems(resizeData);\r\n                __classPrivateFieldSet(this, _previousSize, currentSize);\r\n            }\r\n        }\r\n        __classPrivateFieldSet(this, _inProgress, false);\r\n    }\r\n}\r\n_items = new WeakMap(), _promises = new WeakMap(), _prevYValue = new WeakMap(), _inProgress = new WeakMap(), _previousSize = new WeakMap(), _threshold = new WeakMap(), _bus = new WeakMap(), _listenerBoundCall = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _tool;\r\nimport { is } from \"../utils/functions\";\r\nexport class CuiDevelopmentToolManager {\r\n    constructor(tool) {\r\n        _tool.set(this, void 0);\r\n        __classPrivateFieldSet(this, _tool, tool);\r\n    }\r\n    pushState(cuid, component, type, message, functionName) {\r\n        this.checkAndCall(() => {\r\n            // @ts-ignore - tool already checked\r\n            __classPrivateFieldGet(this, _tool).pushState(cuid, component, type, message, functionName);\r\n        });\r\n    }\r\n    registerElement(element, cuid, component) {\r\n        this.checkAndCall(() => {\r\n            // @ts-ignore - tool already checked\r\n            __classPrivateFieldGet(this, _tool).registerElement(element, cuid, component);\r\n        });\r\n    }\r\n    unregisterElement(cuid, component) {\r\n        this.checkAndCall(() => {\r\n            // @ts-ignore - tool already checked\r\n            __classPrivateFieldGet(this, _tool).unregisterElement(cuid, component);\r\n        });\r\n    }\r\n    setProperty(cuid, component, name, t) {\r\n        this.checkAndCall(() => {\r\n            // @ts-ignore - tool already checked\r\n            __classPrivateFieldGet(this, _tool).setProperty(cuid, component, name, t);\r\n        });\r\n    }\r\n    log(type, message, functionName) {\r\n        this.checkAndCall(() => {\r\n            // @ts-ignore - tool already checked\r\n            __classPrivateFieldGet(this, _tool).log(type, message, functionName);\r\n        });\r\n    }\r\n    checkAndCall(callback) {\r\n        if (!is(__classPrivateFieldGet(this, _tool))) {\r\n            return;\r\n        }\r\n        callback();\r\n    }\r\n}\r\n_tool = new WeakMap();\r\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n};\r\nvar _resizeObserver;\r\nimport { CuiSetup } from \"./setup\";\r\nimport { CuiInteractionsFactory } from \"../factories/interactions\";\r\nimport { CuiCacheManager } from \"../managers/cache\";\r\nimport { CuiEventBusFactory } from \"../bus/bus\";\r\nimport { are, getName, replacePrefix } from \"../utils/functions\";\r\nimport { CLASSES } from \"../utils/statics\";\r\nimport { CuiDocumentStyleAppender } from \"../styles/appender\";\r\nimport { CuiInstanceColorHandler } from \"../handlers/colors\";\r\nimport { CuiResizeObserver } from \"../observers/resize\";\r\nimport { CSSVariableError } from \"./errors\";\r\nimport { CuiDevelopmentToolManager } from \"../managers/development\";\r\nexport class CuiUtils {\r\n    constructor(initialSetup) {\r\n        _resizeObserver.set(this, void 0);\r\n        this.setup = new CuiSetup().fromInit(initialSetup);\r\n        this.interactions = CuiInteractionsFactory.get(initialSetup.interaction, this.onInteractionError.bind(this));\r\n        this.cache = new CuiCacheManager(this.setup.cacheSize);\r\n        this.bus = CuiEventBusFactory.get(initialSetup.busSetup);\r\n        this.colors = new CuiInstanceColorHandler(this.interactions);\r\n        this.development = new CuiDevelopmentToolManager(initialSetup.development);\r\n        this.styleAppender = new CuiDocumentStyleAppender(this.interactions);\r\n        __classPrivateFieldSet(this, _resizeObserver, new CuiResizeObserver(this.bus, this.setup.resizeThreshold));\r\n        __classPrivateFieldGet(this, _resizeObserver).connect();\r\n    }\r\n    setLightMode(mode) {\r\n        const name = getName(this.setup.prefix, CLASSES.dark);\r\n        const classes = document.body.classList;\r\n        if (mode === 'dark' && !classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.add(name);\r\n            }, this);\r\n        }\r\n        else if (mode === 'light' && classes.contains(name)) {\r\n            this.interactions.mutate(() => {\r\n                classes.remove(name);\r\n            }, this);\r\n        }\r\n    }\r\n    getLightMode() {\r\n        const name = getName(this.setup.prefix, CLASSES.dark);\r\n        return document.body.classList.contains(name) ? 'dark' : 'light';\r\n    }\r\n    setPrintMode(flag) {\r\n        const name = getName(this.setup.prefix, CLASSES.print);\r\n        const classes = document.body.classList;\r\n        if (flag && !classes.contains(name)) {\r\n            classes.add(name);\r\n        }\r\n        else if (!flag && classes.contains(name)) {\r\n            classes.remove(name);\r\n        }\r\n    }\r\n    isPrintMode() {\r\n        const name = getName(this.setup.prefix, CLASSES.print);\r\n        return document.body.classList.contains(name);\r\n    }\r\n    setProperty(name, value) {\r\n        if (!are(name, value)) {\r\n            throw new CSSVariableError(\"Property or value was not provided\");\r\n        }\r\n        let prop = replacePrefix(name, this.setup.prefix);\r\n        document.documentElement.style.setProperty(prop, value);\r\n    }\r\n    onInteractionError(e) {\r\n        console.error(\"An error has been captured from interactions\");\r\n        console.error(e);\r\n    }\r\n}\r\n_resizeObserver = new WeakMap();\r\n"],"sourceRoot":""}